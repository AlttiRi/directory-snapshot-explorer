{"version":3,"file":"index.js","sources":["node-modules:///vite/modulepreload-polyfill","source-maps:///util.js","source-maps:///core/entries.js","source-maps:///core/debug.js","source-maps:///core/entry.js","source-maps:///core/state.js","source-maps:///core/search.js","source-maps:///core/scan-parser.js","source-maps:///core/folders.js","source-maps:///components/AddressBar_Base.vue","source-maps:///components/AddressBar_Folder.vue","source-maps:///components/AddressBar.vue","source-maps:///components/Search.vue","source-maps:///components/file-input/FileEntry.js","source-maps:///components/file-input/file-input-state.js","source-maps:///components/file-input/FileInputDefaultHoverText.vue","source-maps:///components/file-input/FileInputDefaultText.vue","source-maps:///components/file-input/FileInput.vue","source-maps:///components/FileSelect.vue","source-maps:///components/Row.vue","source-maps:///components/IntersectionRow.vue","source-maps:///components/Content.vue","source-maps:///components/Status.vue","source-maps:///components/Switch.vue","source-maps:///components/Main.vue","source-maps:///main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export const setImmediate = globalThis.setImmediate || /*#__PURE__*/ (function() {\n    const {port1, port2} = new MessageChannel();\n    const queue = [];\n\n    port1.onmessage = function() {\n        const callback = queue.shift();\n        callback();\n    };\n\n    return function(callback) {\n        port2.postMessage(null);\n        queue.push(callback);\n    };\n})();\n\nexport function sleep(ms) {\n    if (ms === undefined) {\n        return new Promise(resolve => setImmediate(resolve));\n    }\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport const shuffle = () => Math.random() >= 0.5 ? -1 : 1;\n\nconst videoExtensions = [\"mp4\", \"webm\", \"mkv\", \"avi\"];\nexport function isVideo(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return videoExtensions.includes(ext);\n}\nconst imageExtensions = [\"png\", \"jpg\", \"jpeg\", \"gif\", \"tiff\", \"webp\"];\nexport function isImage(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return imageExtensions.includes(ext);\n}\n\nexport function debounce(runnable, ms = 50) {\n    let timerId;\n    return function() {\n        // console.log({timerId});\n        if (timerId) {\n            clearTimeout(timerId);\n        }\n        timerId = setTimeout(() => {\n            runnable.apply(this, arguments);\n            timerId = null;\n        }, ms);\n    }\n}\n\n// \"Sun, 10 Jan 2021 22:22:22 GMT\" -> \"2021.01.10\"\nexport function dateToDayDateString(dateValue, utc = true) {\n    const _date = new Date(dateValue);\n    if (_date.toString() === \"Invalid Date\") {\n        console.warn(\"Invalid Date value: \", dateValue);\n    }\n    function pad2(str) {\n        return str.toString().padStart(2, \"0\");\n    }\n    const _utc = utc ? \"UTC\" : \"\";\n    const year  = _date[`get${_utc}FullYear`]();\n    const month = _date[`get${_utc}Month`]() + 1;\n    const date  = _date[`get${_utc}Date`]();\n\n    return year + \".\" + pad2(month) + \".\" + pad2(date);\n}\n\n// \"Sun, 10 Jan 2021 22:22:22 GMT\" -> \"2021.01.10 22:22:22Z\"\nexport function dateToDayDateTimeString(dateValue, utc = true) {\n    const _date = new Date(dateValue);\n    function pad2(str) {\n        return str.toString().padStart(2, \"0\");\n    }\n    const _utc = utc ? \"UTC\" : \"\";\n    const hours    = _date[`get${_utc}Hours`]();\n    const minutes  = _date[`get${_utc}Minutes`]();\n    const seconds  = _date[`get${_utc}Seconds`]();\n\n    const time = pad2(hours)+ \":\" + pad2(minutes) + \":\" + pad2(seconds);\n    return dateToDayDateString(_date, utc) + \" \" + time + (utc ? \"Z\" : \"\");\n}\n\n\nexport function structuredClone(object) {\n    return new Promise(resolve => {\n        const {port1, port2} = new MessageChannel();\n        port1.onmessage = function(message) {\n            resolve(message.data);\n        };\n        port2.postMessage(object);\n    });\n}\n\nexport function appendScript(src, integrity) {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement(\"script\");\n        script.onload = resolve;\n        script.onerror = event => reject({message: \"Failed to load script\", src, integrity, event});\n        script.src = src;\n        script.async = true;\n        if (integrity) {\n            script.integrity = integrity;\n            script.crossOrigin = \"anonymous\";\n        }\n        document.body.append(script);\n    });\n}\n\n/**\n * `chunkSize` is 65536, ReadableStream uses the same size.\n * There is no speed difference between using of different the chunk's sizes.\n * @param {ArrayBuffer|Uint8Array} arrayBuffer\n * @param {Number} [chunkSize=65536]\n * @return {Generator<Uint8Array>}\n */\nexport function *iterateArrayBuffer(arrayBuffer, chunkSize = 65536) {\n    const buffer = new Uint8Array(arrayBuffer);\n    let index = 0;\n    while (true) {\n        const chunk = buffer.subarray(index, index + chunkSize);\n        if (!chunk.length) {\n            break;\n        }\n        yield chunk;\n        index += chunkSize;\n    }\n}\n\n/**\n * @param {Response|ReadableStream|Blob} dataSource\n * @return {AsyncGenerator<Uint8Array>}\n */\nexport async function *iterateAsyncDataSource(dataSource) {\n    if (dataSource instanceof Response) {\n        dataSource = dataSource.body;\n    }\n    if (dataSource instanceof ReadableStream) {\n        yield *iterateReadableStream(dataSource);\n    } else if (dataSource instanceof Blob) {\n        for (const part of iterateBlob(dataSource)) {\n            yield await part;\n        }\n    }\n}\n\n\n/**\n * @param {ReadableStream} stream\n * @return {AsyncGenerator<Uint8Array>}\n */\nexport async function *iterateReadableStream(stream) {\n    const reader = stream.getReader();\n    while (true) {\n        const {done, /** @type {Uint8Array} */ value} = await reader.read();\n        if (done) {\n            break;\n        }\n        yield value;\n    }\n}\n\n/**\n * Iterates Blob (or File).\n * Note: `chunkSize` affects the execution speed\n * @param {Blob} blob\n * @param {Number} [chunkSize=2097152]\n * @return {Generator<Promise<Uint8Array>>|AsyncGenerator<Uint8Array>}\n */\nexport function *iterateBlob(blob, chunkSize = 2 * 1024 * 1024) {\n    let index = 0;\n    while (true) {\n        const blobChunk = blob.slice(index, index + chunkSize);\n        if (!blobChunk.size) {break;}\n\n        yield read(blobChunk);\n        index += chunkSize;\n    }\n\n    async function read(blob) {\n        return new Uint8Array(await blob.arrayBuffer());\n    }\n}\n\n/**\n * Format bytes to human readable format.\n * Trims the tailing zeros.\n *\n * {@link https://stackoverflow.com/a/18650828/11468937}\n * @param {Number} bytes\n * @param {Number} [decimals=2]\n * @returns {String}\n */\nexport function bytesToSize(bytes, decimals = 2) {\n    if (bytes === 0) { return \"0 B\"; }\n    const k = 1024;\n    decimals = decimals < 0 ? 0 : decimals;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(decimals)) + \" \" + sizes[i];\n}\n\n/**\n * Formats bytes mostly like Windows does,\n * but in some rare cases the result is different.\n * Check the file with tests.\n * @see win-like-file-sizes.test.js\n * @param {Number} bytes\n * @return {string}\n */\nexport function bytesToSizeWinLike(bytes) {\n    if (bytes < 1024) { return bytes + \" B\"; }\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    let i = Math.floor(Math.log(bytes) / Math.log(1024));\n    let result = bytes / Math.pow(1024, i);\n    if (result >= 1000) {\n        i++;\n        result /= 1024;\n    }\n    return toTruncPrecision3(result) + \" \" + sizes[i];\n}\n\n/**\n * @see trunc-with-precision-3.test.js\n * @param {Number} number\n * @return {string}\n */\nexport function toTruncPrecision3(number) {\n    let result;\n    if (number < 10) {\n        result = Math.trunc(number * 100) / 100;\n    } else if (number < 100) {\n        result = Math.trunc(number * 10) / 10;\n    } else if (number < 1000) {\n        result = Math.trunc(number);\n    }\n    if (number < 0.1) {\n        return result.toPrecision(1);\n    } else if (number < 1) {\n        return result.toPrecision(2);\n    }\n    return result.toPrecision(3);\n}\n\n/**\n * @param {Uint8Array[]} arrays\n * @return {Uint8Array}\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((acc, value) => acc + value.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const array of arrays) {\n        result.set(array, offset);\n        offset += array.length;\n    }\n    return result;\n}\n\nexport function red(text) {\n    return [`%c${text}`,  \"color: #f44336; font-weight: bold;\"];\n}\nexport function orange(text) {\n    return [`%c${text}`,  \"color: #ff9800; font-weight: bold;\"];\n}\nexport function green(text) {\n    return [`%c${text}`,  \"color: #4caf50; font-weight: bold;\"];\n}\nexport function cyan(text) {\n    return [`%c${text}`,  \"color: #00bcd4; font-weight: bold;\"];\n}\nexport function blue(text) {\n    return [`%c${text}`,  \"color: #2196f3; font-weight: bold;\"];\n}\n","import {computed, ref} from \"vue\";\nimport {search, searchResult} from \"./search.js\";\nimport {openedFolder, parsingStateNumber} from \"./folders.js\";\n\n\nexport const sort = ref(true);\n\n/** @type {import(\"vue\").Ref<(\"name\"|\"size\"|\"mtime\")>} */\nexport const orderBy = ref(\"name\");\nexport const orders = ref({\n    name: false,\n    size: false,\n    mtime: false,\n});\nexport const reverseOrder = computed(() => orders.value[orderBy.value]);\nexport function toggleOrder() {\n    orders.value[orderBy.value] = !orders.value[orderBy.value];\n}\n\nconst {compare} = new Intl.Collator(undefined, {\n    numeric: true,\n    sensitivity: \"accent\",\n});\n\n// // todo create the list variable (search result -> the list), (opened dir entries -> the list)\n// export const reactiveComparator = computed(() => {\n//     const k = reverseOrder.value ? -1 : 1;\n//     if (sort.value) {\n//         if (orderBy.value === \"name\") {\n//             return (pre, cur) => compare(pre.name, cur.name) * k;\n//         } else if (orderBy.value === \"size\") {\n//             return (pre, cur) => (pre.size - cur.size) * k;\n//         } else if (orderBy.value === \"mtime\") {\n//             return (pre, cur) => (pre.mtime - cur.mtime) * k;\n//         }\n//     }\n//     return (pre, cur) => 0;\n// });\n\nexport function comparator(pre, cur) {\n    const k = reverseOrder.value ? -1 : 1;\n    if (sort.value) {\n        if (orderBy.value === \"name\") {\n            return compare(pre.name, cur.name) * k;\n        } else if (orderBy.value === \"size\") {\n            return (pre.size - cur.size) * k;\n        } else if (orderBy.value === \"mtime\") {\n            return (pre.mtime - cur.mtime) * k;\n        }\n    }\n    return 0;\n}\n\n// grouped by type\nexport const entries = computed(() => {\n    if (parsingStateNumber.value) {\n        // force recomputing on change\n    }\n    return [\n        ...openedFolder.value.folders.sort(comparator),\n        ...openedFolder.value.files.sort(comparator),\n        ...openedFolder.value.symlinks.sort(comparator),\n        ...openedFolder.value.fifos.sort(comparator),\n        ...openedFolder.value.charDevs.sort(comparator),\n        ...openedFolder.value.blockDevs.sort(comparator),\n        ...openedFolder.value.sockets.sort(comparator),\n    ]\n});\n\n\n/** @type {import(\"vue\").Ref<Number>} */\nexport const limit = ref(50);\n\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const list = computed(() => {\n    if (search.value.length) {\n        return searchResult.value;\n    }\n    return entries.value;\n});\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const listLimited = computed(() => {\n    return list.value.slice(0, limit.value);\n});\n/** @type {import(\"vue\").ComputedRef<Number>} */\nexport const count = computed(() => {\n    if (searchResult.value.length > limit.value) {\n        return searchResult.value.length;\n    }\n    return list.value.length;\n});\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nexport const hoveredEntry = ref(null);\n","import {ref, toRaw, isProxy} from \"vue\";\nimport {bytesToSizeWinLike, dateToDayDateTimeString} from \"../util.js\";\n\nexport const debugMessage = ref(\"\");\nexport function addMessage(message) {\n    debugMessage.value = message;\n}\nexport function appendMessage(message) {\n    debugMessage.value += message;\n}\n\n/**\n * @param {SimpleEntry} entry\n */\nexport function debugMessageFromEntry(entry) {\n    console.log(isProxy(entry) ? \"Proxy:\" : \"Raw:\", toRaw(entry));\n    if (entry.hasErrors) {\n        debugMessage.value = \"\";\n    } else {\n        const name = `\"` + entry.name.slice(0, 20) + (entry.name.length < 20 ? \"\" : \"...\") + `\"`;\n\n        let message = \"\";\n        message += \"mtime \" + `\"${dateToDayDateTimeString(entry.mtime, false)}\"`;\n        message += \" —  btime \" + `\"${dateToDayDateTimeString(entry.btime ?? 0, false)}\"`;\n\n        message += ` — ${name} — ${entry.size} (${bytesToSizeWinLike(entry.size)})`;\n        debugMessage.value = message;\n    }\n}\n","/** @type {ScanEntryType[]} */\nimport {sleep} from \"../util.js\";\n\nexport const entryTypes = [\"folder\", \"file\", \"symlink\", \"fifo\", \"charDev\", \"blockDev\", \"socket\"];\n\nexport class SimpleEntry {\n    // [Symbol.toStringTag] = \"SimpleEntry\"; // Disables reactivity, BTW.\n    /**\n     * @param {SerializableScanEntry} entry\n     * @param {SimpleEntry|null} parent\n     * @param {Map<Number, SimpleScanError>} [errorsIDMap]\n     */\n    constructor(entry, parent, errorsIDMap) {\n        /** @type {String} */\n        this.name = entry.name;\n        /** @type {SimpleEntry|null} */\n        this.parent = parent;\n        /** @type {ScanEntryType} */\n        this.type = entry.type;\n\n        if (entry.size) {\n            /** @type {Number|undefined} */\n            this._size = entry.size;\n        }\n        if (entry.mtime) {\n            /** @type {Number|undefined} */\n            this.mtime = entry.mtime;\n        }\n        if (entry.btime) {\n            /** @type {Number|undefined} */\n            this.btime = entry.btime;\n        }\n\n        if (entry.errors) {\n            /** @type {SimpleScanError[]}|undefined} */\n            this.errors = entry.errors.map(id => errorsIDMap.get(id));\n        }\n\n        if (entry.pathTo) {\n            /** @type {String|undefined} */\n            this.pathTo = entry.pathTo;\n        }\n        if (entry.content) {\n            /** @type {String|undefined} */\n            this.content = entry.content;\n        }\n    }\n    /** @param {SimpleEntry} entry */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {SimpleEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n    /** @param {SimpleEntry[]} entries\n     *  @param {Number} total */\n    addHardlinks(entries, total) {\n        /** @type {SimpleEntry[]|undefined} */\n        this.hardlinks = entries;\n        /** @type {Number|undefined} */\n        this.hardlinksTotal = total;\n    }\n\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent && size) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this._size || 0;\n    }\n\n    /** @return {SimpleEntry[]} */\n    get folders() {\n        return this.children?.filter(e => e.type === \"folder\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get files() {\n        return this.children?.filter(e => e.type === \"file\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get symlinks() {\n        return this.children?.filter(e => e.type === \"symlink\") || [];\n    }\n\n    /** @return {SimpleEntry[]} */\n    get fifos() {\n        return this.children?.filter(e => e.type === \"fifo\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get charDevs() {\n        return this.children?.filter(e => e.type === \"charDev\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get blockDevs() {\n        return this.children?.filter(e => e.type === \"blockDev\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get sockets() {\n        return this.children?.filter(e => e.type === \"socket\") || [];\n    }\n\n    /** @return {Boolean} */\n    get isEmpty() {\n        return !Boolean(this.children?.length);\n    }\n    /** @return {Boolean} */\n    get hasErrors() {\n        return Boolean(this.errors?.length);\n    }\n    /** @return {SimpleEntry} */\n    get root() {\n        if (!this.parent) {\n            return this;\n        }\n        return this.parent.root;\n    }\n    /** @return {SimpleEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n}\n\n/**\n * Like `ScanError`, but without `path`.\n * @typedef {Object} SimpleScanError\n * @property {String} code\n * @property {String} syscall\n * @property {Number} errno\n **/\n\nexport class EntryStreamParser {\n    constructor() {\n        this.rootId = 0;\n        /** @type {Map<Number, SimpleEntry>} */\n        this.map = new Map();\n        /** @type {Map<String, SimpleEntry[]>} */\n        this.hidMap = new Map();\n    }\n\n    /** @param {ScanMeta} meta */\n    setMeta(meta) {\n        /** @type {ScanMeta} */\n        this.meta = meta;\n        /** @type {Object<String, Number>} */\n        const errorsMap = meta.errorsMap;\n        if (!errorsMap) {\n            return;\n        }\n        /** @type {Map<Number, SimpleScanError>|undefined} */\n        this.errorsIDMap = new Map(Object.entries(errorsMap)\n            .map(([k, v]) => {\n                const [code, syscall, errno] = k.split(\":\");\n                return [v, {code, syscall, errno: Number(errno)}];\n            }));\n    }\n\n    /** @param {SerializableScanEntry[]} sEntriesPart\n     * @return {{root: SimpleEntry, rootUpdated: boolean}}\n     */\n    parse(sEntriesPart) {\n        let rootUpdated = false;\n        for (const entry of sEntriesPart) {\n            /** @type {SimpleEntry|null}*/\n            const parent = this.map.get(entry.pid) ?? null;\n            const simpleEntry = new SimpleEntry(entry, parent, this.errorsIDMap);\n            if (entry.type === \"folder\") {\n                this.map.set(entry.id, simpleEntry);\n            }\n            parent?.addChild(simpleEntry);\n            if (entry.hid) {\n                const array = this.hidMap.get(entry.hid) || [];\n                this.hidMap.set(entry.hid, [...array, simpleEntry]);\n            }\n            if (entry.pid === this.rootId) {\n                rootUpdated = true;\n            }\n        }\n        return {\n            root: this.map.get(this.rootId),\n            rootUpdated\n        }\n    }\n\n    processHIDMapAsync() {\n        if (!this.hidMap.size) {\n            return;\n        }\n        console.log(\"[hidMap]:\", this.hidMap);\n        console.time(\"hidMap\");\n        processHIDMapAsync(this.hidMap)\n            .then(() => console.timeEnd(\"hidMap\"));\n    }\n}\n\nasync function processHIDMapAsync(hidMap) {\n    let i = 0;\n    let time = 0; // `0` to do `sleep` on the first iteration\n\n    for (const [hid, simpleEntries] of hidMap.entries()) {\n        if (!(i++ % 1000)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n            }\n        }\n\n        /** @type {Number}*/\n        const totalLinks = Number(hid.split(\":\")[1]);\n        simpleEntries.forEach(e => {\n            e.addHardlinks(simpleEntries, totalLinks);\n        });\n    }\n}\n\n/** @type {SimpleEntry} */\nexport const folderDummy = new SimpleEntry({\n    type: \"folder\",\n    name: \"\",\n    pid: null,\n}, null);\n","import {ref} from \"vue\";\n\nexport const scanParsing    = ref(false);\nexport const searching      = ref(false);\nexport const searchAwaiting = ref(false);\n","import {isReactive, ref, toRaw, watch, watchEffect} from \"vue\";\nimport {blue, bytesToSizeWinLike, debounce, sleep} from \"../util.js\";\nimport {openedFolder} from \"./folders.js\";\nimport {comparator, limit, orderBy, reverseOrder} from \"./entries.js\";\nimport * as debug from \"./debug.js\";\nimport {entryTypes} from \"./entry.js\";\nimport {scanParsing, searchAwaiting, searching} from \"./state.js\";\n\n/** @type {import(\"vue\").Ref<string>} */\nexport const search = ref(\"\"); // [v-model]\nexport function clearSearch() {\n    search.value = \"\";\n}\n\n/** @type {import(\"vue\").Ref<SimpleEntry[]>} */\nexport const searchResult = ref([]);\nfunction clearSearchResult() {\n    setSearchResult([]);\n}\n/** * @param {SimpleEntry[]} result */\nfunction setSearchResult(result) {\n    /** @type {SimpleEntry[]} */\n    const rawResult = toRaw(result);\n    searchResult.value = rawResult;\n    limit.value = 50;\n\n    addSearchResultToGlobalThis(rawResult);\n}\n\nwatch([orderBy, reverseOrder], () => {\n    if (searchResult.value.length) {\n        console.time(\"sort searchResult\");\n        searchResult.value = searchResult.value.sort(comparator);\n        console.timeEnd(\"sort searchResult\");\n        //todo sort by parts\n    }\n});\n\n/** @param {SimpleEntry[]} rawResult */\nfunction addSearchResultToGlobalThis(rawResult) {\n    /** @type {SimpleEntry[]} */\n    globalThis.search = rawResult;\n    console.log(\"globalThis.search:\", rawResult);\n    Object.defineProperty(globalThis.search, \"download\", {\n        get() {\n            console.log(\"download\"); // todo\n        }\n    });\n    Object.defineProperty(globalThis.search, \"names\", {\n        get() {\n            return globalThis.search.map(entry => entry.name);\n        }\n    });\n    Object.defineProperty(globalThis.search, \"namelist\", {\n        get() {\n            return globalThis.search.map(entry => entry.name).join(\"\\n\");\n        }\n    });\n}\n\nlet resolve = () => {};\nlet scanParsingCompleted = Promise.resolve(true);\nwatchEffect(() => {\n    if (scanParsing.value) {\n        resolve(false);\n        scanParsingCompleted = new Promise(r => resolve = r);\n    } else {\n        resolve(true);\n    }\n});\n\n//todo check linked list perf for large search // do search after scan parsing ended\nconst performSearchDebounced = debounce(performSearch, 300);\nasync function performSearch() {\n\n    // Await while the scan parsing is completed, return `false` if there is a new `performSearch` call while parsing.\n    if (false === await scanParsingCompleted) {\n        return;\n    }\n\n    const folder = openedFolder.value;\n    const request = search.value;\n\n    // Do unProxy. Up to x40 in comparison with default reactive ref.\n    const folderRaw = isReactive(folder) ? toRaw(folder) : folder;\n\n    const time1 = performance.now();\n    searching.value = true;\n    const result = await searcher(folderRaw, request);\n    searching.value = false;\n    searchAwaiting.value = false;\n    if (!result) {\n        return;\n    }\n    const searchTime = performance.now() - time1;\n    debug.addMessage(`Search time: ${searchTime.toFixed(2)} ms; `);\n    await sleep();\n\n    const time2 = performance.now();\n    const sortedResult = result.sort(comparator);\n    const sortTime = performance.now() - time2;\n    debug.appendMessage(`Sort time: ${sortTime.toFixed(2)} ms; `);\n    await sleep();\n\n    console.time(\"search result size computing\");\n    const resultSet = new Set(result);\n    const allSize = result.reduce((acc, val) => computeEntrySize(val, resultSet) + acc, 0);\n    const filesSize = result.filter(entry => entry.type !== \"folder\").reduce((acc, val) => val.size + acc, 0);\n    console.timeEnd(\"search result size computing\");\n    console.log(allSize, filesSize);\n\n    setSearchResult(sortedResult);\n    const searchText = result.customSearchText || request;\n    debug.appendMessage(`${result.length} items; size: ${bytesToSizeWinLike(filesSize)} (${bytesToSizeWinLike(allSize)});  search: ${searchText}`);\n}\n\n\n/**\n * The recursive size computing of an `SimpleEntry`.\n * Skips the entries of `excludeSet`.\n * @param {SimpleEntry} entry\n * @param {Set<SimpleEntry>} excludeSet\n * @return {Number}\n */\nfunction computeEntrySize(entry, excludeSet) {\n    if (entry.type !== \"folder\") {\n        return entry.size;\n    }\n    let childrenSize = 0;\n    for (const child of entry.children || []) {\n        if (excludeSet.has(child)) {\n            continue;\n        }\n        if (child.type === \"folder\") {\n            childrenSize += computeEntrySize(child, excludeSet);\n        } else {\n            childrenSize += child.size;\n        }\n    }\n    return childrenSize;\n}\n\n/**\n * @param {SimpleEntry} folder\n * @param {string} search\n * @return {Promise<SimpleEntry[]|false>}\n */\nasync function searcher(folder, search) { // \"đ Crème Bruląśćńżółźćęéйeё\".normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n    if (search.startsWith(\"//\")) {\n        return justSearch(search.slice(2));\n    }\n\n\n    if ([\"https://\", \"http://\"].some(prefix => search.startsWith(prefix))) {\n        const url = new URL(search);\n\n        let searchText;\n        if (url.hostname === \"www.youtube.com\" && url.pathname === \"/watch\") {\n            searchText = url.searchParams.get(\"v\");\n        } else {\n            const pathnameEndsWithSlash = url.pathname.length > 1 && url.pathname.endsWith(\"/\");\n            const pathname = pathnameEndsWithSlash ? url.pathname.slice(0, -1) : url.pathname;\n            const resourceFullName = pathname.match(/[^\\/]+$/)?.[0];\n            if (!resourceFullName) {\n                return [];\n            }\n            const {\n                name: resName,\n                ext: resExt, // [note] it can be not the file extension, but a part of a nickname (inst url, for example)\n            } = resourceFullName.match(/(?<name>.+)(\\.(?<ext>.+))$/)?.groups || {name: resourceFullName};\n            searchText = resName + ((pathnameEndsWithSlash && resExt) ? `.${resExt}` : \"\");\n        }\n\n        const result = await justSearch(searchText);\n        Object.defineProperty(result, \"customSearchText\", {\n            value: searchText\n        });\n        return result;\n    }\n\n\n    /**\n     * @example\n     * /size:0       - find 0 byte size entries\n     * /size/120     - the same, find 120 bytes size entries\n     * /size:120+80  - find from 120 to 200\n     * /size:120+-20 - find from 100 to 120\n     * /size:120~20  - find from  80 to 140\n     * /size:120-220 - find from 120 to 220\n     * /size:220-120 - find from 120 to 220\n     * /size:^2      - size.toString() starts with \"2\"\n     * /size:%2      - size.toString() includes    \"2\"\n     * /size:$0      - size.toString() ends with   \"0\"\n     * /s/0          - find 0 byte size entries, just a short form\n     * /s/120 900    - find 120900 bytes size entries\n     * /s/120,900    - find 120900 bytes size entries\n     *\n     * /size:120~    - find from 120 -5% to 120 +5%\n     * /size:120~~   - find from 120-10% to 120+10%\n     * /size:120~~~  - find from 120-15% to 120+15%\n     *\n     * /sizek:5      - find 5 KB ± 0.1 KB\n     * /sizek:50     - find 50 KB  ± 1 KB\n     * /sizek:500    - find 500 KB ± 1 KB\n     * /sizem:5      - find 5 MB ± 0.1 MB\n     * /sizeg/50     - find 50 GB ± 1 GB\n     *\n     * /size:5m      - find 5 MB ± 0.1 MB\n     *\n     * /s/12.9       - find 12 bytes size entries\n     * /sk/12.9      - find 12.9 KB ± 1 KB\n     *\n     * /sizek:5!     - find 5 KB + (0 - 0.01) KB\n     * /sizek:5!!    - find 5 KB + (0 - 0.001) KB\n     * /s/5k!!       - find 5 KB + (0 - 0.001) KB\n     * /sizem:50!    - find 50 MB + (0 - 0.1) MB\n     * /sizem:50!!   - find 50 MB + (0 - 0.01) MB\n     */\n    const r1 = `\\\\/s(ize)?(?<defaultPrefix>b|k|m|g|t)?[:\\\\/]`;\n    if (search.match(new RegExp(r1))) {\n        const r2   = `(?<extra1>(?<caret>\\\\^)|(?<dollar>\\\\$)|(?<percent>%))?`;\n        const r3   = `((?<sizeString1>\\\\s*\\\\d[\\\\d\\\\s\\\\,]*)((?<dotDecimal1>\\\\.(?<decimal1>\\\\d+)?))?(?<prefix1>b|k|m|g|t)?(?<exclamations>!+)?)`;\n\n        const r4_1 = `(?<extra2>(?<plus>\\\\+)|(?<minus>\\\\-)|(?<tildes>\\\\~+))`;\n        const r4_2 = `((?<sizeString2>\\\\s*-?\\\\s*\\\\d[\\\\d\\\\s\\\\,]*)((?<dotDecimal2>\\\\.(?<decimal2>\\\\d+)?))?(?<prefix2>b|k|m|g|t)?)?`;\n        const r4   = `(?<range>${r4_1}${r4_2})?`;\n\n        const regex = new RegExp(r1 + r2 + r3 + r4);\n\n        const {\n            /** @type {\"b\"|\"k\"|\"m\"|\"g\"|\"t\"|undefined} */\n            defaultPrefix,\n\n            /** @type {String|undefined} */\n            caret,\n            /** @type {String|undefined} */\n            dollar,\n            /** @type {String|undefined} */\n            percent,\n\n            /** @type {String|undefined} */\n            sizeString1,\n            /** @type {String|undefined} */\n            decimal1,\n            /** @type {String|undefined} */\n            prefix1,\n            /** @type {String|undefined} */\n            exclamations,\n\n            /** @type {String|undefined} */\n            plus,\n            /** @type {String|undefined} */\n            minus,\n            /** @type {String|undefined} */\n            tildes,\n\n            /** @type {String|undefined} */\n            sizeString2,\n            /** @type {String|undefined} */\n            decimal2,\n            /** @type {String|undefined} */\n            prefix2,\n\n        } = search.match(regex)?.groups || {};\n\n        if (sizeString1) {\n            console.log({\n                defaultPrefix,\n                extra1: {caret, dollar, percent},\n                sizeString1, decimal1, prefix1, exclamations,\n                extra2: {plus, minus, tildes, sizeString2, decimal2, prefix2},\n            });\n\n            let text;\n            let result;\n\n            let sizeNum = Number(sizeString1.replaceAll(/[\\s,]/g, \"\"));\n            const size = sizeNum.toString();\n\n            let size2Num = sizeString2 && Number(sizeString2.replaceAll(/[\\s,]/g, \"\"));\n            const size2 = size2Num?.toString();\n\n\n            const dec1 = decimal1 ? Number(\"0.\" + decimal1) : 0;\n            const dec2 = decimal2 ? Number(\"0.\" + decimal2) : 0;\n            sizeNum  = multiplyByPrefix(sizeNum  + dec1, prefix1 || defaultPrefix);\n            size2Num = multiplyByPrefix(size2Num + dec2, prefix2 || defaultPrefix);\n\n\n            /**\n             * @param {Number} a\n             * @param {Number} b\n             * @return {Promise<void>}\n             */\n            async function rangeSearch(a, b) {\n                const {_min, max} = a < b ? {_min: a, max: b} : {_min: b, max: a};\n                const min = Math.max(0, _min);\n                text = `Size search from ${bytesToSizeWinLike(min)} to ${bytesToSizeWinLike(max)}`;\n                result = await findAll(folder, entry => {\n                    return entry.size >= min && entry.size <= max;\n                });\n            }\n            function multiplyByPrefix(value, prefix = \"b\") {\n                if (value === undefined) {\n                    return;\n                }\n                const prefixes = [\"b\", \"k\", \"m\", \"g\", \"t\"];\n                return Math.trunc(value * (1024 ** prefixes.indexOf(prefix)));\n            }\n\n\n            if (caret) { // ^\n                text = `Size search starts with \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().startsWith(size);\n                });\n            } else\n            if (dollar) { // $\n                text = `Size search ends with \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().endsWith(size);\n                });\n            } else\n            if (percent) { // %\n                text = `Size search includes \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().includes(size);\n                });\n            } else\n            if (plus && size2) { // +\n                await rangeSearch(sizeNum, sizeNum + size2Num);\n            } else\n            if (minus && size2) { // -\n                await rangeSearch(sizeNum, size2Num);\n            } else\n            if (tildes) {  // ~ // ~~ // ~~~\n                if (size2) {\n                    await rangeSearch(sizeNum - size2Num, sizeNum + size2Num);\n                } else {\n                    const count = tildes.length;\n                    const diff = Math.trunc(sizeNum * 5 * count / 100);\n                    await rangeSearch(sizeNum - diff, sizeNum + diff);\n                }\n            } else { // Default\n                const prefix = prefix1 || defaultPrefix;\n                if (prefix && prefix !== \"b\") {\n\n                    let orders = size.length;\n                    let diff = multiplyByPrefix(1, prefix);\n                    if (orders === 1) {\n                        diff = Math.trunc(diff / 10);\n                    }\n\n                    let from = sizeNum - diff;\n                    let to   = sizeNum + diff;\n                    if (exclamations) {\n                        from = sizeNum;\n                        if (exclamations.length > 1) {\n                            to = sizeNum + Math.trunc(diff / 10);\n                        }\n                    }\n                    await rangeSearch(from, to);\n                } else {\n                    text = `Size search ${bytesToSizeWinLike(sizeNum)}`;\n                    result = await findAll(folder, entry => {\n                        return entry.size === sizeNum;\n                    });\n                }\n            }\n            console.log(...blue(text));\n            Object.defineProperty(result, \"customSearchText\", {\n                value: text\n            });\n            return result;\n        } else {\n            console.log(\"no size to search\");\n        }\n    }\n    if (search.startsWith(\"/\")) {\n        const {type, word} = search.match(/\\/type:(?<type>[^\\/]+)\\/?(?<word>[^\\/]*)/)?.groups || {};\n        if (type) {\n            console.log({type, word});\n            if (entryTypes.includes(type)) {\n                return findAll(folder, entry => {\n                    return entry.type === type && entry.name.includes(word);\n                });\n            }\n        }\n    } else\n    if (search.includes(\" \")) {\n        const parts = search.split(\" \").filter(o => o);\n        if (parts.length > 1) {\n            let result = await justSearch(parts.shift());\n            let curWord;\n            while (curWord = parts.shift()) {\n                result = result.filter(entry => entry.name.includes(curWord));\n            }\n            return result;\n        }\n    }\n    return justSearch(search);\n\n    function justSearch(search) {\n        return findAll(folder, (entry) => {\n            return entry.name.includes(search);\n        });\n    }\n}\n\nwatch(search, async (newValue, oldValue) => {\n    const isEmptyString = !newValue;\n    if (isEmptyString) {\n        clearSearchResult();\n        return;\n    }\n    searchAwaiting.value = true;\n\n    // In order to \"no debounce by paste event\"\n    if (newValue.length - oldValue.length > 1) {\n        await performSearch();\n    } else {\n        await performSearchDebounced();\n    }\n});\n\n/**\n * @param {SimpleEntry} folder\n * @param {function(SimpleEntry)} predicate\n * @return {Promise<SimpleEntry[]>}\n */\nasync function findAll(folder, predicate) {\n    let res = [];\n    let time = Date.now();\n    for (const entries of listAllEntries(folder)) {\n        const curTime = Date.now();\n        if (curTime - time > 15) {\n            time = curTime;\n            await sleep();\n        }\n        for (const entry of entries) {\n            if (predicate(entry)) {\n                res.push(entry);\n            }\n        }\n    }\n    return res;\n}\n\n/**\n * List all entries by parts.\n * @param {SimpleEntry} folder\n * @return {Generator<SimpleEntry[]>}\n */\nfunction *listAllEntries(folder) {\n    const partSize = 1000;\n    /** @type {SimpleEntry[]} */\n    let list = [];\n    /** @param {SimpleEntry} folderEntry */\n    function *takePart(folderEntry) {\n        for (const entry of (folderEntry.children || [])) {\n            if (entry.type === \"folder\") {\n                yield *takePart(entry);\n            }\n            list.push(entry);\n            if (list.length === partSize) {\n                yield list;\n                list = [];\n            }\n        }\n    }\n    yield *takePart(folder);\n    yield list;\n}\n","import {EntryStreamParser} from \"./entry.js\";\nimport {appendScript, iterateAsyncDataSource, sleep} from \"../util.js\";\n\n\n/**\n * @param {Blob|Response} input\n * @return {AsyncGenerator<{meta:ScanMeta, root: SimpleEntry, rootUpdated: boolean}>}\n */\nexport async function *parseScan(input) {\n    const parser = new EntryStreamParser();\n\n    let contentType;\n    if (input instanceof Response) {\n        contentType = input.headers.get(\"content-type\");\n    } else if (input instanceof Blob) {\n        contentType = input.type;\n    }\n    /** @type {ScanMeta} */\n    let meta;\n    if (isGZip(contentType)) {\n        console.log(\"parseGZippedJSONScan\");\n        for await (const obj of parseGZippedJSONScan(input)) {\n            if (!meta) {\n                meta = /** @type {ScanMeta} */ obj.shift();\n                parser.setMeta(meta);\n            }\n            yield {meta, ...parser.parse(/** @type {SerializableScanEntry[]} */ obj)};\n        }\n    } else if (isJSON(contentType)) {\n        console.log(\"streamParseJSONScan\");\n        for await (const array of streamParseJSONScan(input)) {\n            if (!meta) {\n                meta = /** @type {ScanMeta} */ array.shift();\n                parser.setMeta(meta);\n            }\n            yield {meta, ...parser.parse(/** @type {SerializableScanEntry[]} */ array)};\n        }\n    }\n    parser.processHIDMapAsync();\n}\n\n\n/**\n * @param {Response|ReadableStream|Blob} input\n * @return {AsyncGenerator<FlatScanResultEntry[]>}\n */\nasync function *streamParseJSONScan(input) {\n    const decoder = new TextDecoder();\n    const textParser = new TextParser();\n    let i = 0, time = 0;\n    for await (const uint8Array of iterateAsyncDataSource(input)) {\n        if (!(i++ % 10)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n                // console.log(\"sleep\", i);\n            }\n        }\n        const textPart = decoder.decode(uint8Array, {stream: true});\n        const scanResultEntries = textParser.parsePart(textPart);\n        if (scanResultEntries.length) {\n            yield scanResultEntries;\n        }\n    }\n}\n\n/**\n * @param {Response|Blob} input\n * @return {AsyncGenerator<FlatScanResultEntry[]>}\n */\nasync function *parseGZippedJSONScan(input) {\n    const decoder = new TextDecoder();\n    const textParser = new TextParser();\n    let i = 0, time = 0;\n    for await (const uint8Array of unGZipAsyncIterator(input)) {\n        if (!(i++ % 20)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n                // console.log(\"sleep\", i);\n            }\n        }\n        const textPart = decoder.decode(uint8Array, {stream: true});\n        const scanResultEntries = textParser.parsePart(textPart);\n        if (scanResultEntries.length) {\n            yield scanResultEntries;\n        }\n    }\n}\n\n/**\n * @param {Response|ReadableStream|Blob} input\n * @return {Generator<Uint8Array>}\n */\nasync function *unGZipAsyncIterator(input) {\n    if (!isPakoLoaded()) {\n        await loadPako();\n    }\n    let chunks = [];\n    const inflator = new pako.Inflate();\n    pako.Inflate.prototype.onData = function (chunk) {\n        chunks.push(chunk);\n    };\n    for await (const u8Array of iterateAsyncDataSource(input)) {\n        inflator.push(u8Array);\n        for (const chunk of chunks) {\n            yield chunk;\n        }\n        chunks = [];\n    }\n    yield inflator.result;\n    if (inflator.err) {\n        console.error(inflator.msg);\n    }\n}\n\n\nexport class TextParser {\n    buffer = \"\";\n    startHandled = false;\n    metaLines = [];\n    objects = [];\n\n    trimComma(text) {\n        return text.endsWith(\",\") ? text.slice(0, -1) : text;\n    }\n\n    handleStart(line) {\n        if (line === \"[\") { // the first line\n            return;\n        }\n        if (line === \"\") { // meta is separated from the main content by \"\\n\"\n            this.objects.push(this.metaLines.join(\"\"));\n            this.startHandled = true;\n            return;\n        }\n        this.metaLines.push(line);\n    }\n\n    /**\n     * @param {String} line\n     * @param isLastLine\n     */\n    handleLine(line, isLastLine) {\n        if (isLastLine) {\n            this.buffer += line;\n            return;\n        }\n        if (this.buffer) {\n            this.objects.push(this.buffer + line);\n            this.buffer = \"\";\n        } else {\n            this.objects.push(line);\n        }\n    }\n\n    /**\n     * May return an empty array\n     * @param {String} textPart\n     * @return {FlatScanResultEntry[]}\n     * */\n    parsePart(textPart) {\n        const isLastPart = textPart.endsWith(\"\\n]\");\n        /** @type {String[]} */\n        const lines = textPart.split(\"\\n\");\n\n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i];\n            const isLastLine = i === lines.length - 1;\n\n            if (isLastLine && isLastPart) {\n                continue;\n            }\n\n            if (!this.startHandled) {\n                this.handleStart(line, isLastLine);\n            } else {\n                this.handleLine(line, isLastLine);\n            }\n        }\n        try {\n            /** @type {FlatScanResultEntry[]} */\n            const result = JSON.parse(`[${this.trimComma(this.objects.join(\"\"))}]`);\n            this.objects = [];\n            return result;\n        } catch (e) {\n            console.log(`[${this.trimComma(this.objects.join(\"\"))}]`);\n            console.log(this.objects);\n            console.log(this, {isLastPart, textPart});\n            throw e;\n        }\n\n    }\n\n}\n\n\nlet pakoIsLoaded = false;\nasync function loadPako() {\n    if (!pakoIsLoaded) {\n        const src = \"https://cdn.jsdelivr.net/npm/pako@2.0.4/dist/pako_inflate.min.js\";\n        const integrity = \"sha256-ZIKs3+RZEULSy0dR6c/mke8V9unZm9vuh05TqvtMdGU=\";\n        await appendScript(src, integrity);\n        pakoIsLoaded = true;\n        console.log(\"pako is loaded\");\n    }\n}\nfunction isPakoLoaded() {\n    return pakoIsLoaded;\n}\n\n\n/**\n * \"application/x-gzip\"\n * \"application/gzip\"\n * @param contentType\n * @return {Boolean}\n */\nfunction isGZip(contentType) {\n    return Boolean(contentType.match(/^application\\/.*?gzip/));\n}\n\n/**\n * \"application/json\"\n * \"application/json; charset=utf-8\"\n * @param contentType\n * @return {Boolean}\n */\nfunction isJSON(contentType) {\n    return Boolean(contentType.match(/^application\\/.*?json/));\n}\n","import {computed, markRaw, ref, unref, watch} from \"vue\";\nimport {clearSearch} from \"./search.js\";\nimport {folderDummy} from \"./entry.js\";\nimport {dateToDayDateString, sleep} from \"../util.js\";\nimport {addMessage} from \"./debug.js\";\nimport {parseScan} from \"./scan-parser.js\";\nimport {limit} from \"./entries.js\";\nimport {scanParsing} from \"./state.js\";\n\n\n/** @type {import(\"vue\").Ref<ScanMeta>} */\nexport const meta = ref(null);\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nconst root = ref(null);\n\n// A hack to run recomputing of a computed property\nexport const parsingStateNumber = ref(0);\n\nclass ExecutionState {\n    constructor() {\n        this.abortRequested = false;\n        this._promise = Promise.resolve();\n        this._resolve = () => {};\n    }\n    abort() {\n        this.abortRequested = true;\n        return this._promise;\n    }\n    start() {\n        this._promise = new Promise(r => this._resolve = r);\n    }\n    abortIfRequested() {\n        if (!execution.abortRequested) {\n            return false;\n        }\n        this.abortRequested = false;\n        this._resolve();\n        return true;\n    }\n}\nconst execution = new ExecutionState();\n/**\n * @param {Blob|Response} input\n * @return {Promise<Boolean>}\n */\nexport async function setScan(input) {\n    if (scanParsing.value) {\n        await execution.abort();\n    }\n    scanParsing.value = true;\n    execution.start();\n\n    let metaInited = false;\n    let rootInited = false;\n\n    const startTime = Date.now();\n    let time = Date.now();\n    for await (const {meta: scanMeta, root: rootEntry, rootUpdated: rootContentUpdated} of parseScan(input)) {\n        if (execution.abortIfRequested()) {\n            console.log(`[setScan][time][aborted]`, Date.now() - startTime, \"ms\");\n            return false;\n        }\n        if (!metaInited && scanMeta) {\n            meta.value = markRaw(scanMeta);\n            metaInited = true;\n        }\n        if (!rootInited && rootEntry) {\n            root.value = markRaw(rootEntry);\n            globalThis.json = rootEntry;\n            openFolder(rootEntry);\n            rootInited = true;\n        }\n        const now = Date.now();\n        if (rootContentUpdated || now - time > 50) {\n            time = now;\n            parsingStateNumber.value++;\n            await sleep();\n        }\n    }\n    parsingStateNumber.value++;\n    console.log(`[setScan][time]:`, Date.now() - startTime, \"ms\");\n\n    scanParsing.value = false;\n    return true;\n}\n\n/** @type {import(\"vue\").ComputedRef<string>} */\nexport const separator = computed(() => {\n    return meta.value?.separator || \"/\";\n});\n/** @type {import(\"vue\").ComputedRef<string[]>} */\nexport const scanRootPath = computed(() => {\n    return meta.value?.path || [];\n});\n\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nexport const openedFolder = ref(folderDummy);\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const openedFolders = computed(() => {\n    return openedFolder.value.path;\n});\n\n/** @param {SimpleEntry} entry */\nexport function openFolder(entry) {\n    clearSearch();\n    openedFolder.value = markRaw(unref(entry));\n    limit.value = 50;\n\n    /** @type {SimpleEntry} */\n    globalThis.folder = entry;\n    console.log(\"globalThis.folder:\", entry);\n}\nexport function goBack() {\n    if (openedFolder.value.parent) {\n        openFolder(openedFolder.value.parent);\n    }\n}\n/** @type {import(\"vue\").ComputedRef<Boolean>} */\nexport const empty = computed(() => root.value && openedFolder.value.isEmpty);\n\n\nwatch(meta, async (newValue, oldValue) => {\n    console.log(\"[meta]:\", meta.value);\n    const {files, folders, symlinks, errors, total, scanDate} = meta.value;\n    if (meta.value.scanDate) {\n        addMessage(\n            `files: \"${files}\" folders: \"${folders}\", symlinks: \"${symlinks}\", ` +\n            `errors: \"${errors}\", total: \"${total}\", scanDate: \"${dateToDayDateString(scanDate)}\"`\n        );\n    }\n});\n","<template>\n  <span class=\"scanPath\">\n    <span class=\"parts\" @click=\"goToRoot\" :title=\"title\">\n      <span class=\"part\"       >{{part1}}</span>\n      <span class=\"part spaced\">{{part2}}</span>\n    </span>\n    <span class=\"spaced separator\" v-if=\"showSep\">{{separator}}</span>\n  </span>\n</template>\n\n<script setup>\n//todo title\nimport {computed} from \"vue\";\nimport {scanRootPath, openedFolders, separator, openedFolder, openFolder, meta} from \"../core/folders.js\";\nimport {dateToDayDateString} from \"../util.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst title = computed(() => {\n  if (!meta.value) {\n    return;\n  }\n\n  const {\n      files, folders, symlinks,\n      charDevs, blockDevs, fifos, sockets,\n      total,\n      platform, scanDate\n  } = meta.value;\n\n  function doString(o) {\n    function pad(str) {\n      const count = 3 - Math.trunc((str.length/4));\n      return str + \"\\t\".repeat(count);\n    }\n    return Object.entries(o)\n        .map(([k, v]) => pad(k) + \": \" + v)\n        .join(\"\\n\");\n  }\n  const commonFiles = doString({files, folders, symlinks});\n  const unusualFiles = doString({charDevs, blockDevs, fifos, sockets});\n  const additional = doString({total, platform, scanDate: dateToDayDateString(scanDate)});\n\n  let result;\n  if (platform !== \"win32\") {\n    result = [commonFiles, unusualFiles, additional].join(\"\\n\");\n  } else {\n    result = [commonFiles, additional].join(\"\\n\");\n  }\n  console.log(result);\n  return result;\n});\n\nconst root = computed(() => {\n  const scanPath = [...scanRootPath.value, openedFolder.value.root.name];\n  const str = scanPath.join(separator.value);\n  if (str.startsWith(\"//\")) { // for unix\n    return str.slice(1);\n  }\n  if (meta.value?.platform === \"win32\") { // uppercase win drive letter // todo remove as unnecessary\n    return str[0].toUpperCase() + str.slice(1);\n  }\n  return str;\n});\nconst part1 = computed(() => {\n  return [...root.value].slice(0, -1).join(\"\"); // if ends with surrogate pair\n});\nconst part2 = computed(() => {\n  return [...root.value].slice(-1).join(\"\");\n});\nconst showSep = computed(() => {\n  return (openedFolders.value.length - 1) && root.value !== \"/\";\n});\n\nfunction goToRoot() {\n  const root = openedFolder.value.root;\n  debugMessageFromEntry(root);\n  openFolder(root);\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.scanPath {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  .parts {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    white-space: pre; /* to display tailing spaces */\n\n    cursor: pointer;\n    box-sizing: border-box;\n    border-bottom: transparent solid 1px;\n    &:hover {\n      background-color: var(--blue-2);\n      border-bottom: 1px solid var(--blue-1);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n    .part {\n      display: contents; // for correct selection by double click\n    }\n  }\n  .spaced {\n    letter-spacing: 2px;\n  }\n}\n</style>\n","<template>\n  <span class=\"opened-folder\">\n    <span class=\"parts\" @click=\"onClick\">\n      <span class=\"part\"       >{{part1}}</span>\n      <span class=\"part spaced\">{{part2}}</span>\n    </span>\n    <span class=\"separator spaced\" v-if=\"!isLast\">{{separator}}</span>\n  </span>\n</template>\n\n<script setup>\nimport {computed, toRefs} from \"vue\";\nimport {openFolder, separator} from \"../core/folders.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst props = defineProps([\"index\", \"count\", \"entry\"]);\nconst {index, count, entry} = toRefs(props);\n\nconst isLast = computed(() => {\n  return index.value + 1 === count.value;\n});\nconst part1 = computed(() => {\n  return [...entry.value.name].slice(0, -1).join(\"\"); // if ends with surrogate pair\n});\nconst part2 = computed(() => {\n  return [...entry.value.name].slice(-1).join(\"\");\n});\n\nfunction onClick() {\n  debugMessageFromEntry(entry.value);\n  openFolder(entry.value);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.opened-folder {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  .parts {\n    height: 100%;\n    display: flex;\n    align-items: center;\n\n    width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    white-space: pre; /* to display tailing spaces */\n\n    cursor: pointer;\n    box-sizing: border-box;\n    border-bottom: transparent solid 1px;\n    &:hover {\n      background-color: var(--blue-2);\n      border-bottom: 1px solid var(--blue-1);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n    .part { // to use with max-width limitation // not works with  `display: contents;`\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: pre;\n    }\n    .part {\n      display: contents; // for correct selection by double click\n    }\n  }\n  .spaced {\n    letter-spacing: 2px;\n  }\n}\n</style>\n","<template>\n<div class=\"address\" @contextmenu=\"onContextmenu\">\n  <AddressBar_Part>\n    <AddressBar_Base/>\n  </AddressBar_Part>\n  <AddressBar_Part\n      v-for=\"(folder, i) of openedFolders.slice(1)\"\n  >\n    <AddressBar_Folder\n        :entry=\"folder\"\n        :index=\"i\"\n        :count=\"openedFolders.slice(1).length\"\n    />\n  </AddressBar_Part>\n</div>\n</template>\n\n<script setup>\nimport AddressBar_Base from \"./AddressBar_Base.vue\";\nimport AddressBar_Folder from \"./AddressBar_Folder.vue\";\nimport AddressBar_Part from \"./AddressBar_Part.vue\";\nimport {meta, openedFolder, openedFolders, separator} from \"../core/folders.js\";\n\n/** @param {MouseEvent} event */\nasync function onContextmenu(event) {\n  event.preventDefault();\n  const folderPath = [...meta.value.path, ...openedFolder.value.path.map(entry => entry.name)].join(separator.value);\n  console.log(\"Copy to clipboard:\", folderPath);\n  await navigator.clipboard.writeText(folderPath);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.address {\n  display: flex;\n  overflow-x: scroll;\n  padding-left: 6px;\n\n  scrollbar-width: none; // firefox\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 0;\n    height: 0;\n    background: transparent;\n    display: none;\n  }\n  &:active { // todo only on onContextmenu event do it\n    border-right: var(--blue-1) solid 1px;\n  }\n}\n</style>\n","<template>\n  <div class=\"search-wrapper\">\n    <div class=\"search\">\n      <input id=\"json-scan-search-input\" type=\"text\" v-model=\"search\" ref=\"inputRef\">\n      <button @click=\"onClearClick\">Clear</button>\n    </div>\n    <label for=\"json-scan-search-input\" class=\"fuck-off-lighthouse\">.</label>\n  </div>\n</template>\n\n<script setup>\nimport {search, clearSearch} from \"../core/search.js\";\nimport {ref} from \"vue\";\n\nconst inputRef = ref();\nfunction onClearClick() {\n  clearSearch();\n  inputRef.value.focus();\n}\n\n//todo focus on double shift\n</script>\n\n<style lang=\"scss\" scoped>\n/** reset */\ninput { padding: 0 0; }\nbutton { padding: 0 0; }\n\n.fuck-off-lighthouse {\n  position: absolute;\n  top:-1000px;\n  left:-1000px;\n}\n.search-wrapper {\n  display: contents;\n}\n\n.search {\n  display: flex;\n  height: 100%;\n  label {\n    display: contents;\n  }\n  input {\n    height: 100%;\n    flex-grow: 2;\n    border: none;\n    padding-left: 6px;\n    border-bottom: transparent solid 1px;\n    box-sizing: border-box;\n    &:focus, &:hover {\n      outline: none;\n      border-bottom: var(--blue-1) solid 1px;\n    }\n  }\n  button {\n    height: 100%;\n    padding: 0 6px;\n    //outline: none;\n    outline-width: 1px;\n    outline-color: var(--blue-1);\n    border: none;\n    border-bottom: transparent solid 1px;\n    border-left: var(--gray-2) solid 1px;\n    box-sizing: border-box;\n    background-color: var(--gray-1);\n    &:hover {\n      border-bottom: var(--blue-1) solid 1px;\n      background: var(--blue-2);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n  }\n}\n</style>\n","export class FileEntry {\n    /**\n     * @param {Object} init\n     * @param {File} [init.file]\n     * @param {\"file\"|\"folder\"} init.type\n     * @param {FileEntry} [init.parent]\n     * @param {String} [init.name]\n     */\n    constructor({file, parent, type, name}) {\n        if (file) {\n            /** @type {File|undefined} */\n            this.file = file;\n        }\n        if (parent) {\n            /** @type {FileEntry|undefined} */\n            this.parent = parent;\n            parent.addChild(this);\n        }\n        if (name) {\n            /** @type {String} */\n            this._name = name;\n        }\n        /** @type {\"file\"|\"folder\"} */\n        this.type = type;\n    }\n\n    get name() {\n        return this._name || this.file?.name;\n    }\n\n    /** @param {FileEntry} entry */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {FileEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n\n    /** @private\n     *  @param {Number} size  */\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            /** @type {Number}\n             *  @private  */\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent/* && size*/) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this.file?.size || 0;\n    }\n\n    get mtime() {\n        return this.file?.lastModified || 0;\n    }\n\n    /** @return {FileEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n\n    /** @return {Generator<FileEntry>} */\n    *[Symbol.iterator]() {\n        yield this;\n        if (this.children) {\n            for (const child of this.children) {\n                yield * child;\n            }\n        }\n    }\n\n    /** @return {FileEntry[]} */\n    flat() {\n        return [...this];\n    }\n\n    /**\n     * @param {FileEntry[]} entries\n     * @return {FileEntry[]}\n     */\n    static flat(entries) {\n        return entries.map(e => [...e]).flat();\n    }\n\n    /**\n     * @param {DataTransferItem[]} dtItems\n     * @return {Promise<FileEntry[]>}\n     */\n    static async fromDataTransferItems(dtItems) {\n        const fileSystemEntries = await dtItemsToFileSystemEntries(dtItems);\n        console.log(\"[fileSystemEntries]:\", fileSystemEntries);\n        /** @type {FileEntry[]} */\n        const result = [];\n        for (const fileSystemEntry of fileSystemEntries) {\n            result.push(await fromFileSystemEntry(fileSystemEntry));\n        }\n        return result;\n    }\n\n    /**\n     * @param {File[]} files\n     * @return {FileEntry[]}\n     */\n    static fromFiles(files) {\n        /** @type {FileEntry[]} */\n        const result = [];\n        for (const file of files) {\n            result.push(new FileEntry({file, type: \"file\"}));\n        }\n        return result;\n    }\n}\n\n/**\n * @param {FileSystemEntry} fsEntry\n * @param {FileEntry|null} parent\n * @return {Promise<FileEntry|null>}\n */\nasync function fromFileSystemEntry(fsEntry, parent = null) {\n    if (fsEntry.isFile) {\n        try {\n            const file = await toFile(/** @type {FileSystemFileEntry} */ fsEntry);\n            return new FileEntry({file, type: \"file\", parent});\n        } catch (e) { // For example, for long path \\\\?\\M:\\...\n            console.error(\"[fromFileSystemEntry][error]\", fsEntry.name, e);\n            return null;\n        }\n    } else if (fsEntry.isDirectory) {\n        const dirEntry = new FileEntry({type: \"folder\", parent, name: fsEntry.name});\n        /** @type {AsyncGenerator<FileSystemEntry>} */\n        const entries = readFileSystemDirectoryEntry(/** @type {FileSystemDirectoryEntry} */ fsEntry);\n        for await (const entry of entries) {\n            // The entries will be attached to the parent (`dirEntry`).\n            await fromFileSystemEntry(entry, dirEntry);\n        }\n        return dirEntry;\n    }\n}\n\n/**\n * Works only with a http server\n * @param {FileSystemFileEntry} fsFileEntry\n * @return {Promise<File>}\n */\nfunction toFile(fsFileEntry) {\n    return new Promise((resolve, reject) => fsFileEntry.file(resolve, reject));\n}\n\n/**\n * @param {FileSystemDirectoryEntry} fsDirEntry\n * @return {AsyncGenerator<FileSystemEntry>}\n */\nasync function * readFileSystemDirectoryEntry(fsDirEntry) {\n    const reader = fsDirEntry.createReader();\n    let part = [];\n    do {\n        part = await new Promise((resolve, reject) => reader.readEntries(resolve, reject));\n        for (const entry of part) {\n            yield entry;\n        }\n    } while (part.length);\n}\n\n/**\n * @param {DataTransferItem[]} dtItems\n * @return {Promise<FileSystemEntry[]>}\n */\nasync function dtItemsToFileSystemEntries(dtItems) {\n    const result = [];\n    for (const entry of dtItems) {\n        result.push(await dtItemToFileSystemEntry(entry));\n    }\n    return result;\n}\n\n/**\n * @param {DataTransferItem} entry\n * @return {Promise<FileSystemEntry>}\n */\nasync function dtItemToFileSystemEntry(entry) {\n    return entry.webkitGetAsEntry();\n}\n","import {ref, computed, watchEffect, toRaw} from \"vue\";\nimport {FileEntry} from \"./FileEntry.js\";\n\n/** @type {import(\"vue\").Ref<File[]>} */\nconst files = ref([]);\n/** @type {import(\"vue\").Ref<DataTransferItem[]>} */\nconst dtItems = ref([]);\n\n/** @type {import(\"vue\").Ref<Boolean>} */\nexport const dropHover = ref(false);\n/** @type {import(\"vue\").Ref<Number>} */\nexport const dropHoverItemCount = ref(0);\n/** @type {import(\"vue\").Ref<String[]>} */\nexport const dropHoverTypes = ref([]);\n\n/** @type {import(\"vue\").Ref<FileEntry[]>} */\nexport const fileEntries = ref([]);\n/** @type {import(\"vue\").Ref<Boolean>} */\nexport const parsing = ref(false);\nwatchEffect(async () => {\n    const time = Date.now();\n    parsing.value = true;\n    if (dtItems.value.length) {\n        fileEntries.value = await FileEntry.fromDataTransferItems(dtItems.value);\n    } else {\n        fileEntries.value = FileEntry.fromFiles(files.value);\n    }\n    parsing.value = false;\n    console.log(\"[FileEntry parsing][time]:\", Date.now() - time, \"ms\");\n    console.log(\"[fileEntries]\", toRaw(fileEntries.value));\n});\n\n/** @type {import(\"vue\").ComputedRef<FileEntry>} */\nexport const file = computed(() => {\n    return fileEntries.value[0];\n});\n/** @type {import(\"vue\").ComputedRef<Number>} */\nexport const count = computed(() => {\n    return fileEntries.value.length;\n});\n\n/** @param {DataTransfer} dataTransfer */\nexport function setDataTransferHover(dataTransfer) {\n    const count = dataTransfer.items.length;\n    const allTypes = [...dataTransfer.items].map(item => item.type);\n    const types = [...new Set(allTypes)];\n\n    dropHoverItemCount.value = count;\n    dropHoverTypes.value = types;\n    console.log(\"[setDataTransferHover]:\", count, types);\n}\nexport function resetDataTransferHover() {\n    dropHoverItemCount.value = 0;\n    dropHoverTypes.value = [];\n}\n\n/** @param {DataTransfer} dataTransfer */\nexport function setDataTransfer(dataTransfer) {\n    console.log(dataTransfer);\n    setFiles(dataTransfer.files);\n    setDtItems(dataTransfer.items);\n}\n/** @param {FileList} filelist */\nexport function setFiles(filelist) {\n    /** @type {File[]} */\n    const _files = [...filelist];\n    files.value = _files;\n    console.log(\"[setFiles]:\", _files);\n}\n/** @param {DataTransferItemList} items */\nexport function setDtItems(items) {\n    /** @type {DataTransferItem[]} */\n    const _dtItems = [...items];\n    dtItems.value = _dtItems;\n    console.log(\"[setDtItems]:\", _dtItems); // bug in chromium: `type` and `kind` is \"\" in the console when expand the array.\n\n    console.log(_dtItems[0].kind);\n    console.log(_dtItems[0].type);\n}\nexport function resetDtItems() {\n    dtItems.value = [];\n}\n","<template>\n  <div class=\"default-hover-text\">{{text}}</div>\n</template>\n\n<script setup>\nimport {computed} from \"vue\";\nimport {dropHoverItemCount} from \"./file-input-state.js\";\nconst text = computed(() => {\n  const postfix = dropHoverItemCount.value > 1 ? \"s\" : \"\";\n  return `Drop ${dropHoverItemCount.value} file${postfix}`;\n});\n</script>\n\n<style scoped>\n.default-hover-text {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n","<template>\n  <div class=\"default-prompt-text\" :title=\"names\">\n    <div class=\"parsing\" v-if=\"parsing\">Parsing...</div>\n    <div v-else-if=\"count\">{{count}} file{{count > 1 ? \"s\" : \"\"}}</div>\n    <div v-else style=\"display: contents\"><slot>Select file</slot></div>\n  </div>\n</template>\n\n<script setup>\n//todo split to 2 comps\n//todo use props\n\nimport {count, fileEntries, parsing} from \"./file-input-state.js\";\nimport {computed} from \"vue\";\nconst names = computed(() => {\n  return fileEntries.value.slice(0, 50).map(file => file.name).join(\"\\n\");\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.default-prompt-text {\n  width: inherit;\n  height: inherit;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  &:hover {\n    //text-decoration: underline;\n  }\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n</style>\n","<template>\n<div\n    class=\"file-input\"\n    ref=\"fileInputElem\"\n    :class=\"{'drop-hover': dropHover}\"\n>\n  <label>\n    <input type=\"file\"\n           :accept=\"accept\"\n           :multiple=\"multiple\"\n           @change=\"onFileInputChange\"\n           style=\"display: none\"\n    >\n\n    <span class=\"content hover\" v-if=\"dropHover\">\n      <slot name=\"hover\"><FileInputDefaultHoverText/></slot>\n    </span>\n    <span class=\"content selected\" v-else-if=\"file && !parsing\">\n      <slot name=\"selected\"><FileInputDefaultText/></slot>\n    </span>\n    <span class=\"content prompt\" v-else>\n      <slot name=\"prompt\"><FileInputDefaultText/></slot>\n    </span>\n\n  </label>\n  <teleport to=\"body\">\n    <div class=\"file-input-hover-modal\" :class=\"{'drop-hover': dropHover}\"></div>\n  </teleport>\n</div>\n</template>\n\n<script setup>\nimport FileInputDefaultHoverText from \"./FileInputDefaultHoverText.vue\";\nimport FileInputDefaultText from \"./FileInputDefaultText.vue\";\n\nimport {ref, toRefs, onMounted, computed} from \"vue\";\nimport {\n  parsing,\n  file,\n  dropHover,\n  setFiles,\n  setDataTransfer,\n  setDataTransferHover,\n  resetDataTransferHover, resetDtItems\n} from \"./file-input-state.js\";\n\nconst props = defineProps({\n  globalDropZone: {\n    type: Boolean,\n    default: true\n  },\n  accept: {\n    type: String,\n    default: \"*/*\"\n  },\n  multiple: {\n    type: Boolean,\n    default: true\n  },\n});\nconst {\n  /** @type {import(\"vue\").Ref<Boolean>} */\n  globalDropZone,\n} = toRefs(props);\n\n\n/** @param {Event} event */\nfunction onFileInputChange(event) {\n  const fileElem = event.target;\n  setFiles(fileElem.files);\n  resetDtItems();\n}\n\n\n/** @type {import(\"vue\").Ref<HTMLElement|null>} */\nconst fileInputElem = ref(null);\n/** @type {import(\"vue\").Ref<HTMLElement>} */\nconst dropZone = computed(() => {\n  if (globalDropZone.value) {\n    return document.body;\n  }\n  return fileInputElem.value;\n});\nonMounted(() => {\n  if (!globalDropZone.value) {\n    disableDragOverNotDropZone();\n  }\n  initListeners();\n});\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nfunction initListeners() {\n  dropZone.value.addEventListener(\"drop\", onDrop);\n  dropZone.value.addEventListener(\"dragover\", onDragOver);\n  dropZone.value.addEventListener(\"dragleave\", onDragLeave);\n  dropZone.value.addEventListener(\"dragenter\", onDragEnter);\n}\nfunction onDrop(event) {\n  stopEvent(event);\n  dropHover.value = false;\n  setDataTransfer(event.dataTransfer);\n}\nfunction onDragOver(event) {\n  stopEvent(event);\n  event.dataTransfer.dropEffect = \"copy\";\n}\nfunction onDragEnter(event) {\n  stopEvent(event);\n  if (!dropHover.value) {\n    dropHover.value = true;\n  } else {\n    return;\n  }\n  setDataTransferHover(event.dataTransfer);\n}\nfunction onDragLeave(event) {\n  stopEvent(event);\n  if (!dropZone.value.contains(event.relatedTarget)) {\n    dropHover.value = false;\n    resetDataTransferHover();\n  }\n}\n\nfunction disableDragOverNotDropZone() {\n  /** @param {DragEvent} event */\n  const dragOverCallback = event => {\n    if (!dropZone.value.contains(event.target)) {\n      stopEvent(event);\n      event.dataTransfer.dropEffect = \"none\";\n    }\n  };\n  document.body.addEventListener(\"dragover\", dragOverCallback);\n}\n\n\n</script>\n\n<style lang=\"scss\" scoped>\n.file-input {\n  transition: background-color 0.1s;\n  border: solid 1px var(--file-input-border);\n  box-sizing: border-box;\n  &.drop-hover {\n    background-color: var(--drop-file-hover);\n    transition: background-color 0.1s;\n  }\n  &:hover {\n    background-color: var(--drop-hover);\n  }\n  &:active {\n    background-color: var(--drop-active);\n  }\n}\n.file-input, label, .content {\n  width: 100%;\n  height: 100%;\n}\n\n.file-input-hover-modal {\n  height: 50px;\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n  background-image: linear-gradient(to top, rgba(0,0,0,0.15), rgba(0,0,0,0.005));\n\n  transition: opacity 0.25s ease-out;\n  opacity: 0;\n  &.drop-hover {\n    opacity: 1;\n  }\n}\n</style>\n\n\n\n\n\n\n\n\n\n\n","<template>\n  <div class=\"file-input-wrapper\">\n    <FileInput :accept=\"`application/json,application/gzip`\" :multiple=\"false\"/>\n  </div>\n</template>\n\n<script setup>\nimport {setScan} from \"../core/folders.js\";\nimport {clearSearch} from \"../core/search.js\";\n\nimport {watch} from \"vue\";\nimport FileInput from \"./file-input/FileInput.vue\";\nimport {file} from \"./file-input/file-input-state.js\";\n\nwatch(file, () => {\n  if (file.value) {\n    clearSearch();\n    void setScan(file.value.file);\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n\n::v-deep(.file-input) {\n  border-right: 0;\n  border-left:  0;\n}\n.file-input-wrapper {\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 100%;\n  grid-template-rows: 100%;\n  width: 100%;\n  min-height: 35px;\n}\n</style>\n","<template>\n  <tr class=\"row\"\n      @click=\"onClick\"\n      @mousedown=\"onMousedown\"\n      @mouseover=\"onMouseover\"\n      @mouseleave=\"onMouseleave\"\n      :title=\"title\"\n      :class=\"{error}\"\n  >\n      <td class=\"icon\">{{icon}}</td>\n      <td class=\"name\">{{entry.name}}</td>\n      <td class=\"size\" :class=\"sizeClass\">{{size}}</td>\n      <td class=\"mtime\">{{mtime}}</td>\n<!--      <td class=\"type\">{{entry.type}}</td>-->\n<!--      <td class=\"filler\"></td>-->\n  </tr>\n</template>\n\n<script setup>\nimport {toRefs, computed} from \"vue\";\nimport {meta, openedFolder, openFolder, parsingStateNumber, separator} from \"../core/folders.js\";\nimport {bytesToSizeWinLike, dateToDayDateTimeString, isImage, isVideo} from \"../util.js\";\nimport {hoveredEntry} from \"../core/entries.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst props = defineProps([\"entry\"]);\n\nconst size = computed(() => {\n  if (parsingStateNumber.value) {\n    // force recomputing on change\n  }\n  return entry.value.hasErrors ? \"\" : bytesToSizeWinLike(entry.value.size);\n});\n\nconst sizeClass = computed(() => {\n  if (size.value === \"0 B\") {\n    return \"Z\";\n  }\n  return size.value.split(\" \")[1];\n});\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nconst entry = toRefs(props).entry;\n\n/** @type {import(\"vue\").Ref<Boolean>} */\nconst error = computed(() => {\n  return entry.value.hasErrors;\n});\n\n/** @type {import(\"vue\").ComputedRef<String>} */\nconst mtime = computed(() => {\n  if (entry.value.mtime === undefined) {\n    return \"\";\n  }\n  const time = dateToDayDateTimeString(entry.value.mtime, false);\n  return time.slice(0, -3); // trim seconds\n});\n\n/** @type {import(\"vue\").ComputedRef<String>} */\nconst title = computed(() => {\n  if (entry.value.hasErrors) {\n    return JSON.stringify(entry.value.errors[0], null, \" \");\n  }\n  if (entry.value.type === \"symlink\") {\n    return entry.value.pathTo;\n  }\n});\n\n/** @type {import(\"vue\").Ref<String>} */\nconst icon = computed(() => {\n  if (entry.value.type === \"folder\") {\n    return \"📁\";\n  } else if (entry.value.type === \"file\") {\n    if (isVideo(entry.value.name)) {\n      return \"🎦\";\n    } else if (isImage(entry.value.name)) {\n      return \"🖼\";\n    }\n    return \"📄\";\n  } else if (entry.value.type === \"symlink\") {\n    return \"🔗\";\n  }\n  return \"👾\";\n});\n\nfunction onClick(event) {\n  debugMessageFromEntry(entry.value);\n\n  if (entry.value.type === \"folder\") {\n    openFolder(entry.value);\n  }\n}\n\n/** @param {MouseEvent} event */\nfunction onMousedown(event) {\n  const MIDDLE_BUTTON = 1;\n  const RIGHT_BUTTON = 2;\n  if (event.button === MIDDLE_BUTTON) {\n    event.preventDefault();\n    console.log(\n        entry.value,\n        [...meta.value.path,...entry.value.path.map(e => e.name)].join(separator.value).replace(\"//\", \"/\")\n    );\n\n    if (openedFolder.value !== entry.value.parent) {\n      openFolder(entry.value.parent);\n    }\n  }\n}\n\nfunction onMouseover(event) {\n  hoveredEntry.value = entry.value;\n}\nfunction onMouseleave(event) {\n  hoveredEntry.value = null;\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.row {\n  width: 100%;\n  min-height: 28px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background-color: var(--blue-2);\n  }\n  * {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n  td {\n    &.icon {\n      border-left: 2px solid transparent;\n      width: 24px;\n      text-align: center;\n      user-select: none;\n    }\n    &.name {\n      display: block;\n      //width: 880px; // gets it from the parent\n      white-space: pre; // to display tailing spaces\n    }\n    &.size {\n      text-align: end;\n      min-width: 80px;\n      &.Z {\n        color: #888;\n      }\n      &.B {\n        color: #666;\n      }\n      &.KB {\n        color: #0b0;\n      }\n      &.MB {\n        color: #0070dd;\n      }\n      &.GB {\n        color: #a335ee;\n      }\n      &.TB {\n        color: #ff8000;\n      }\n    }\n    &.mtime {\n      text-align: end;\n      width: 145px;\n      color: #777;\n    }\n    &.type {\n      text-align: end;\n      width: 58px;\n      user-select: none;\n    }\n    //&.filler {\n    //  width: inherit;\n    //}\n  }\n  &.error {\n    .icon {\n      border-left: 2px solid red;\n    }\n  }\n}\n</style>\n","<template>\n<div class=\"intersection\" ref=\"intersection\"></div>\n</template>\n\n<script setup>\nimport {onBeforeUnmount, onMounted, ref} from \"vue\";\nimport {count, limit} from \"../core/entries.js\";\n\n/** @param {IntersectionObserverEntry[]} entries */\nconst callback = (entries) => {\n  const [entry] = entries;\n  if (entry.isIntersecting) {\n    if (count.value > limit.value) {\n      limit.value = limit.value + 50;\n    }\n  }\n}\nconst observer = new IntersectionObserver(callback);\n\n/** @type {import(\"vue\").Ref<HTMLElement>} */\nconst intersection = ref(null);\n\nonMounted(() => {\n  observer.observe(intersection.value);\n});\nonBeforeUnmount(() => {\n  observer.disconnect();\n});\n</script>\n\n<style scoped>\n.intersection {\n  width: 100%;\n  position: relative;\n  bottom: 120px;\n}\n</style>\n","<template>\n  <div class=\"content\"\n       @contextmenu=\"onContextMenu\"\n  >\n    <table class=\"rows\" v-if=\"listLimited.length\">\n      <tbody>\n        <Row v-for=\"entry of listLimited\" :entry=\"entry\"/>\n        <IntersectionRow/>\n      </tbody>\n    </table>\n    <div class=\"empty-message\" v-if=\"empty && !error\">\n      <span>The folder is empty.</span>\n    </div>\n    <div class=\"error-message\" v-if=\"error\">\n      <div>\n        <h2>Error</h2>\n        <table>\n          <tr>\n            <td>syscall</td>\n            <td><pre>{{error.syscall}}</pre></td>\n          </tr>\n          <tr>\n            <td>code</td>\n            <td><pre>{{error.code}}</pre></td>\n          </tr>\n          <tr>\n            <td>errno</td>\n            <td><pre>{{error.errno}}</pre></td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Row from \"./Row.vue\";\nimport IntersectionRow from \"./IntersectionRow.vue\";\nimport {goBack, empty, openedFolder} from \"../core/folders.js\";\nimport {listLimited} from \"../core/entries.js\";\nimport {computed, onMounted, ref} from \"vue\";\n\n/** @type {import(\"vue\").ComputedRef<ScanError>} */\nconst error = computed(() => {\n  if (openedFolder.value.hasErrors) {\n    return openedFolder.value.errors[0];\n  }\n  return false;\n});\n\nfunction onContextMenu(event) {\n  event.preventDefault();\n  goBack();\n}\n\nconst nameElemWidth = ref(\"880px\");\nonMounted(() => {\n  const w = document.body.offsetWidth;\n  if (w < 1280) {\n    let px = 880 - (1280 - w);\n    px = px < 140 ? 140 : px;\n    nameElemWidth.value = `${px}px`;\n  }\n});\n\n</script>\n\n\n<style lang=\"scss\" scoped>\n::v-deep(.row .name) {\n  width: v-bind(nameElemWidth);\n}\n\n.content {\n  width: 100%;\n  overflow: auto;\n  .rows {\n    width: 100%;\n    overflow: auto;\n  }\n  .empty-message {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--gray-2);\n  }\n  .error-message {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: var(--red-1);\n    div {\n      h2 {\n        margin: 0;\n        padding-bottom: 6px;\n        padding-left: 2px;\n      }\n      pre {\n        display: inline;\n      }\n      td {\n        padding-right: 3px;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"status\">\n    <span>Items count: {{count}}</span>\n    <span v-show=\"hoveredEntry\">. Hover item's size: {{size}}</span>\n  </div>\n</template>\n\n<script setup>\nimport {count, hoveredEntry} from \"../core/entries.js\";\nimport {computed} from \"vue\";\nimport {bytesToSizeWinLike} from \"../util.js\";\n\nconst size = computed(() => hoveredEntry.value?.size && bytesToSizeWinLike(hoveredEntry.value.size));\n</script>\n\n<style scoped>\n.status {\n  padding: 2px 2px 2px 6px;\n}\n</style>\n","<template>\n  <div class=\"switch\">\n    <button\n        class=\"order-by-name\"\n        title=\"Order by name\"\n        @click=\"onClick('name')\"\n        :class=\"{active: orderBy === 'name'}\"\n    >{{ orders.name  ? \"N\" : \"n\"}}</button>\n    <button\n        class=\"order-by-size\"\n        title=\"Order by size\"\n        @click=\"onClick('size')\"\n        :class=\"{active: orderBy === 'size'}\"\n    >{{ orders.size  ? \"S\" : \"s\"}}</button>\n    <button\n        class=\"order-by-date\"\n        title=\"Order by date\"\n        @click=\"onClick('mtime')\"\n        :class=\"{active: orderBy === 'mtime'}\"\n    >{{ orders.mtime ? \"D\" : \"d\"}}</button>\n  </div>\n</template>\n\n<script setup>\nimport {orderBy, toggleOrder, orders} from \"../core/entries.js\";\n\n// todo optimise reversing.\n// todo cancel sorting (for large arrays) on new click while sorting\n\n/** @param {\"name\"|\"size\"|\"mtime\"} value */\nfunction onClick(value) {\n  if (orderBy.value === value) {\n    toggleOrder();\n  }\n  orderBy.value = value;\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.switch {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\nbutton.active {\n  font-weight: bold;\n}\n\nbutton {\n  width: 22px;\n  margin: 1px 3px;\n  padding: 2px 6px;\n  outline-width: 1px;\n  outline-color: var(--blue-1);\n  border: 1px solid var(--gray-2);\n  box-sizing: border-box;\n  background-color: var(--gray-1);\n  &:hover {\n    border-bottom: var(--blue-1) solid 1px;\n    background: var(--blue-2);\n  }\n  &:active {\n    background: var(--blue-3);\n  }\n}\n</style>\n","<template>\n  <div class=\"main\">\n    <Switch     style=\"grid-area: switch;\"/>\n    <AddressBar style=\"grid-area: address;\"/>\n    <Search     style=\"grid-area: search;\"/>\n    <Tabs       style=\"grid-area: tabs;\"/>\n    <Guide      style=\"grid-area: content;\" v-if=\"showGuide\"/>\n    <InnerModal style=\"grid-area: content;\" v-else-if=\"scanParsing && searchAwaiting\">\n      [Search]: Scan parsing awaiting\n    </InnerModal>\n    <Content    style=\"grid-area: content;\" v-else/>\n    <Status     style=\"grid-area: status;\"/>\n    <Debug      style=\"grid-area: debug;\"/>\n  </div>\n</template>\n\n<script setup>\nimport AddressBar from \"./AddressBar.vue\";\nimport Search from \"./Search.vue\";\nimport Tabs from \"./Tabs.vue\";\nimport Content from \"./Content.vue\";\nimport Status from \"./Status.vue\";\nimport Switch from \"./Switch.vue\";\nimport Debug from \"./Debug.vue\";\nimport Guide from \"./Guide.vue\";\nimport InnerModal from \"./InnerModal.vue\";\nimport {computed, onMounted} from \"vue\";\nimport {meta, setScan} from \"../core/folders.js\";\nimport {search} from \"../core/search.js\";\nimport {bytesToSize, bytesToSizeWinLike} from \"../util.js\";\nimport {scanParsing, searchAwaiting} from \"../core/state.js\";\n\nglobalThis.bytesToSize = bytesToSize;\nglobalThis.bytesToSizeWinLike = bytesToSizeWinLike;\n\n\n// some kind of hack, but okay // don't show if a file selected, or remote scan is loading\nconst showGuide = computed(() => !meta.value && !new URL(location.href).searchParams.get(\"filepath\"));\n\n\n// Already opened directory, no need to open with input\nonMounted(async () => {\n  const url = new URL(location.href);\n  const filepath = url.searchParams.get(\"filepath\");\n  if (filepath) {\n    /** @type {Response} */\n    const response = await fetch(filepath);\n    await setScan(response);\n  }\n  const _search = url.searchParams.get(\"search\");\n  if (_search) {\n    search.value = _search;\n  }\n});\n\n</script>\n\n<style lang=\"scss\" scoped>\n.main {\n  grid-template-areas: \"switch address search \"\n                       \"tabs   content content\"\n                       \"status status  status \"\n                       \"debug  debug   debug  \";\n\n  display: grid;\n  grid-template-columns: 7em 2fr 1fr;\n  grid-template-rows:    2em 1fr;\n\n  height: 720px;\n  max-height: 100vh;\n  width: 1280px;\n  max-width: 100%;\n  box-sizing: border-box;\n\n  grid-gap: 1px;\n  border: 1px solid var(--gray-2);\n  background-color: var(--gray-2);\n  * {\n    background-color: white;\n  }\n}\n</style>\n","import {createApp} from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","p","setImmediate","globalThis","port1","port2","MessageChannel","queue","onmessage","shift","callback","postMessage","push","sleep","ms","Promise","resolve2","setTimeout","videoExtensions","imageExtensions","dateToDayDateString","dateValue","utc","_date","Date","pad2","str","toString","padStart","console","warn","_utc","year","month","date","dateToDayDateTimeString","hours","minutes","seconds","time","async","iterateAsyncDataSource","dataSource","Response","body","ReadableStream","stream","reader","getReader","done","value","read","iterateReadableStream","Blob","part","blob","chunkSize","index","blobChunk","slice","size","blob2","Uint8Array","arrayBuffer","iterateBlob","bytesToSize","bytes","decimals","i","Math","floor","log","Number","parseFloat","pow","toFixed","bytesToSizeWinLike","result","number","trunc","toPrecision","toTruncPrecision3","sort","ref","orderBy","orders","name","mtime","reverseOrder","computed","compare","Intl","Collator","numeric","sensitivity","comparator","pre","cur","k","entries","parsingStateNumber","openedFolder","folders","files","symlinks","fifos","charDevs","blockDevs","sockets","limit","list","search","length","searchResult","listLimited","count","hoveredEntry","debugMessage","addMessage","message","appendMessage","debugMessageFromEntry","entry","isProxy","toRaw","hasErrors","_a","btime","entryTypes","SimpleEntry","constructor","parent","errorsIDMap","this","_size","errors","map","id","get","pathTo","content","addChild","children","increaseContentSize","addHardlinks","entries2","total","hardlinks","hardlinksTotal","_contentSize","filter","e","isEmpty","Boolean","root","path","EntryStreamParser","rootId","Map","hidMap","setMeta","meta2","meta","errorsMap","Object","v","code","syscall","errno","split","parse","sEntriesPart","rootUpdated","pid","simpleEntry","set","hid","array","processHIDMapAsync","simpleEntries","timeNow","now","totalLinks","forEach","then","timeEnd","folderDummy","scanParsing","searching","searchAwaiting","clearSearch","setSearchResult","rawResult","defineProperty","join","addSearchResultToGlobalThis","watch","resolve","scanParsingCompleted","watchEffect","r","performSearchDebounced","runnable","timerId","clearTimeout","apply","arguments","debounce","performSearch","folder","request","folderRaw","isReactive","time1","performance","search2","startsWith","justSearch","some","prefix","url","URL","searchText","hostname","pathname","searchParams","pathnameEndsWithSlash","endsWith","resourceFullName","match","resName","ext","resExt","_b","groups","r1","RegExp","regex","defaultPrefix","caret","dollar","percent","sizeString1","decimal1","prefix1","exclamations","plus","minus","tildes","sizeString2","decimal2","prefix2","_c","text","multiplyByPrefix","prefixes","indexOf","extra1","extra2","sizeNum","replaceAll","size2Num","size2","dec1","dec2","rangeSearch","a","b","_min","max","min","findAll","includes","count2","diff","orders2","from","to","blue","word","parts","o","curWord","search3","searcher","time2","sortedResult","resultSet","Set","allSize","reduce","acc","val","computeEntrySize","filesSize","customSearchText","debug.appendMessage","excludeSet","childrenSize","child","has","predicate","res","partSize","list2","takePart","folderEntry","listAllEntries","curTime","parseScan","input","parser","contentType","headers","isGZip","obj","decoder","TextDecoder","textParser","TextParser","uint8Array","pakoIsLoaded","src","reject","onload","onerror","event","crossOrigin","append","appendScript","loadPako","chunks","inflator","pako","Inflate","prototype","onData","chunk","u8Array","err","error","msg","unGZipAsyncIterator","textPart","decode","scanResultEntries","parsePart","parseGZippedJSONScan","isJSON","streamParseJSONScan","newValue","oldValue","__publicField","trimComma","handleStart","line","objects","metaLines","startHandled","handleLine","isLastLine","buffer","isLastPart","lines","JSON","execution","abortRequested","_promise","_resolve","abort","start","abortIfRequested","setScan","metaInited","rootInited","startTime","scanMeta","rootEntry","rootContentUpdated","markRaw","json","openFolder","separator","scanRootPath","openedFolders","unref","empty","files2","scanDate","title","platform","doString","repeat","pad","commonFiles","unusualFiles","additional","root2","toUpperCase","part1","part2","showSep","goToRoot","root3","toRefs","props","isLast","onClick","onContextmenu","preventDefault","folderPath","navigator","clipboard","writeText","inputRef","onClearClick","focus","FileEntry","file","file2","_name","lastModified","Symbol","iterator","flat","fromDataTransferItems","dtItems2","fileSystemEntries","dtItemToFileSystemEntry","dtItemsToFileSystemEntries","fileSystemEntry","fromFileSystemEntry","fromFiles","fsEntry","isFile","fsFileEntry","isDirectory","dirEntry","fsDirEntry","createReader","readEntries","readFileSystemDirectoryEntry","webkitGetAsEntry","dtItems","dropHover","dropHoverItemCount","dropHoverTypes","fileEntries","parsing","setDataTransfer","dataTransfer","setFiles","items","_dtItems","kind","setDtItems","filelist","_files","postfix","names","globalDropZone","onFileInputChange","target","fileInputElem","dropZone","stopEvent","stopPropagation","onDrop","onDragOver","dropEffect","onDragEnter","allTypes","item","types","setDataTransferHover","onDragLeave","contains","relatedTarget","onMounted","dragOverCallback","addEventListener","disableDragOverNotDropZone","sizeClass","stringify","icon","filename","isVideo","isImage","onMousedown","button","replace","onMouseover","onMouseleave","observer","IntersectionObserver","isIntersecting","intersection","onBeforeUnmount","disconnect","onContextMenu","nameElemWidth","w","offsetWidth","px","showGuide","location","filepath","response","_search","createApp","mount"],"mappings":"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"}