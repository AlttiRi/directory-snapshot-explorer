{"version":3,"mappings":"weACI,MAAMA,EAAUC,SAASC,cAAc,QAAQF,QAC/C,KAAIA,GAAWA,EAAQG,UAAYH,EAAQG,SAAS,kBAApD,CAGA,UAAWC,KAAQH,SAASI,iBAAiB,6BACzCC,eAAeF,GAEf,sBAAkBG,IAClB,UAAWC,KAAYD,EACf,GAAkB,cAAlBC,EAASC,KAGF,eAAQD,EAASE,WACH,SAAjBC,EAAKC,SAAmC,kBAAbD,EAAKE,KAChCP,eAAeK,EAE1B,IACFG,QAAQb,SAAU,CAAEc,WAAW,EAAMC,SAAS,GAdhD,CA6BD,SAASV,eAAeF,GACpB,GAAIA,EAAKa,GAEL,OACJb,EAAKa,IAAK,EAEJ,QApBV,SAAsBC,GAClB,MAAMC,EAAY,GAWX,OAVHD,EAAOE,YACPD,EAAUC,UAAYF,EAAOE,WAC7BF,EAAOG,iBACPF,EAAUG,eAAiBJ,EAAOG,gBACX,oBAAvBH,EAAOK,YACPJ,EAAUK,YAAc,UACI,cAAvBN,EAAOK,YACZJ,EAAUK,YAAc,OAExBL,EAAUK,YAAc,cACrBL,CACV,CAOqBM,CAAarB,GACzBsB,QAAKC,KAAMR,EACpB,KCzCE,MAAMS,EAAeC,WAAWD,cAA0C,WAC7E,MAAME,MAACA,QAAOC,GAAS,IAAIC,eACrBC,EAAQ,GAOd,OALAH,EAAMI,UAAY,WACGD,EAAME,SAE/B,EAEW,SAASC,GACZL,EAAMM,YAAY,MAClBJ,EAAMK,KAAKF,EACnB,CACA,CAbiF,GAe1E,SAASG,MAAMC,GAClB,OACW,IAAIC,aADJ,IAAPD,EACmBE,GAAWd,EAAac,GAE5BA,GAAWC,WAAWD,EAASF,GACtD,CAKA,MAAMI,EAAkB,CAAC,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,OAKjG,MAAMC,EAAkB,CAAC,MAAO,MAAO,OAAQ,MAAO,OAAQ,OAAQ,MAAO,QAK7E,MAAMC,EAAkB,CAAC,MAAO,OAAQ,MAAO,MAAO,OAwB/C,SAASC,eAAeC,GAC3B,MAJwB,iBADHC,EAKLD,IAJoBC,aAAiBC,OAIxBF,EAAUG,QAAQ,wCAAyC,kBAAoBH,EALzG,IAAkBC,CAMzB,CAGO,SAASG,oBAAoBJ,EAAWK,GAAM,GACjDL,EAAYD,eAAeC,GACrB,QAAQ,IAAIM,KAAKN,GAIvB,SAASO,KAAKC,GACV,OAAOA,EAAIC,WAAWC,SAAS,EAAG,IACrC,CALwB,iBAArBC,EAAMF,YACEG,aAAK,uBAAwBZ,GAKnC,QAAOK,EAAM,MAAQ,GACrBQ,EAAQF,EAAM,MAAMG,eACpBC,EAAQJ,EAAM,MAAMG,YAAiB,EACrCE,EAAQL,EAAM,MAAMG,WAE1B,OAAOD,EAAO,IAAMN,KAAKQ,GAAS,IAAMR,KAAKS,EACjD,CAGO,SAASC,wBAAwBjB,EAAWK,GAAM,GACrDL,EAAYD,eAAeC,GACrB,QAAQ,IAAIM,KAAKN,GACvB,SAASO,KAAKC,GACV,OAAOA,EAAIC,WAAWC,SAAS,EAAG,IACrC,CACK,QAAOL,EAAM,MAAQ,GACrBa,EAAWP,EAAM,MAAMG,YACvBK,EAAWR,EAAM,MAAMG,cACvBM,EAAWT,EAAM,MAAMG,cAEvBO,EAAOd,KAAKW,GAAQ,IAAMX,KAAKY,GAAW,IAAMZ,KAAKa,GAC3D,OAAOhB,oBAAoBO,EAAON,GAAO,IAAMgB,GAAQhB,EAAM,IAAM,GACvE,CAoDOiB,eAAgBC,uBAAuBC,GAI1C,GAHIA,aAAsBC,WACtBD,EAAaA,EAAWE,MAExBF,aAAsBG,qBAcvBL,gBAAsCM,GACnC,QAASA,EAAOC,YACtB,OAAa,CACT,MAAMC,KAACA,EAAgCC,eAAeC,EAAOC,OAC7D,GAAIH,EACA,YAEEC,CACT,CACL,CAtBeG,CAAsBV,QACrC,GAAeA,aAAsBW,KAClB,eA6BZ,UAAsBC,EAAMC,EAAY,SAC3C,IAAIC,EAAQ,EACZ,OAAa,CACT,MAAMC,EAAYH,EAAKI,MAAMF,EAAOA,EAAQD,GACxC,IAACE,EAAUE,KAAO,YAEhBR,KAAKM,GACFD,IACZ,CAEDhB,eAAeW,KAAKG,GAChB,OAAO,IAAIM,iBAAiBN,EAAKO,cACpC,CACL,CA1C2BC,CAAYpB,eACfqB,CAGxB,CA4CO,SAASC,iBAAiBC,GACvB,QAAMA,EAAItC,WAChB,OAAOD,EAAIE,SAASF,EAAIwC,QAAU,EAAIxC,EAAIwC,OAAS,IAAIC,MAAM,WAAWC,KAAK,KAAKC,WACtF,CAWO,SAASC,YAAYC,EAAOC,EAAW,GAC1C,GAAc,IAAVD,EAAsB,YAEfC,IAAW,EAAI,EAAIA,EACxB,MACAC,EAAIC,KAAKC,MAAMD,KAAKE,IAAIL,GAASG,KAAKE,IAHlC,OAIV,OAAOC,OAAOC,YAAYP,EAAQG,KAAKK,IAJ7B,KAIoCN,IAAIO,QAAQR,IAAa,IAFzD,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEqBC,EACvF,CAUO,SAASQ,mBAAmBV,GAC/B,GAAIA,EAAQ,KAAQ,OAAOA,EAAQ,KAE/B,MAAIG,KAAKC,MAAMD,KAAKE,IAAIL,GAASG,KAAKE,IAAI,OAC1CM,EAASX,EAAQG,KAAKK,IAAI,KAAMN,GAKpC,OAJIS,GAAU,MACVT,IACUS,SAUX,SAA2BC,GAC1B,MACAA,EAAS,GACTD,EAASR,KAAKU,MAAe,IAATD,GAAgB,IAC7BA,EAAS,IAChBD,EAASR,KAAKU,MAAe,GAATD,GAAe,GAC5BA,EAAS,MACPD,OAAKE,MAAMD,IAExB,GAAIA,EAAS,GACF,SAAOE,YAAY,GAClC,GAAeF,EAAS,EACT,SAAOE,YAAY,GAEvB,SAAOA,YAAY,EAC9B,CAvBWC,CAAkBJ,GAAU,IAPrB,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAOfT,EACnD,CAmDO,SAASc,KAAKC,GACV,OAAC,KAAKA,IAAS,qCAC1B,CCnSO,MAAMC,EAAOC,GAAI,GAGXC,EAAeD,EAAI,SAEnBE,EAAUF,EAAI,QACdG,EAASH,EAAI,CACtBI,MAAM,EACNnC,MAAM,EACNpB,MAAM,IAEGwD,EAAeC,GAAS,IAAMH,EAAO5C,MAAM2C,EAAQ3C,SACzD,SAASgD,cACZJ,EAAO5C,MAAM2C,EAAQ3C,QAAU4C,EAAO5C,MAAM2C,EAAQ3C,MACxD,CAMA,MAAMiD,QAACA,GAAW,IAAIC,KAAKC,cAAS,EAAW,CAC3CC,SAAS,EACTC,YAAa,WAkBV,SAASC,WAAWC,EAAKC,GACtB,QAAIV,EAAa9C,OAAa,IACpC,GAAIwC,EAAKxC,MAAO,CACR,GAAkB,SAAlB2C,EAAQ3C,MACR,OAAOiD,EAAQM,EAAIV,KAAMW,EAAIX,MAAQY,EACjD,GAAqC,SAAlBd,EAAQ3C,MACP,SAAIU,KAAO8C,EAAI9C,MAAQ+C,EAC3C,GAAqC,SAAlBd,EAAQ3C,MAAkB,CACjC,MAAM0D,EAAWhB,EAAa1C,MACtB,SAAI0D,GAAYF,EAAIE,IAAaD,CAC5C,CACJ,CACM,QACX,CAGO,MAAME,EAAUZ,GAAS,IACrB,IACAa,GAAa5D,MAAM6D,QAAQrB,KAAKc,eAChCM,GAAa5D,MAAM8D,MAAMtB,KAAKc,eAC9BM,GAAa5D,MAAM+D,SAASvB,KAAKc,eACjCM,GAAa5D,MAAMgE,MAAMxB,KAAKc,eAC9BM,GAAa5D,MAAMiE,SAASzB,KAAKc,eACjCM,GAAa5D,MAAMkE,UAAU1B,KAAKc,eAClCM,GAAa5D,MAAMmE,QAAQ3B,KAAKc,eAM9Bc,GAAQ3B,EAAI,IAGZ4B,GAAOtB,GAAS,IACrBuB,GAAOtE,MAAMiB,OACNsD,GAAavE,MAEjB2D,EAAQ3D,QAGNwE,GAAczB,GAAS,IACzBsB,GAAKrE,MAAMS,MAAM,EAAG2D,GAAMpE,SAGxByE,GAAQ1B,GAAS,IACtBwB,GAAavE,MAAMiB,OAASmD,GAAMpE,MAC3BuE,GAAavE,MAAMiB,OAEvBoD,GAAKrE,MAAMiB,SAITyD,GAAejC,EAAI,MAGhCkC,OAAOC,eAAe9H,WAAY,OAAQ,CACtC+H,IAAM,IACKR,GAAKrE,QAGpB2E,OAAOC,eAAe9H,WAAY,QAAS,CACvC+H,IAAM,IACKR,GAAKrE,MAAM8E,KAAIC,GAASA,EAAMlC,SCxGtC,MAAMmC,GAAevC,EAAI,IACzB,SAASwC,WAAWC,GACvBF,GAAahF,MAAQkF,CACzB,CACO,SAASC,cAAcD,GAC1BF,GAAahF,OAASkF,CAC1B,CAKO,SAASE,sBAAsBL,GAElC,GADQlG,YAAIwG,EAAQN,GAAS,SAAW,OAAQO,EAAMP,IAClDA,EAAMQ,UACNP,GAAahF,MAAQ,OAClB,CACH,MAAM6C,EAAOkC,EAAMlC,KAAQ,IAAMkC,EAAMlC,KAAKpC,MAAM,EAAG,KAAOsE,EAAMlC,KAAK5B,OAAS,GAAK,GAAK,KAAO,IAAO,GAExG,IAAIuE,EAAW,QACK,IAAhBT,EAAMU,OACND,EAASjI,KAAK,UAAe2B,wBAAwB6F,EAAMU,OAAO,YAElD,IAAhBV,EAAMW,OACNF,EAASjI,KAAK,UAAe2B,wBAAwB6F,EAAMW,OAAO,OAEtEF,EAAW,IAAIA,EAAU3C,EAAM,GAAG9B,iBAAiBgE,EAAMrE,UAAUsB,mBAAmB+C,EAAMrE,UAC5FsE,GAAahF,MAAQwF,EAASG,WAAYC,IAAGzE,KAAK,MACrD,CACL,CC5BO,MAAM0E,GAAa,CAAC,SAAU,OAAQ,UAAW,OAAQ,UAAW,WAAY,UAEhF,MAAMC,YAOTC,YAAYhB,EAAOiB,EAAQC,GAEvBC,KAAKrD,KAAOkC,EAAMlC,KAElBqD,KAAKF,OAASA,EAEdE,KAAKxK,KAAOqJ,EAAMrJ,KAEdqJ,EAAMrE,OAENwF,KAAKC,MAAQpB,EAAMrE,MAEnBqE,EAAMU,QAENS,KAAKE,OAASrB,EAAMU,OAEpBV,EAAMW,QAENQ,KAAKR,MAAQX,EAAMW,OAMnBX,EAAMsB,SAEDH,YAASnB,EAAMsB,OAAOvB,QAAUmB,EAAYpB,IAAIyB,MAGrDvB,EAAMwB,SAENL,KAAKK,OAASxB,EAAMwB,QAEpBxB,EAAMyB,UAENN,KAAKM,QAAUzB,EAAMyB,SAGzB,WAAQC,SAASP,KACpB,CAEDO,SAAS1B,GACAmB,KAAKQ,WAKNR,KAAKQ,SAAW,IAEfR,cAAS3I,KAAKwH,GACdmB,yBAAoBnB,EAAMrE,KAClC,CAGDiG,aAAahD,EAASiD,GAElBV,KAAKW,UAAYlD,EAEjBuC,KAAKY,eAAiBF,CACzB,CAGDG,QAAQC,GAEJd,KAAKc,KAAOA,CACf,CAEDC,oBAAoBvG,GACXA,IAGAwF,KAAKgB,eACNhB,KAAKgB,aAAe,GAExBhB,KAAKgB,cAAgBxG,EACjBwF,KAAKF,QAAUtF,GACVwF,YAAOe,oBAAoBvG,GAEvC,CAqBG+E,YACI,QAAgB,IAAhBS,KAAKE,OACL,OAAOF,KAAKE,OAEhB,GAAkB,WAAdF,KAAKxK,MAAqBwK,KAAKQ,SAAU,CACzC,IAAIpH,EAAOsC,OAAOuF,iBACP,eAASjB,KAAKQ,SACjBU,EAAM3B,MAAQnG,IACdA,EAAO8H,EAAM3B,OAGjB,OAAS7D,OAAOuF,iBACT,QAEd,CAEJ,CAMGzG,WACI,MAAc,WAAdwF,KAAKxK,KACEwK,KAAKgB,cAAgB,EAEzBhB,KAAKC,OAAS,CACxB,CAGGtC,oBACO,qBAAK6C,eAAU,eAAuB,WAAXW,EAAE3L,SAAsB,EAC7D,CAEGoI,kBACO,qBAAK4C,eAAU,eAAuB,SAAXW,EAAE3L,SAAoB,EAC3D,CAEGqI,qBACO,qBAAK2C,eAAU,eAAuB,YAAXW,EAAE3L,SAAuB,EAC9D,CAGGsI,kBACO,qBAAK0C,eAAU,eAAuB,SAAXW,EAAE3L,SAAoB,EAC3D,CAEGuI,qBACO,qBAAKyC,eAAU,eAAuB,YAAXW,EAAE3L,SAAuB,EAC9D,CAEGwI,sBACO,qBAAKwC,eAAU,eAAuB,aAAXW,EAAE3L,SAAwB,EAC/D,CAEGyI,oBACO,qBAAKuC,eAAU,eAAuB,WAAXW,EAAE3L,SAAsB,EAC7D,CAGG4L,oBACA,OAAQC,QAAQ,SAAKrB,wBAAUjF,OAClC,CAEGsE,sBACA,OAAOgC,QAAQ,cAAKlB,aAAL,IAAapF,OAC/B,CAEGuG,WACI,OAACtB,KAAKF,OAGHE,KAAKF,OAAOwB,KAFRtB,IAGd,CAEGuB,WACI,OAACvB,KAAKF,OAGH,IAAIE,KAAKF,OAAOyB,KAAMvB,MAFlB,CAACA,KAGf,CAEGwB,wBACA,OAAOxB,KAAKyB,sBACf,CACDC,sBAAsBC,GAAO,EAAM5F,EAAS,CAAE,EAAE6F,EAAS5B,MACrD,GAAoB,WAAhB4B,EAAOpM,MAAqBoM,EAAOpB,SAAU,CAClC,eAASoB,EAAOpB,SAClBzE,EAAOmF,EAAM1L,MAGduG,EAAOmF,EAAM1L,QAFbuG,EAAOmF,EAAM1L,MAAQ,EAIN,WAAf0L,EAAM1L,MAAqBmM,GACtB3B,2BAAsB2B,EAAM5F,EAAQmF,GAG1C,QACV,CACJ,CACDO,qBAAqBE,GAAO,GACxBhJ,QAAQS,KAAK,wBACP,QAAS4G,KAAK0B,sBAAsBC,GAEnC,OADPhJ,QAAQkJ,QAAQ,wBACT9F,CACV,CAGD,EAAE+F,OAAOC,YAEL,SADM/B,KACFA,KAAKQ,SACM,eAASR,KAAKQ,eACbU,CAGnB,CAGDc,OACW,UAAIhC,KACd,CAMDiC,YAAYxE,GACDA,SAAQmB,KAASuC,OAAIA,KAAIa,MACnC,CAEGE,iBACA,OAAOlC,KAAKmC,eACf,CAMDA,cAAcrB,GACV,MAAMsB,EAAQpC,KAAKuB,KAAK3C,KAAIuC,GAAKA,EAAExE,OAC/B,MAMA,OAJU0F,SADVvB,WAAMS,MACI,IAAIT,EAAKS,QAASa,GAAOnH,KAAK6F,EAAKwB,WAAa,KAEhDF,EAAMnH,KAAK,KAErBoH,EAAQE,WAAW,MACZF,EAAQ9H,MAAM,GAElB8H,CACV,EAqCE,MAAMG,kBACT3C,cACIG,KAAKyC,OAAS,EAETzC,aAAU0C,IAEV1C,gBAAa0C,GACrB,CAGDC,QAAQ7B,GAEJd,KAAKc,KAAOA,EAEZ,MAAM8B,EAAY9B,EAAK8B,UAClBA,IAIL5C,KAAKD,YAAc,IAAI2C,IAAIjE,OAAOhB,QAAQmF,GACrChE,KAAI,EAAErB,EAAGsF,MACN,MAAOC,EAAMC,EAASC,GAASzF,EAAE0F,MAAM,KAChC,OAACJ,EAAG,CAACC,OAAMC,UAASC,MAAOtH,OAAOsH,IAAO,KAE3D,CAKDE,MAAMC,SACF,IAAIC,GAAc,EAClB,UAAWvE,KAASsE,EAAc,CAE9B,MAAMrD,EAAS,SAAKE,SAAIrB,IAAIE,EAAMwE,MAAQC,OACpCC,EAAc,IAAI3D,YAAYf,EAAOiB,EAAQE,KAAKD,aAIxD,GAHmB,WAAflB,EAAMrJ,MACNwK,KAAKpB,IAAI4E,IAAI3E,EAAMuB,GAAImD,GAEvB1E,EAAM4E,IAAK,CACX,MAAMC,EAAQ1D,KAAK2D,OAAOhF,IAAIE,EAAM4E,MAAQ,GACvCzD,YAAOwD,IAAI3E,EAAM4E,IAAK,IAAIC,EAAOH,GACzC,CACG1E,EAAMwE,MAAQrD,KAAKyC,SACLW,KAErB,CACM,OACH9B,KAAMtB,KAAKpB,IAAID,IAAIqB,KAAKyC,QACxBW,cACAQ,UAAWT,EAAapI,OAE/B,CAED8I,qBACS7D,KAAK2D,OAAOnJ,OAGT7B,YAAI,YAAaqH,KAAK2D,QAC9BhL,QAAQS,KAAK,UAMrBC,eAAkCsK,GAC9B,IAAIrI,EAAI,EACJlC,EAAO,EAEX,UAAYqK,EAAKK,KAAkBH,EAAOlG,UAAW,CAC7C,KAAEnC,IAAM,KAAO,CACT,QAAUjD,KAAK0L,MACjBC,EAAU5K,EAAO,KACVA,UACD9B,QAEb,CAGD,MAAM2M,EAAavI,OAAO+H,EAAIR,MAAM,KAAK,IACzCa,EAAcI,SAAa/C,IACrBA,eAAa2C,EAAeG,EAAU,GAE/C,CACL,CAxB2BJ,MAAKF,QACnBQ,MAAK,IAAMxL,QAAQkJ,QAAQ,YACnC,EAyBE,MAAMuC,GAAc,IAAIxE,YAAY,CACvCpK,KAAM,SACNmH,KAAM,GACN0G,IAAK,MACN,MClYI,MAAMgB,GAAsB9H,GAAI,GAC1B+H,GAAsB/H,GAAI,GAC1BgI,GAAsBhI,EAAI,GAC1BiI,GAAsBjI,EAAI,GAC1BkI,GAAsBlI,EAAI,GAC1BmI,GAAsBnI,GAAI,GAC1BoI,GAAsBpI,GAAI,uvBCFhClD,eAAeuL,cAAcC,GAM5B,MALJ9F,WAAW8F,GAEAjO,sBAAYkO,mBAACC,OAAO,qEAAkE,oBAI7F,IACArP,QAAakB,WAAWoO,KAAKtP,KAAKmP,EAIrC,OAHQ1D,GAEL,YADApC,WAAWoC,EAEd,CACDzL,EAAOA,EAAK4L,KACZ3I,QAAQ8C,IAAI/F,GAGR,MAASuP,cAAcvP,GAC3BqG,EAAOmJ,KAAOL,EACdlM,QAAQ8C,IAAIM,GAEZ,MAAMoJ,EAAU,CACZN,MACAzE,GAAIrE,EAAOqJ,IACXC,QAAStJ,EAAOuJ,SAChB9F,MAAOzD,EAAOyD,OAASxG,wBAAwB+C,EAAOyD,OACtDD,MAAOxD,EAAOwD,OAASvG,wBAAwB+C,EAAOwD,QAGtD,GAAgB,WAAhBxD,EAAOvG,KAAmB,CACpB,QAAkB,IAAIoK,YAAY,CACpCpK,KAAM,SACNmH,KAAM,GACN0G,IAAK,MACN,MACHkC,EAAgBhF,SAASxE,GAChBA,GACZ,CAEDA,EAAOuF,KAAKT,QAAQ,CAChBsE,YAEJK,WAAWzJ,EACf,CA+BA,SAASkJ,cAAcQ,EAAU3F,EAAS,MAChC,QAVV,SAAkB2F,EAAU3F,GAElB,QApBC,CAEHnD,KAAoB,QAHNjH,EAqBW+P,GAlBd9I,KAAgB,cAAgBjH,EAAKiH,KAEhDnC,KAAM9E,EAAK8E,KAEXgF,MAA2B,IAApB9J,EAAKgQ,aAEZnG,MAA+B,IAAxB7J,EAAKiQ,iBAEZvF,GAAI1K,EAAK0K,GAET5K,KAAqB,eAAdE,EAAKF,MAAuC,WAAdE,EAAKF,KAAqB,SAAW,OAE1E6N,IAAK3N,EAAKkQ,UAflB,IAAsBlQ,EAsBlB,MAAMmQ,EAAS,IAAIjG,YAAYkG,EAAShG,GAGjC,OAFP+F,EAAOT,IAAMK,EAASrF,GACtByF,EAAOP,SAAWG,EAASJ,QACpBQ,CACX,CAGmBE,CAASN,EAAU3F,GAC9B,GAAgB,WAAhB+F,EAAOrQ,KACI,cAAS,IAAIiQ,EAAS9H,WAAY8H,EAAS7H,OAClDqH,cAAce,EAAOH,GAGtB,QACX,CC9EO,MAAMzH,GAAS7B,EAAI,IACnB,SAAS0J,cACZtN,QAAQ8C,IAAI,iBACZ2C,GAAOtE,MAAQ,EACnB,CAGO,MAAMuE,GAAe6H,EAAW,IAKvC,SAASC,gBAAgBpK,GAEf,QAAYqD,EAAMrD,GACxBsC,GAAavE,MAAQsM,EACrBlI,GAAMpE,MAAQ,GAoBlB,SAAqCsM,GAEjCxP,WAAWwH,OAASgI,EACZzN,YAAI,qBAAsByN,GAC3B3H,sBAAe7H,WAAWwH,OAAQ,WAAY,CACjDO,MACIhG,QAAQ8C,IAAI,WACf,IAEEgD,sBAAe7H,WAAWwH,OAAQ,QAAS,CAC9CO,IAAM,IACK/H,WAAWwH,OAAOQ,KAAIC,GAASA,EAAMlC,SAG7C8B,sBAAe7H,WAAWwH,OAAQ,WAAY,CACjDO,IAAM,IACK/H,WAAWwH,OAAOQ,KAAIC,GAASA,EAAMlC,OAAM1B,KAAK,OAGnE,CArCIoL,CAA4BD,EAChC,CAMO,SAASE,aAEN,QAAOjO,KAAK0L,MACL1F,SAAM/B,KAAKc,YAClB,QAAY/E,KAAK0L,MAAQ3K,EAGxB,OAFCT,YAAI,uBAAwB4N,EAAW,MAC/CC,EAAWnI,IACJkI,CACX,CAZAE,EAAM,CAAChK,EAASG,EAAcJ,IAAe,qBAoC7C,IAAI/E,QAAU,OACViP,GAAuBlP,QAAQC,SAAQ,GAU3C,SAASkP,SAAS3O,GAKd,OAAOA,EACF4O,aACT,CAhBAC,GAAY,KACHvC,GAAcxK,MAIfrC,SAAQ,IAHRA,SAAQ,GACRiP,GAAuB,IAAIlP,SAAasP,WAAUA,IAGrD,IAYLC,OAAOC,iBAAiB,WAAoBC,IACtB,gBAAdA,EAAMC,MAGVlS,SAASmS,cAAc,SAASrN,MAAQmN,EAAMG,SAC9CpS,SAASmS,cAAc,SAASE,cAAc,IAAIC,MAAM,UAAQ,IAKpE,MAAMC,GNxDC,SAAkBC,EAAUjQ,EAAK,IAChC,MACJ,OAAO,WAECkQ,GACAC,aAAaD,GAEjBA,EAAU/P,YAAW,KACR8P,QAAMxH,KAAM2H,WACXF,SACXlQ,EACN,CACL,CM4C+BqQ,CAASC,cAAe,KACvDxO,eAAewO,gBACX,GAAInD,GAAU5K,MAEV,YADAnB,QAAQ8C,IAAI,+BAIV,QAAa,IAAIqM,IAAIC,SAASrR,MAAMsR,aAAarJ,IAAI,cASvD,GARAsJ,IACaC,qBAAQ,cAAe9J,GAAOtE,OAC3C9E,SAASmT,MAAQ,aAGrBzD,GAAU5K,OAAQ,GAGd,UAAgB4M,GAEhB,YADA/N,QAAQ8C,IAAI,oCAGZ9C,QAAQ8C,IAAI,kCAGhB,MAAM2M,EAAS1K,GAAa5D,MACtBuO,EAAUjK,GAAOtE,MAEvB,GAAgB,KAAZuO,EAGA,OAFA3D,GAAU5K,OAAQ,OAClB6K,GAAe7K,OAAQ,GAK3B,MAAMwO,EAAYC,EAAWH,GAAUhJ,EAAMgJ,GAAUA,EAEjDI,EAAQC,YAAY1E,OACpBhI,OAACA,EAAQqC,OAAQsK,SAkE3BrP,eAAwB+O,EAAQhK,eAGxB,MACAA,GAHIzF,YAAI,iBAAkByF,GAG1BA,EAAOmE,WAAW,MACToG,KACTvK,EAASA,EAAO7D,MAAM,OACnB,CACMoO,KACH,QAAahC,SAASvI,GAExBwK,IAAexK,IACPzF,YAAI,iBAAkBiQ,GAC9BxK,EAASwK,EAEhB,CAED,IAAIC,EAAa,KAGbC,EAAmB,WAUvB,GAD2B1K,EAAOmE,WAAW,QAAUnE,EAAOmE,WAAW,OACjD,CACpB,MAAMwG,EAAY3K,EAAO7D,MAAM,MAAMQ,QAC/BiO,EAASD,EAAUxG,WAAW,KAC9B0G,EAAOF,EAAUG,SAAS,KAE5BF,GAAUC,GACSH,aAEnBD,EAAa,aADbzK,EAAS2K,EAAUxO,MAAM,GAAK,OAG9ByO,GACmBF,aAEnBD,EAAa,cADbzK,EAAS2K,EAAUxO,MAAM,OAGzB0O,GACmBH,eAEnBD,EAAa,gBADbzK,EAAS2K,EAAUxO,MAAM,GAAK,QAGXuO,QAEnBD,EAAa,YADbzK,EAAS2K,KAGhB,CAGG,MAGoBI,EAFpBR,EACyB,QAArBG,EACgB,CAACM,EAAQC,IAAcD,IAAWC,EAElC,CAACD,EAAQC,IAAcD,EAAON,GAAkBO,GAG3C,QAArBP,EACgB,CAACM,EAAQC,IAAc1C,SAASyC,KAAYC,EAE5C,CAACD,EAAQC,IAAc1C,SAASyC,GAAQN,GAAkBO,GAIlF,SAASC,WAAWD,GACT,eAAQjB,GAASvJ,GACbsK,EAActK,EAAMlC,KAAM0M,IAExC,CAEG,IAAC,WAAY,WAAWE,SAAenL,EAAOmE,WAAWiH,KAAU,CAC7D,QAAM,IAAI1B,IAAI1J,GAEpB,GAAqB,oBAAjByG,EAAI4E,UAAmD,WAAjB5E,EAAI6E,SAC1CtL,EAASyG,EAAImD,aAAarJ,IAAI,SAC3B,CACG,QAAwBkG,EAAI6E,SAAS3O,OAAS,GAAK8J,EAAI6E,SAASR,SAAS,KAEzES,EAAmB,UADRC,EAAwB/E,EAAI6E,SAASnP,MAAM,GAAG,GAAMsK,EAAI6E,UACvC1O,MAAM,iBAAa,OACrD,IAAK2O,EACD,MAAO,CAAC5N,OAAQ,GAAIqC,UAElB,MACFzB,KAAMkN,EACNC,IAAKC,IACL,WAAiB/O,MAAM,oCAA+B,aAAU,CAAC2B,KAAMgN,GAC3EvL,EAASyL,GAAYD,GAAyBG,EAAU,IAAIA,IAAW,GAC1E,CAGM,OAAChO,aADauN,WAAWlL,GAChBA,SACnB,CAwCD,MAAM4L,EAAK,+CACX,GAAI5L,EAAOpD,MAAM,IAAIiP,OAAOD,IAAM,CAC9B,MAOME,EAAQ,IAAID,OAAOD,EAPZ,yDACA,0HAIA,YAFA,0DACA,mHAKPG,cAEFA,QAGAC,SAEAC,UAEAC,cAGAC,WAEAC,UAEAC,eAEAC,OAGAC,QAEAC,SAEAC,cAGAC,WAEAC,UAEAC,IAEA,WAAOhQ,MAAMkP,SAAb,IAAqBe,SAAU,GAEnC,GAAIV,EAAa,CAqCb,IA7BIlO,EACAN,EA4BKmP,iBAAT,SAA0BpR,EAAO0P,EAAS,KACtC,QAAc,IAAV1P,EACA,OAEJ,MAAMqR,EAAW,CAAC,IAAK,IAAK,IAAK,IAAK,KACtC,OAAO5P,KAAKU,MAAMnC,EAAS,MAAQqR,EAASC,QAAQ5B,GACvD,EA1CD7Q,QAAQ8C,IAAI,CACR0O,gBACAkB,OAAQ,CAACjB,QAAOC,SAAQC,WACxBC,cAAaC,WAAUC,UAASC,eAChCY,OAAQ,CAACX,OAAMC,QAAOC,SAAQC,cAAaC,WAAUC,aAMzD,IAAIO,EAAU7P,OAAO6O,EAAYiB,WAAW,SAAU,KAChD,QAAOD,EAAQ/S,WAErB,IAAIiT,EAAWX,GAAepP,OAAOoP,EAAYU,WAAW,SAAU,KACtE,MAAME,EAAkB,MAAVD,OAAU,eAGlBE,EAAOnB,EAAW9O,OAAO,KAAO8O,GAAY,EAC5CoB,EAAOb,EAAWrP,OAAO,KAAOqP,GAAY,EAUnC1R,2BAAYwS,EAAGC,GAC1B,MAAMC,KAACA,EAAMC,OAAOH,EAAIC,EAAI,CAACC,KAAMF,EAAGG,IAAKF,GAAK,CAACC,KAAMD,EAAGE,IAAKH,GACzDI,EAAM1Q,KAAKyQ,IAAI,EAAGD,GACxB1P,EAAO,oBAAoBP,mBAAmBmQ,SAAWnQ,mBAAmBkQ,KACnEjQ,QAAMmQ,QAAQ9D,GAAiBvJ,GAC7BA,EAAMrE,MAAQyR,GAAOpN,EAAMrE,MAAQwR,GAEjD,CAUD,GA1BAT,EAAWL,iBAAiBK,EAAWI,EAAMlB,GAAWN,GACxDsB,EAAWP,iBAAiBO,EAAWG,EAAMZ,GAAWb,GAyBpDC,EACA/N,EAAO,4BAA4B7B,KAC1BuB,QAAMmQ,QAAQ9D,GAAiBvJ,GAC7BA,EAAMrE,KAAKhC,WAAW+J,WAAW/H,aAG5C6P,EACAhO,EAAO,0BAA0B7B,KACxBuB,QAAMmQ,QAAQ9D,GAAiBvJ,GAC7BA,EAAMrE,KAAKhC,WAAW0Q,SAAS1O,aAG1C8P,EACAjO,EAAO,yBAAyB7B,KACvBuB,QAAMmQ,QAAQ9D,GAAiBvJ,GAC7BA,EAAMrE,KAAKhC,WAAW2T,SAAS3R,UAE7C,GACGmQ,GAAQe,QACFU,YAAYb,EAASA,EAAUE,QACxC,GACGb,GAASc,QACHU,YAAYb,EAASE,WAE3BZ,EACA,GAAIa,QACMU,YAAYb,EAAUE,EAAUF,EAAUE,OAC7C,CACH,MAAMlN,EAAQsM,EAAO9P,OACfsR,EAAO9Q,KAAKU,MAAgB,EAAVsP,EAAchN,EAAQ,WACxC6N,YAAYb,EAAUc,EAAMd,EAAUc,EAC/C,KACE,CACH,MAAM7C,EAASiB,GAAWN,EACtB,MAAqB,MAAXX,EAAgB,CAE1B,IAAI9M,EAASlC,EAAKO,OACdsR,EAAOnB,iBAAiB,EAAG1B,GAChB,IAAX9M,IACO2P,OAAKpQ,MAAMoQ,EAAO,KAG7B,IAAIC,EAAOf,EAAUc,EACjBE,EAAOhB,EAAUc,EACjB3B,IACO4B,IACH5B,EAAa3P,OAAS,IACtBwR,EAAKhB,EAAUhQ,KAAKU,MAAMoQ,EAAO,YAGnCD,YAAYE,EAAMC,EAC5C,MAC2BlQ,iBAAeP,mBAAmByP,KAChCxP,QAAMmQ,QAAQ9D,GAAiBvJ,GAC7BA,EAAMrE,OAAS+Q,GAGjC,CAEM,OADP5S,QAAQ8C,OAAOW,KAAKC,IACb,CAACN,SAAQqC,OAAQ/B,EACpC,CAAe,CACH,MAAMA,EAAO,oBAEb,OADA1D,QAAQ8C,OAAOW,KAAKC,IACb,CAACN,OAAQ,GAAIqC,OAAQ/B,EAC/B,CACJ,CACG+B,KAAOmE,WAAW,KAAM,CAClB,WAAC/M,EAAMgX,SAAQ,WAAOxR,MAAM,kDAA6C,aAAU,GACzF,GAAIxF,IACAmD,QAAQ8C,IAAI,CAACjG,OAAMgX,SACf7M,GAAWwM,SAAS3W,IAAO,CAIpB,OAACuG,aAHamQ,QAAQ9D,GAAiBvJ,GACnCA,EAAMrJ,OAASA,GAAQ2T,EAActK,EAAMlC,KAAM6P,KAE5CpO,SACnB,CAER,MACGA,KAAO+N,SAAS,KAAM,CACtB,MAAMM,EAAQrO,EAAO6E,MAAM,KAAKxD,WAAYiN,IACxC,KAAM3R,OAAS,EAAG,CAClB,IACI4R,GADA5Q,SAAeuN,WAAWmD,EAAMvV,SAE7B,QAAUuV,EAAMvV,SACnB6E,GAASA,GAAO0D,QAAOZ,GAASsK,EAActK,EAAMlC,KAAMgQ,MAEvD,OAAC5Q,UAAQqC,SACnB,CACJ,CACM,OAACrC,aAAcuN,WAAWlL,GAASA,OAASyK,GAAczK,EACrE,CApY+CwO,CAAStE,EAAWD,GAG3D,GAFJ3D,GAAU5K,OAAQ,EAEdsE,GAAOtE,QAAUuO,EAEjB,OADA1P,QAAQ8C,IAAI,kCACLoM,gBAIX,GADAlD,GAAe7K,OAAQ,GAClBiC,EACD,OAGJ8Q,WAAiB,iBADEpE,YAAY1E,MAAQyE,GACK3M,QAAQ,iBAC9CvE,QAEN6O,gBAAgBpK,GAEhB+Q,cAAoB,cADHxG,aAC0BzK,QAAQ,iBAC7CvE,QAENqB,QAAQS,KAAK,gCACP,QAAY,IAAI2T,IAAIhR,GACpBiR,EAAUjR,EAAOkR,QAAO,CAACC,EAAKC,IAAQC,iBAAiBD,EAAKE,GAAaH,GAAK,GAC9EI,EAAYvR,EAAO0D,QAAOZ,GAAwB,WAAfA,EAAMrJ,OAAmByX,QAAO,CAACC,EAAKC,IAAQA,EAAI3S,KAAO0S,GAAK,GACvGvU,QAAQkJ,QAAQ,gCAChBlJ,QAAQ8C,IAAI,CAACuR,UAASM,cAEFrO,iBAAGlD,EAAOhB,uBAAuBe,mBAAmBwR,OAAexR,mBAAmBkR,iBAAuBtE,KAE7HT,IACSjT,eAAQ,IAAI+G,EAAOhB,gBAEpC,CAUA,SAASqS,iBAAiBvO,EAAO0O,GACzB,GAAe,WAAf1O,EAAMrJ,KACN,OAAOqJ,EAAMrE,KAEjB,IAAIgT,EAAe,EACnB,UAAWtM,KAASrC,EAAM2B,UAAY,GAC9B+M,EAAWE,IAAIvM,KAGA,WAAfA,EAAM1L,KACUgY,oBAAiBtM,EAAOqM,GAExCC,GAAgBtM,EAAM1G,MAGvB,QACX,CAoWAnB,eAAe6S,QAAQ9D,EAAQsF,GAC3B,IAAIC,EAAM,GACNvU,EAAOf,KAAK0L,MACLtG,eAoBf,UAAyB2K,GACrB,MAAMwF,EAAW,IAEjB,IAAIzP,EAAO,GAEX,SAAU0P,SAASC,GACf,UAAWjP,KAAUiP,EAAYtN,UAAY,GACtB,WAAf3B,EAAMrJ,aACCqY,SAAShP,IAEpBV,EAAK9G,KAAKwH,GACNV,EAAKpD,SAAW6S,UACVzP,EACNA,EAAO,GAGlB,OACM0P,SAASzF,SACVjK,CACV,CAvC0B4P,CAAe3F,GAAS,CACpC,QAAU/P,KAAK0L,MACjBiK,EAAU5U,EAAO,KACVA,UACD9B,SAEV,UAAWuH,KAASpB,EACZiQ,EAAU7O,IACV8O,EAAItW,KAAKwH,EAGpB,CACM,QACX,CC5iBOxF,eAAgB4U,UAAUjW,GACvB,QAAS,IAAIwK,kBAEf,MAOA1B,EACA,GAPA9I,aAAiBwB,SACH0U,IAAMC,QAAQxP,IAAI,gBACzB3G,aAAiBkC,OACxBgU,EAAclW,EAAMxC,MA6M5B,SAAgB0Y,GACZ,OAAO7M,QAAQ6M,EAAYlT,MAAM,yBACrC,CA3MQoT,CAAOF,GAAc,CACrBvV,QAAQ8C,IAAI,wBACK,qBAkDzBpC,gBAAqCrB,GAC3B,QAAU,IAAIqW,YACdC,EAAa,IAAIC,WACnB,MAAI,EAAGnV,EAAO,EACD,qBAqBrBC,gBAAoCrB,GAkHzBwW,UAVXnV,iBACI,IAAKmV,GAAc,CACf,MAAMC,EAAM,mEACNtY,EAAY,4DP/FnB,SAAsBsY,EAAKtY,GAC9B,OAAO,IAAIqB,SAAQ,CAACC,EAASiX,KACnB,QAAS1Z,SAASC,cAAc,UACtCgB,EAAO0Y,OAASlX,EACTxB,aAAmByY,EAAO,CAAC1P,QAAS,wBAAyByP,MAAKtY,YAAW8Q,UACpFhR,EAAOwY,IAAMA,EACbxY,EAAOoD,OAAQ,EACXlD,IACAF,EAAOE,UAAYA,EACnBF,EAAO2Y,YAAc,aAEhB5Z,cAAK6Z,OAAO5Y,EAAM,GAEnC,COmFc6Y,CAAaL,EAAKtY,GACTqY,MACf7V,QAAQ8C,IAAI,iBACf,CACL,CA9GcsT,GAEV,IAAIC,EAAS,GACP,QAAW,IAAIC,KAAKC,QAC1BD,KAAKC,QAAQC,UAAUC,OAAS,SAAUC,GACtCL,EAAO3X,KAAKgY,EACpB,EACqB,qBAAW/V,uBAAuBtB,GAAQ,CACvDsX,EAASjY,KAAKkY,GACd,UAAWF,KAASL,QACVK,EAEVL,EAAS,EACZ,OACKM,EAASvT,OACXuT,EAASE,KACD7W,cAAM2W,EAASG,IAE/B,CAzCmCC,CAAoB1X,GAAQ,CACnD,KAAEsD,IAAM,IAAK,CACP,QAAUjD,KAAK0L,MACjBC,EAAU5K,EAAO,KACVA,UACD9B,QAGb,CACD,MAAMqY,EAAWC,EAAQC,OAAOC,EAAY,CAACnW,QAAQ,IAC/CoW,EAAoBzB,EAAW0B,UAAUL,GAC3CI,EAAkBhV,eACZgV,EAEb,CACL,CArEgCE,CAAqBjY,GACpC8I,IACDA,EAA+BoP,EAAIhZ,QACnCiZ,EAAOxN,QAAQ7B,SAEb,CAACA,UAASqP,EAAOjN,MAA6CgN,GAEhF,SA0MA,SAAgBhC,GACZ,OAAO7M,QAAQ6M,EAAYlT,MAAM,yBACrC,CA5MeoV,CAAOlC,GAAc,CAC5BvV,QAAQ8C,IAAI,uBACK,qBAgBzBpC,gBAAoCrB,GAC1B,QAAU,IAAIqW,YACdC,EAAa,IAAIC,WACnB,MAAI,EAAGnV,EAAO,EACD,qBAAcE,uBAAuBtB,GAAQ,CACtD,KAAEsD,IAAM,IAAK,CACP,QAAUjD,KAAK0L,MACjBC,EAAU5K,EAAO,KACVA,UACD9B,QAGb,CACD,MAAMqY,EAAWC,EAAQC,OAAOC,EAAY,CAACnW,QAAQ,IAC/CoW,EAAoBzB,EAAW0B,UAAUL,GAC3CI,EAAkBhV,eACZgV,EAEb,CACL,CAnCkCM,CAAoBrY,GACrC8I,IACDA,EAA+B4C,EAAMxM,QACrCiZ,EAAOxN,QAAQ7B,SAEb,CAACA,UAASqP,EAAOjN,MAA6CQ,GAE3E,CACDyM,EAAOtM,oBACX,CDoeA4C,EAAMrI,IAAQ/E,MAAO+N,EAAUkJ,KAE3B,IADuBlJ,EAzfvBjB,gBAAgB,SAigBhB,GAHAxB,GAAe7K,OAAQ,EAGnBsN,EAASrM,OAASuV,EAASvV,OAAS,EAAG,CACnC,KAASwH,WAAW,oBAEpB,kBADMqC,cAAcwC,UAGlBS,eACd,YACcN,IACT,ICraE,MAAMgH,WAAN1O,cACM0Q,gCACMA,sCACfA,+BAAY,IACZA,6BAAU,IAEVC,UAAUnU,GACC,SAAK6M,SAAS,KAAO7M,EAAK9B,MAAM,MAAS8B,CACnD,CAEDoU,YAAYC,GACR,GAAa,MAATA,EAGJ,MAAa,KAATA,GACA1Q,KAAK2Q,QAAQtZ,KAAK2I,KAAK4Q,UAAU3V,KAAK,UACtC+E,KAAK6Q,cAAe,SAGnB7Q,eAAU3I,KAAKqZ,EACvB,CAMDI,WAAWJ,EAAMK,GACTA,EACA/Q,KAAKgR,QAAUN,EAGf1Q,KAAKgR,QACLhR,KAAK2Q,QAAQtZ,KAAK2I,KAAKgR,OAASN,GAChC1Q,KAAKgR,OAAS,IAEThR,aAAQ3I,KAAKqZ,EAEzB,CAODV,UAAUL,GACA,QAAaA,EAASzG,SAAS,OAE/B+H,EAAQtB,EAAS1M,MAAM,MAE7B,QAAS3H,EAAI,EAAGA,EAAI2V,EAAMlW,OAAQO,IAAK,CACnC,MAAMoV,EAAOO,EAAM3V,GACbyV,EAAazV,IAAM2V,EAAMlW,OAAS,EAEpCgW,GAAcG,IAIblR,KAAK6Q,aAGD7Q,gBAAW0Q,EAAMK,GAFjB/Q,iBAAY0Q,EAAMK,GAI9B,CACG,IAEM,QAASI,KAAKjO,MAAM,IAAIlD,KAAKwQ,UAAUxQ,KAAK2Q,QAAQ1V,KAAK,SAExD,OADP+E,KAAK2Q,QAAU,GACR5U,CAMV,OALQoF,GAIC,MAHExI,YAAI,IAAIqH,KAAKwQ,UAAUxQ,KAAK2Q,QAAQ1V,KAAK,SACzCtC,YAAIqH,KAAK2Q,SACjBhY,QAAQ8C,IAAIuE,KAAM,CAACkR,aAAYvB,aACzBxO,CACT,CAEJ,EAKL,IAAIqN,IAAe,EClLnB,MAAM4C,GAAYlL,EAAW,MAEvB5E,GAAY4E,EAAW,MAEvBmL,GAAYC,EAAgBF,IAChBE,EAAgBhQ,IAIlC,MAAMiQ,GAAOrL,EAAW,ILyWjB,cAAgCtG,YACnCC,aAAYlD,KAACA,GAAQ,CAACA,KAAM,KAClB6U,OACF7U,OACAnH,KAAM,SACN6N,IAAK,MACN,MACErD,aAAQ,CAErB,EACK,CACGxF,WAGO,YAAKgG,SAASyM,QAAO,CAACC,EAAKhM,IAAUgM,EAAMhM,EAAM1G,MAAM,EACjE,IKvXL5D,WAAW2a,KAAOA,GAAKzX,MACvB,MAAM2X,GAAelV,GAAI,GAClB,SAASmV,YACZ/Y,QAAQ8C,IAAI,2BA+GZ+J,WAAWpB,IACX9C,GAAKxH,MAAQ,KACbsX,GAAStX,MAAQ,KACjBlD,WAAW0K,KAAO,KAClB1K,WAAWwR,OAAS,KAjHfmJ,SAAM/Q,SAAW,GACtBgG,EAAW9I,GACf,CAEA,MAAMiU,GAAQL,EAAgBC,IACxBK,GAAgBC,EAASJ,IAG/B,SAASK,qBACLtL,EAAW9I,GACf,CAwBA,MAAMqU,GAAY,IAtBlB,MACIlS,cACIG,KAAKgS,gBAAiB,EACjBhS,cAAWxI,QAAQC,UACxBuI,KAAKiS,SAAW,MACnB,CACDC,QAEI,OADAlS,KAAKgS,gBAAiB,EACfhS,KAAKmS,QACf,CACDC,QACIpS,KAAKmS,SAAW,IAAI3a,SAAasP,QAAKmL,SAAWnL,GACpD,CACDuL,mBACQ,QAACN,GAAUC,iBAGfhS,KAAKgS,gBAAiB,EACtBhS,KAAKiS,YACE,EACV,GAQE5Y,eAAeiZ,QAAQta,EAAOua,GAAa,GAC1ClO,GAAYvK,aACNiY,GAAUG,QAEpBzN,GAAoB3K,MAAQ,EAC5BuK,GAAYvK,OAAQ,EACpBiY,GAAUK,QAEV,IAAII,GAAa,EACbC,GAAa,EAEX,QAAYpa,KAAK0L,MACnB,IAEArD,EAFAtH,EAAOf,KAAK0L,MACZ2O,EAAiB,EAEJ,gBAAC5R,KAAM6R,EAAUrR,KAAMsR,EAAWxP,YAAayP,YAAoBjP,KAAcqK,UAAUjW,GAAQ,CAEhH,GADkB0a,KACdhS,EAAO,CACP,MAAMoS,GAAcJ,EAAiBhS,EAAQ,KAAKxE,YAAY,GAC1CuI,SAAQ/I,OAAOoX,EACtC,CAEG,MAAUT,mBAEH,OADP1Z,QAAQ8C,IAAI,2BAA4BpD,KAAK0L,MAAQgP,EAAW,OACzD,GAENN,GAAcG,KACVJ,GAAcG,IACfC,EAAU9R,KAAO6R,EACJH,KACb9R,EAAQiS,EAASjS,MACCgS,MAEtBlN,WAAWoN,EAAWL,GACTE,MAEX,QAAMpa,KAAK0L,OACb8O,GAAsB9O,EAAM3K,EAAO,MAC5BA,+BAED9B,QAEb,CAKM,4BAHPqB,QAAQ8C,IAAI,mBAAoBpD,KAAK0L,MAAQgP,EAAW,MAExD1O,GAAYvK,OAAQ,GACb,CACX,CAGO,MAAMwI,GAAYzF,GAAS,WACvB,mBAAS/C,YAAT,IAAgBwI,YAAa,OAG3B0Q,GAAenW,GAAS,WACjC,OAAO,SAASuU,eAAO,WAAQ,MAKtB1T,GAAewI,EAAW9B,IAE1B6O,GAAgBpW,GAAS,IAC3Ba,GAAa5D,MAAMyH,OAcvB,SAASiE,WAAW3G,EAAO0T,GAAa,SACtCA,iBAGL7U,GAAa5D,MAAQ+E,EACrBX,GAAMpE,MAAQ,GAEd,MAAMwH,EAAOzC,EAAMyC,KACnB1K,WAAW0K,KAAOA,EAClBA,EAAKxH,MAAQwH,EACJ8P,SAAQ9P,EAAKR,MAAQ,GAE1BjC,IAAU0S,GAAKzX,SACV,SAAKyX,SAAM/Q,eAAX,IAAqB2L,SAAS7K,MAC1BiQ,SAAMhR,SAASe,GACpBkF,EAAW+K,MAGNE,SAAQ5S,IAAU0S,GAAKzX,MAGpClD,WAAWwR,OAASvJ,EACZlG,YAAI,qBAAsBkG,EACtC,CACAJ,OAAOC,eAAe9H,WAAY,OAAQ,CACtC+H,YACW,2BAAWyJ,aAAQ,UAC7B,IASE,MAAM8K,GAAQrW,GAAS,IAAMyE,GAAKxH,OAAS4D,GAAa5D,MAAMsH,UAGrEqF,EAAM2K,IAAU/X,MAAO+N,EAAUkJ,KAEzB,GADI3X,YAAI,UAAWyY,GAAStX,QAC3BsX,GAAStX,MACV,OAEE,MAAC8D,QAAOD,mBAASE,SAAUsC,EAAQO,iBAAOyS,GAAY/B,GAAStX,MACjEsX,GAAStX,MAAMqZ,UACfpU,WACI,WAAWnB,gBAAoBD,kBAAwBE,gBAC3CsC,eAAoBO,kBAAsBvI,oBAAoBgb,MAEjF,6PC3LC,QAAQtW,GAAS,KACjB,IAACuU,GAAStX,MACZ,OAGI,MACF8D,gBAAOD,WAASE,WAChBE,YAAUC,QAAWF,UAAOG,QAC5ByC,WACA0S,WAAUD,GACV/B,GAAStX,MAEb,SAASuZ,SAAS3G,GAKT,cAAOjP,QAAQiP,GACjBjN,QAAO,EAAElC,EAAGsF,UAAa,IAANA,IACnBjE,KAAI,EAAErB,EAAGsF,KANd,SAAatK,GACX,MAAMgG,EAAQ,EAAIhD,KAAKU,MAAO1D,EAAIwC,OAAO,GAClC,SAAM,KAAKuY,OAAO/U,EAC1B,CAGoBgV,CAAIhW,GAAK,KAAOsF,IAChC5H,KAAK,KACX,CACD,MAAMuY,EAAcH,SAAS,CAACzV,QAAOD,UAASE,aACxC4V,EAAeJ,SAAS,CAACtV,WAAUC,YAAWF,QAAOG,YACrDyV,EAAaL,SAAS,CAAC3S,QAAO0S,WAAUD,SAAWA,EAAWhb,oBAAoBgb,QAAY,IAC9FhO,EAAUkO,SAASjC,GAAStX,MAAMqL,SAAW,IAE/C,MAOG,OALIpJ,EADM,UAAbqX,EACO,CAACI,EAAaC,EAAcC,EAAYvO,GAAS1F,QAAYoD,OAAG5H,KAAK,MAErE,CAACuY,EAAaE,EAAYvO,GAAS1F,QAAYoD,OAAG5H,KAAK,MAElEtC,QAAQ8C,IAAIM,GACLA,KAGHuF,EAAOzE,GAAS,WACd,MACAtE,EADW,IAAIya,GAAalZ,MAAO4D,GAAa5D,MAAMwH,KAAK3E,MAC5C1B,KAAKqH,GAAUxI,OAChC,SAAIyI,WAAW,MACVhK,EAAIgC,MAAM,GAEc,WAA7B6W,SAASC,eAAO,cACX9Y,EAAI,GAAGob,cAAgBpb,EAAIgC,MAAM,GAEnChC,KAEHqb,EAAQ/W,GAAS,IACd,IAAIyE,EAAKxH,OAAOS,MAAM,GAAG,GAAIU,KAAK,MAErC4Y,EAAQhX,GAAS,IACd,IAAIyE,EAAKxH,OAAOS,OAAM,GAAIU,KAAK,MAElC6Y,EAAUjX,GAAS,IACfoW,GAAcnZ,MAAMiB,OAAS,GAAqB,MAAfuG,EAAKxH,QAGlD,SAASia,WACDzS,QAAO5D,GAAa5D,MAAMwH,KAChCpC,sBAAsBoC,GACtBkE,WAAWlE,EACb,waC/DMjH,MAACA,EAAOkE,cAAOM,GAASmV,EAAOC,GAE/BC,EAASrX,GAAS,IACfxC,EAAMP,MAAQ,IAAMyE,EAAMzE,QAE7B8Z,EAAQ/W,GAAS,IACd,IAAIgC,EAAM/E,MAAM6C,MAAMpC,MAAM,GAAG,GAAIU,KAAK,MAE3C4Y,EAAQhX,GAAS,IACd,IAAIgC,EAAM/E,MAAM6C,MAAMpC,OAAM,GAAIU,KAAK,MAG9C,SAASkZ,UACPjV,sBAAsBL,EAAM/E,OAC5B0L,WAAW3G,EAAM/E,MACnB,+gBCPAT,eAAe+a,cAAcnN,GAC3BA,EAAMoN,iBACN,MAAMC,EAAa,IAAIlD,GAAStX,MAAMyH,QAAS7D,GAAa5D,MAAMyH,KAAK3C,QAAaC,EAAMlC,QAAO1B,KAAKqH,GAAUxI,OACxGnB,YAAI,qBAAsB2b,SAC5BC,UAAUC,UAAUC,UAAUH,EACtC,ikBCRA,MAAMI,EAAWnY,IACjB,SAASoY,6BAEPD,EAAS5a,MAAM8a,OACjB,CAEAvb,eAAewb,gBACT,IACF,MAAMxY,QAAakY,UAAUC,UAAUM,WAC/Bnc,YAAI,wBAAyB0D,GACrC+B,GAAOtE,MAAQuC,CAGhB,OAFQmT,GACC7W,cAAM,0BAA2B6W,EAC1C,CACH,CAEA,IAAIuF,EAAY,EAChB,SAASC,mBAAmB/N,GACtB,GAAc,UAAdA,EAAMC,IACR,OAEI,QAAM7O,KAAK0L,MACbA,EAAMgR,EAAY,IACpBL,EAAS5a,MAAM8a,QAEHG,GAEhB,QACAE,GAAU,IAAMjgB,SAASgS,iBAAiB,UAAWgO,sBACrDE,GAAY,IAAMlgB,SAASmgB,oBAAoB,UAAWH,4YClDnD,MAAMI,aAQTvV,aAAawV,cAAMvV,EAAQtK,YAAMmH,IACzB0Y,IAEArV,KAAKqV,KAAOA,GAEZvV,IAEAE,KAAKF,OAASA,EACdA,EAAOS,SAASP,OAEhBrD,IAEAqD,KAAKsV,MAAQ3Y,GAGjBqD,KAAKxK,KAAOA,CACf,CAEGmH,iBACA,OAAOqD,KAAKsV,QAAS,SAAKtV,gBAAM,SACnC,CAGDO,SAAS1B,GACAmB,KAAKQ,WAKNR,KAAKQ,SAAW,IAEfR,cAAS3I,KAAKwH,GACdmB,yBAAoBnB,EAAMrE,KAClC,CAIDuG,oBAAoBvG,GACXA,IAGAwF,KAAKgB,eAGNhB,KAAKgB,aAAe,GAExBhB,KAAKgB,cAAgBxG,EACjBwF,KAAKF,QACAE,YAAOe,oBAAoBvG,GAEvC,CAMGA,iBACI,MAAc,WAAdwF,KAAKxK,KACEwK,KAAKgB,cAAgB,GAEzB,cAAKqU,WAAL,IAAW7a,OAAQ,CAC7B,CAEG+E,kBACO,qBAAK8V,WAAL,IAAWE,eAAgB,CACrC,CAGGhU,WACI,OAACvB,KAAKF,OAGH,IAAIE,KAAKF,OAAOyB,KAAMvB,MAFlB,CAACA,KAGf,CAGD,EAAE8B,OAAOC,YAEL,SADM/B,KACFA,KAAKQ,SACM,eAASR,KAAKQ,eACbU,CAGnB,CAGDc,OACW,UAAIhC,KACd,CAMDiC,YAAYxE,GACDA,SAAQmB,KAASuC,OAAIA,KAAIa,MACnC,CAMDC,mCAAmCuT,GACzB,cA8Ednc,eAA0Cmc,GACtC,MAAMzZ,EAAS,GACf,UAAW8C,KAAS2W,EAChBzZ,EAAO1E,WAAWoe,wBAAwB5W,IAEvC,QACX,CApFwC6W,CAA2BF,GACnD7c,YAAI,uBAAwBgd,GAEpC,MAAM5Z,EAAS,GACf,UAAW6Z,KAAmBD,EAC1B5Z,EAAO1E,WAAWwe,oBAAoBD,IAEnC,QACV,CAMD3T,iBAAiBrE,GAEb,MAAM7B,EAAS,GACf,UAAWsZ,KAAQzX,EACR7B,OAAK,IAAIqZ,aAAa,CAACC,OAAM7f,KAAM,UAEvC,QACV,EAQL6D,eAAewc,oBAAoBC,EAAShW,EAAS,MACjD,GAAIgW,EAAQC,OACJ,IACMV,cAuBFW,EAvByDF,EAwB9D,IAAIte,SAAQ,CAACC,EAASiX,IAAWsH,EAAYX,KAAK5d,EAASiX,MAvBnD,WAAI0G,aAAa,CAACC,OAAM7f,KAAM,OAAQsK,UAIhD,OAHQqB,GAEE,OADPxI,QAAQsd,MAAM,+BAAgCH,EAAQnZ,KAAMwE,GACrD,IACV,MACT,GAAe2U,EAAQI,YAAa,CACtB,QAAW,IAAId,aAAa,CAAC5f,KAAM,SAAUsK,SAAQnD,KAAMmZ,EAAQnZ,OAEnEc,EAsBdpE,gBAA8C8c,GACpC,QAASA,EAAWC,eAC1B,IAAIxb,EAAO,GACR,GACQA,QAAM,IAAIpD,SAAQ,CAACC,EAASiX,IAAW3U,EAAOsc,YAAY5e,EAASiX,KAC1E,UAAW7P,KAASjE,QACViE,CAElB,OAAajE,EAAKG,OAClB,CA/BwBub,CAAqER,GACrF,gBAAiBjX,KAASpB,QAEhBoY,oBAAoBhX,EAAO0X,GAE9B,QACV,CAQL,IAAgBP,CAPhB,CA0CA3c,eAAeoc,wBAAwB5W,GACnC,OAAOA,EAAM2X,kBACjB,CCvMA,MAAM5Y,GAAQrB,EAAI,IAEZiZ,GAAUjZ,EAAI,IAGPka,GAAYla,GAAI,GAEhBma,GAAqBna,EAAI,GAEzBoa,GAAiBpa,EAAI,IAGrBqa,GAAcra,EAAI,IAElBsa,GAAUta,GAAI,GAC3BsK,GAAYxN,UACF,QAAOhB,KAAK0L,MAClB8S,GAAQ/c,OAAQ,EACZ0b,GAAQ1b,MAAMiB,OACd6b,GAAY9c,YAAcsb,aAAa0B,sBAAsBtB,GAAQ1b,OAErE8c,GAAY9c,MAAQsb,aAAa2B,UAAUnZ,GAAM9D,OAErD+c,GAAQ/c,OAAQ,EAChBnB,QAAQ8C,IAAI,gCAAiCpD,KAAK0L,MAAQ3K,EAAM,MAChET,QAAQ8C,IAAI,gBAAiB2D,EAAMwX,GAAY9c,OAAM,IAIlD,MAAMub,GAAOxY,GAAS,IAClB+Z,GAAY9c,MAAM,KAGhByE,GAAQ1B,GAAS,IACnB+Z,GAAY9c,MAAMiB,SAmBtB,SAASic,gBAAgBC,GAC5Bte,QAAQ8C,IAAIwb,GACZC,SAASD,EAAarZ,OAWnB,SAAoBuZ,GAEjB,QAAW,IAAIA,GACrB3B,GAAQ1b,MAAQsd,EACRze,YAAI,gBAAiBye,GAErBze,YAAIye,EAAS,GAAGC,MAChB1e,YAAIye,EAAS,GAAG5hB,KAC5B,CAlBI8hB,CAAWL,EAAaE,MAC5B,CAEO,SAASD,SAASK,GAEf,QAAS,IAAIA,GACnB3Z,GAAM9D,MAAQ0d,EACN7e,YAAI,cAAe6e,EAC/B,mGC7DM,QAAO3a,GAAS,KACpB,MAAM4a,EAAUf,GAAmB5c,MAAQ,EAAI,IAAM,GAC9C,cAAQ4c,GAAmB5c,aAAa2d,qOCK3C,QAAQ5a,GAAS,IACd+Z,GAAY9c,MAAMS,MAAM,EAAG,IAAIqE,KAAIyW,GAAQA,EAAK1Y,OAAM1B,KAAK,klBC+C9Dyc,eAEJA,GACE1D,EAAOC,GAIX,SAAS0D,kBAAkB1Q,GAEzBiQ,SADiBjQ,EAAMrF,OACLhE,OHShB4X,GAAQ1b,MAAQ,EGPpB,CAIM,QAAgByC,EAAI,MAEpBqb,EAAW/a,GAAS,IACpB6a,EAAe5d,MACV9E,SAASyE,KAEXoe,EAAc/d,QAYvB,SAASge,UAAU7Q,GACjBA,EAAMoN,iBACNpN,EAAM8Q,iBACR,CAcA,SAASC,OAAO/Q,GACd6Q,UAAU7Q,GACVwP,GAAU3c,OAAQ,EAClBkd,gBAAgB/P,EAAMgQ,aACxB,CACA,SAASgB,WAAWhR,GAClB6Q,UAAU7Q,GACVA,EAAMgQ,aAAaiB,WAAa,MAClC,CACA,SAASC,YAAYlR,GACnB6Q,UAAU7Q,GACLwP,GAAU3c,QACb2c,GAAU3c,OAAQ,EHlFf,SAA8Bmd,GAC3B1Y,QAAQ0Y,EAAaE,MAAMpc,OAC3Bqd,EAAW,IAAInB,EAAaE,OAAOvY,KAAYyZ,KAAK7iB,OACpD8iB,EAAQ,IAAI,IAAIvL,IAAIqL,IAE1B1B,GAAmB5c,MAAQyE,EAC3BoY,GAAe7c,MAAQwe,EACf3f,YAAI,0BAA2B4F,EAAO+Z,EAClD,CG8EEC,CAAqBtR,EAAMgQ,cAC7B,CACA,SAASuB,YAAYvR,GACnB6Q,UAAU7Q,GACL2Q,EAAS9d,MAAM2e,SAASxR,EAAMyR,iBACjCjC,GAAU3c,OAAQ,EHjFlB4c,GAAmB5c,MAAQ,EAC3B6c,GAAe7c,MAAQ,GGmF3B,CAaA,SAAS6e,UAAU1R,GACC,UAAdA,EAAMC,KACR2Q,EAAc/d,MAAMqN,cAAc,SAASyR,OAE/C,QApEA3D,GAAU,KACHyC,EAAe5d,OAoDtB,WAEE,MAAM+e,iBAA4B5R,IAC3B2Q,EAAS9d,MAAM2e,SAASxR,EAAMrF,UACjCkW,UAAU7Q,GACVA,EAAMgQ,aAAaiB,WAAa,OACjC,EAEMljB,cAAKgS,iBAAiB,WAAY6R,iBAC7C,IA9CWjB,QAAM5Q,iBAAiB,OAAQgR,QAC/BJ,QAAM5Q,iBAAiB,WAAYiR,YACnCL,QAAM5Q,iBAAiB,YAAawR,aACpCZ,QAAM5Q,iBAAiB,YAAamR,gBAb/CW,GAAgB,KAgBLlB,QAAMzC,oBAAoB,OAAQ6C,QAClCJ,QAAMzC,oBAAoB,WAAY8C,YACtCL,QAAMzC,oBAAoB,YAAaqD,aACvCZ,QAAMzC,oBAAoB,YAAagD,6nBC1GrCvB,GAAc/E,EAASkH,wFCWpCtS,EAAMmQ,IAAavd,sBAEjBiL,GAAcxK,OAAQ,EACXyK,SAAQqS,GAAY9c,MAAMiB,OACrCyJ,GAAgB1K,MAAQ,EACxB,UAAYub,UAASuB,GAAY9c,MACf0K,iBACV8N,QAAQ+C,GAAM,GAElBuB,GAAY9c,MAAMiB,OAAS,IAClBwW,cAAKzX,OAAO,GACvBoF,sBAAsBqS,GAAKzX,QAE7BwK,GAAcxK,OAAQ,2KCjBlB,QAAO+C,GAAS,aACpB,OAAO0U,gBAAKjO,iBAAO,uBAAUvI,QAAS,KAGxC,SAASoZ,UACPjV,sBAAsBqS,GAAKzX,OAC3B0L,WAAW+L,GAAKzX,MAClB,CACA,SAAS+a,cAAc5N,GACrBA,EAAMoN,4BAER,scCMMxV,EAAQmV,KAAcnV,MAEtBrE,EAAOqC,GAAS,IACbgC,EAAM/E,MAAMuF,UAAY,GAAKvD,mBAAmB+C,EAAM/E,MAAMU,QAG/Dwe,EAAYnc,GAAS,IACN,QAAfrC,EAAKV,MACA,IAEFU,EAAKV,MAAMmJ,MAAM,KAAK,KAKzBgT,EAAQpZ,GAAS,IACdgC,EAAM/E,MAAMuF,YAIfjG,EAAOyD,GAAS,KACpB,QAAwC,IAApCgC,EAAM/E,MAAM0C,EAAa1C,OACpB,SAeFV,OADMJ,wBAAwB6F,EAAM/E,MAAM0C,EAAa1C,QAAQ,GAC1DS,MAAM,GAAK,MAInB4N,EAAQtL,GAAS,IACjBgC,EAAM/E,MAAMuF,UACP8R,KAAK8H,UAAUpa,EAAM/E,MAAMqG,OAAO,GAAI,KAAM,KAE5B,YAArBtB,EAAM/E,MAAMtE,KACPqJ,EAAM/E,MAAMuG,YADjB,IAMA6Y,EAAOrc,GAAS,KACd,QAAOgC,EAAM/E,MAAMtE,KACzB,GAAa,WAATA,EACK,WACX,GAAsB,SAATA,EAAiB,CACpB,QAAOqJ,EAAM/E,MAAM6C,KACrB,OrB3DD,SAAiBwc,GACpB,MAAMrP,IAACA,GAAOqP,EAASne,MAAM,kBAAkBiQ,OAC/C,OAAOtT,EAAgBwU,SAASrC,EAAIlD,cACxC,CqBwDQwS,CAAQzc,GACH,KrBvDN,SAAiBwc,GACpB,MAAMrP,IAACA,GAAOqP,EAASne,MAAM,kBAAkBiQ,OAC/C,OAAOrT,EAAgBuU,SAASrC,EAAIlD,cACxC,CqBqDeyS,CAAQ1c,GACV,KrBpDN,SAAiBwc,GACpB,MAAMrP,IAACA,GAAOqP,EAASne,MAAM,kBAAkBiQ,OAC/C,OAAOpT,EAAgBsU,SAASrC,EAAIlD,cACxC,CqBkDe0S,CAAQ3c,GACV,KAEF,IACX,OAAsB,YAATnH,EACF,KAEF,QAGT,SAAS2e,QAAQlN,GACf/H,sBAAsBL,EAAM/E,OAEjBlD,aAAIA,WAAW2iB,QAAU1a,EAAM/E,MAEjB,WAArB+E,EAAM/E,MAAMtE,MACdgQ,WAAW3G,EAAM/E,MAErB,CAGA,SAAS0f,YAAYvS,GACG,IAElBA,EAAMwS,SACRxS,EAAMoN,iBACE1b,YACJkG,EAAM/E,MAAMqI,cAActD,EAAM/E,MAAMwH,KAAKR,MAC3CjC,EAAM/E,OAGN4D,GAAa5D,QAAU+E,EAAM/E,MAAMgG,QAC1B0F,aAAM1L,MAAMgG,QAG7B,CAEA,SAAS4Z,YAAYzS,GACnBzI,GAAa1E,MAAQ+E,EAAM/E,KAC7B,CACA,SAAS6f,aAAa1S,GACpBzI,GAAa1E,MAAQ,IACvB,CAGM,QAAcyC,GAAI,UACxBsK,GAAY,aACV,GAAiC,aAA7B,SAAarI,eAAO,UAAoB,CACpC,QAASA,GAAa1E,MAAMuG,OAC5BuZ,EAAW/a,EAAM/E,MAAMqI,cAActD,EAAM/E,MAAMwH,KAAKR,MAE5D,YADA+Y,EAAY/f,MAAQuG,IAAWuZ,EAEhC,CACD,MAAME,IAAe,SAAatb,eAAO,eACrCqb,EAAY/f,OAASggB,IACvBD,EAAY/f,OAAQ,GAElBggB,IAGJD,EAAY/f,MAAQ0E,GAAa1E,MAAM6G,UAAUwL,SAAStN,EAAM/E,OAAK,8fC5IjE,MAQAigB,EAAW,IAAIC,sBARHvc,IACV,MAACoB,GAASpB,EACZoB,EAAMob,gBACJ1b,GAAMzE,MAAQoE,GAAMpE,QAChBoE,SAAQA,GAAMpE,MAAQ,GAE/B,IAKGogB,EAAe3d,EAAI,aAEzB0Y,GAAU,KACC8E,UAAQG,EAAapgB,MAAK,IAErCgf,GAAgB,KACdiB,EAASI,YAAU,6lBCmBf,QAAQtd,GAAS,MACjBa,GAAa5D,MAAMuF,WACd3B,GAAa5D,MAAMqG,OAAO,KAKrC,SAAS0U,cAAc5N,GACrBA,EAAMoN,iBfoIA3W,GAAa5D,MAAMgG,QACR0F,cAAa1L,MAAMgG,OenItC,CAEA,MAAMsa,EAAgB7d,IAQtB,SAAS8d,iBACD,QAAIrlB,SAASyE,KAAK6gB,YAExB,GAAIC,EAAI,KAAM,CACR,MAAK,KAAO,KAAOA,IAFJA,GAAK,IAAM,IAAM,GAG/BC,IAAK,IAAM,IAAMA,EACtBJ,EAActgB,MAAQ,GAAG0gB,KAC7B,MACIJ,EAActgB,MAAQ,OAE1B,QAjBAmb,GAAU,sBAEDlO,wBAAiB,SAAUsT,eAAc,IAElDI,GAAc,KACL1T,2BAAoB,SAAUsT,eAAc,iqBCnD/C,QAAOxd,GAAS,WAAM,mBAAa/C,YAAO,WAAQgC,mBAAmB0C,GAAa1E,MAAMU,KAAI,gRCkBlG,SAASkgB,iBACPle,EAAa1C,MAA+B,UAAvB0C,EAAa1C,MAAoB,QAAU,OAClE,CAGA,SAASqa,QAAQra,GACX2C,EAAQ3C,QAAUA,iBAGtB2C,EAAQ3C,MAAQA,CAClB,8uBCvBU6gB,4wCAhBR,wICAA,qBACeC,+OCkBX,QAASre,EAAIkM,YAAYoS,QACzBC,EAAkBje,GAAS,IAAMge,EAAO/gB,MAAMghB,kBAC9CC,EAAkBle,GAAS,IAAMge,EAAO/gB,MAAMihB,kBACnBle,OAAMge,EAAO/gB,MAAMkhB,iBAE9C,QAAaze,EAAI,MACjB0e,EAAU1e,GAAI,GACd2e,EAAW3e,GAAI,GAGf+N,EAAUzN,GAAS,KACvB,MAAMyN,EAAUyQ,EAAgBjhB,OAASghB,EAAgBhhB,MAAQ,KAE1D,OADPmhB,EAAQnhB,MAAQwQ,EAAU,IACnB2Q,EAAQnhB,MAAQ,IAAMwQ,KAGzB6Q,EAAgBte,GAAS,IAAMf,mBAAmBif,EAAgBjhB,SAClEshB,EAAcve,GAAS,IAAMge,EAAO/gB,QAiB1C,SAAS0f,YAAYvS,GACC,IAGhBA,EAAMwS,SACRyB,EAASphB,OAAQ,GAHG,IAKlBmN,EAAMwS,SACRxS,EAAMoN,iBACN6G,EAASphB,OAAQ,EACjBnB,QAAQ0iB,QAEZ,QA3BApG,GAAU,KACHmG,EAAYthB,QAGNwhB,QAAQC,aAAY,KAC7BV,EAAO/gB,MAAQ2O,YAAYoS,SAC1B,KAAI,IAET/B,GAAgB,KACVwC,EAAWxhB,OACb0hB,cAAcF,EAAWxhB,MAC1B,qdCpCG,QAAUyC,GAAI,UACpBsK,GAAYxN,UACwB,MAA9BoL,GAAoB3K,QACtB2hB,EAAQ3hB,OAAQ,QACVxC,MAAM,IACZmkB,EAAQ3hB,OAAQ,EACjB,4ZCoBHlD,WAAWuE,YAAcA,YACzBvE,WAAWkF,mBAAqBA,mBAIhC,MAAM4f,EAAY7e,GAAS,SAAyB,IAAnBuU,GAAStX,QAAwB,IAAIgO,IAAIC,SAASrR,MAAMsR,aAAarJ,IAAI,aAAkC,OAAnByS,GAAStX,eAIlImb,GAAU5b,UACR,MAAMwL,EAAM,IAAIiD,IAAIC,SAASrR,MACvBilB,EAAW9W,EAAImD,aAAarJ,IAAI,YAChCrC,EAAOuI,EAAImD,aAAarJ,IAAI,SAAWkG,EAAImD,aAAarJ,IAAI,SAOlE,GANI,CAAC,OAAQ,OAAQ,QAAQwN,SAAS7P,KACpCG,EAAQ3C,MAAQwC,EACZ,CAAC,OAAQ,KAAK6P,SAAStH,EAAImD,aAAarJ,IAAI,yBAI9Cgd,EAAU,CAEN,cAAiBllB,MAAMklB,SACvBrJ,QAAQsJ,EACf,CACD,MAAMC,EAAOhX,EAAIgX,KAAKthB,MAAM,GACxBshB,EAAKtZ,WAAW,2BACZqC,cAAciX,GAEtB,MAAMC,EAAUjX,EAAImD,aAAarJ,IAAI,UACjCmd,IACF1d,GAAOtE,MAAQgiB,EAChB,wjBCpEHC,8CAAeC,MAAM","names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","mutations","mutation","type","addedNodes","node","tagName","rel","observe","childList","subtree","ep","script","fetchOpts","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","setImmediate","globalThis","port1","port2","MessageChannel","queue","onmessage","shift","callback","postMessage","push","sleep","ms","Promise","resolve","setTimeout","videoExtensions","imageExtensions","audioExtensions","firefoxDateFix","dateValue","input","String","replace","dateToDayDateString","utc","Date","pad2","str","toString","padStart","_date","console","year","_utc","month","date","dateToDayDateTimeString","hours","minutes","seconds","time","async","iterateAsyncDataSource","dataSource","Response","body","ReadableStream","stream","getReader","done","value","reader","read","iterateReadableStream","Blob","blob","chunkSize","index","blobChunk","slice","size","Uint8Array","arrayBuffer","iterateBlob","part","tripleSizeGroups","num","length","match","join","trimStart","bytesToSize","bytes","decimals","i","Math","floor","log","Number","parseFloat","pow","toFixed","bytesToSizeWinLike","result","number","trunc","toPrecision","toTruncPrecision3","blue","text","sort","ref","selectedTime","orderBy","orders","name","reverseOrder","computed","toggleOrder","compare","Intl","Collator","numeric","sensitivity","comparator","pre","cur","k","timeName","entries","openedFolder","folders","files","symlinks","fifos","charDevs","blockDevs","sockets","limit","list","search","searchResult","listLimited","count","hoveredEntry","Object","defineProperty","get","map","entry","debugMessage","addMessage","message","appendMessage","debugMessageFromEntry","isProxy","toRaw","hasErrors","messages","mtime","btime","filter","m","entryTypes","SimpleEntry","constructor","parent","errorsIDMap","this","_size","_mtime","errors","id","pathTo","content","addChild","children","addHardlinks","total","hardlinks","hardlinksTotal","addMeta","meta","increaseContentSize","_contentSize","MIN_SAFE_INTEGER","child","e","isEmpty","Boolean","root","path","contentTypesStats","getContentTypesStats","_getContentTypesStats","deep","target","timeEnd","Symbol","iterator","flat","static","pathString","getPathString","names","pathStr","separator","startsWith","EntryStreamParser","rootId","Map","setMeta","errorsMap","v","code","syscall","errno","split","parse","sEntriesPart","rootUpdated","pid","_a","simpleEntry","set","hid","array","hidMap","processed","processHIDMapAsync","simpleEntries","now","timeNow","totalLinks","forEach","then","folderDummy","scanParsing","allScansReady","scansCount","currentScansNum","scanParsingProgress","searching","searchAwaiting","handleMegaUrl","url","__vitePreload","import","Mega","parseMegaNode","_url","special","_id","ownerId","_ownerId","emptyRootFolder","openFolder","megaNode","creationDate","modificationDate","parentId","sEntry","ssEntry","toSEntry","mNode","clearSearch","shallowRef","setSearchResult","rawResult","addSearchResultToGlobalThis","sortSearch","timeTotal","triggerRef","watch","scanParsingCompleted","simplify","toLowerCase","watchEffect","r","window","addEventListener","event","key","querySelector","newValue","dispatchEvent","Event","performSearchDebounced","runnable","timerId","clearTimeout","arguments","debounce","performSearch","URL","location","searchParams","searchSync","localStorage","title","folder","request","folderRaw","isReactive","time1","performance","searchText","strict","normalized","searchHelp","subStringMatcher","subSearch","starts","ends","endsWith","stringMatcher","string","substring","justSearch","some","prefix","hostname","pathname","resourceFullName","pathnameEndsWithSlash","resName","ext","resExt","r1","RegExp","regex","defaultPrefix","caret","dollar","percent","sizeString1","decimal1","prefix1","exclamations","plus","minus","tildes","sizeString2","decimal2","prefix2","groups","multiplyByPrefix","prefixes","indexOf","extra1","extra2","sizeNum","replaceAll","size2Num","size2","dec1","dec2","a","b","_min","max","min","findAll","includes","rangeSearch","diff","from","to","word","parts","o","curWord","searcher","debug.addMessage","debug.appendMessage","Set","allSize","reduce","acc","val","computeEntrySize","resultSet","filesSize","excludeSet","childrenSize","has","predicate","res","partSize","takePart","folderEntry","listAllEntries","curTime","parseScan","contentType","headers","isGZip","TextDecoder","textParser","TextParser","pakoIsLoaded","src","reject","onload","crossOrigin","append","appendScript","loadPako","chunks","pako","Inflate","prototype","onData","chunk","inflator","u8Array","err","msg","unGZipAsyncIterator","textPart","decoder","decode","uint8Array","scanResultEntries","parsePart","parseGZippedJSONScan","obj","parser","isJSON","streamParseJSONScan","oldValue","__publicField","trimComma","handleStart","line","objects","metaLines","startHandled","handleLine","isLastLine","buffer","lines","isLastPart","JSON","rootMeta","_rootMeta","shallowReadonly","home","super","isHomeOpened","clearHome","_home","_isHomeOpened","readonly","updateParsingState","execution","abortRequested","_resolve","abort","_promise","start","abortIfRequested","setScan","keepSearch","metaInited","rootInited","processedTotal","scanMeta","rootEntry","rootContentUpdated","percentStr","startTime","scanRootPath","openedFolders","empty","scanDate","platform","doString","repeat","pad","commonFiles","unusualFiles","additional","toUpperCase","part1","part2","showSep","goToRoot","toRefs","props","isLast","onClick","onContextmenu","preventDefault","folderPath","navigator","clipboard","writeText","inputRef","onClearClick","focus","onContextMenu","readText","shiftTime","doubleShiftHandler","onMounted","onUnmounted","removeEventListener","WebFileEntry","file","_name","lastModified","dtItems","dtItemToFileSystemEntry","dtItemsToFileSystemEntries","fileSystemEntries","fileSystemEntry","fromFileSystemEntry","fsEntry","isFile","fsFileEntry","error","isDirectory","fsDirEntry","createReader","readEntries","readFileSystemDirectoryEntry","dirEntry","webkitGetAsEntry","dropHover","dropHoverItemCount","dropHoverTypes","fileEntries","parsing","fromDataTransferItems","fromFiles","setDataTransfer","dataTransfer","setFiles","items","_dtItems","kind","setDtItems","filelist","_files","postfix","globalDropZone","onFileInputChange","dropZone","fileInputElem","stopEvent","stopPropagation","onDrop","onDragOver","dropEffect","onDragEnter","allTypes","item","types","setDataTransferHover","onDragLeave","contains","relatedTarget","onKeyDown","click","dragOverCallback","onBeforeUnmount","_fileEntries","sizeClass","stringify","icon","filename","isVideo","isImage","isAudio","clicked","onMousedown","button","onMouseover","onMouseleave","fullPath","hoveredLink","noHardlinks","observer","IntersectionObserver","isIntersecting","intersection","disconnect","nameElemWidth","resizeNameElem","offsetWidth","w","px","onBeforeMount","toggleTimeType","_hoisted_3","_openBlock","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","over100","showHint","formattedSize","isSupported","clear","intervalId","setInterval","clearInterval","show100","showGuide","filepath","response","hash","_search","createApp","mount"],"sources":["node-modules:///vite/modulepreload-polyfill","source-maps:///util.js","source-maps:///core/entries.js","source-maps:///core/debug.js","source-maps:///core/entry.js","source-maps:///core/state.js","source-maps:///core/mega-nz.js","source-maps:///core/search.js","source-maps:///core/scan-parser.js","source-maps:///core/folders.js","source-maps:///components/AddressBar_Base.vue","source-maps:///components/AddressBar_Folder.vue","source-maps:///components/AddressBar.vue","source-maps:///components/Search.vue","source-maps:///components/file-input/WebFileEntry.js","source-maps:///components/file-input/file-input-state-private.js","source-maps:///components/file-input/FileInputDefaultHoverText.vue","source-maps:///components/file-input/FileInputDefaultText.vue","source-maps:///components/file-input/FileInput.vue","source-maps:///components/file-input/file-input-state.js","source-maps:///components/FileInputWrapper.vue","source-maps:///components/Home.vue","source-maps:///components/Row.vue","source-maps:///components/IntersectionRow.vue","source-maps:///components/Content.vue","source-maps:///components/Status.vue","source-maps:///components/Switch.vue","source-maps:///components/Guide.vue","source-maps:///components/InnerModal.vue","source-maps:///components/MemoryConsuming.vue","source-maps:///components/ScanProgressBar.vue","source-maps:///components/Main.vue","source-maps:///main.js"],"sourcesContent":["__VITE_IS_MODERN__&&(function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}());","export const setImmediate = globalThis.setImmediate || /*#__PURE__*/ (function() {\n    const {port1, port2} = new MessageChannel();\n    const queue = [];\n\n    port1.onmessage = function() {\n        const callback = queue.shift();\n        callback();\n    };\n\n    return function(callback) {\n        port2.postMessage(null);\n        queue.push(callback);\n    };\n})();\n\nexport function sleep(ms) {\n    if (ms === undefined) {\n        return new Promise(resolve => setImmediate(resolve));\n    }\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport const shuffle = () => Math.random() >= 0.5 ? -1 : 1;\n\n// todo: use Set\nconst videoExtensions = [\"mp4\", \"webm\", \"mkv\", \"avi\", \"mov\", \"m4v\", \"m4v\", \"mpg\", \"mpeg\", \"wmv\", \"flv\"];\nexport function isVideo(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return videoExtensions.includes(ext.toLowerCase());\n}\nconst imageExtensions = [\"jpg\", \"png\", \"jpeg\", \"gif\", \"webp\", \"jfif\", \"jpe\", \"tiff\"];\nexport function isImage(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return imageExtensions.includes(ext.toLowerCase());\n}\nconst audioExtensions = [\"mp3\", \"flac\", \"wav\", \"wma\", \"aac\"];\nexport function isAudio(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return audioExtensions.includes(ext.toLowerCase());\n}\n\nexport function debounce(runnable, ms = 50) {\n    let timerId;\n    return function() {\n        // console.log({timerId});\n        if (timerId) {\n            clearTimeout(timerId);\n        }\n        timerId = setTimeout(() => {\n            runnable.apply(this, arguments);\n            timerId = null;\n        }, ms);\n    }\n}\n\nexport function isString(input) {\n    return typeof input === \"string\" || input instanceof String;\n}\n\nexport function firefoxDateFix(dateValue) {\n    return isString(dateValue) ? dateValue.replace(/(?<y>\\d{4})\\.(?<m>\\d{2})\\.(?<d>\\d{2})/, \"$<y>-$<m>-$<d>\") : dateValue;\n}\n\n// \"Sun, 10 Jan 2021 22:22:22 GMT\" -> \"2021.01.10\"\nexport function dateToDayDateString(dateValue, utc = true) {\n    dateValue = firefoxDateFix(dateValue);\n    const _date = new Date(dateValue);\n    if (_date.toString() === \"Invalid Date\") {\n        console.warn(\"Invalid Date value: \", dateValue);\n    }\n    function pad2(str) {\n        return str.toString().padStart(2, \"0\");\n    }\n    const _utc = utc ? \"UTC\" : \"\";\n    const year  = _date[`get${_utc}FullYear`]();\n    const month = _date[`get${_utc}Month`]() + 1;\n    const date  = _date[`get${_utc}Date`]();\n\n    return year + \".\" + pad2(month) + \".\" + pad2(date);\n}\n\n// \"Sun, 10 Jan 2021 22:22:22 GMT\" -> \"2021.01.10 22:22:22Z\"\nexport function dateToDayDateTimeString(dateValue, utc = true) {\n    dateValue = firefoxDateFix(dateValue);\n    const _date = new Date(dateValue);\n    function pad2(str) {\n        return str.toString().padStart(2, \"0\");\n    }\n    const _utc = utc ? \"UTC\" : \"\";\n    const hours    = _date[`get${_utc}Hours`]();\n    const minutes  = _date[`get${_utc}Minutes`]();\n    const seconds  = _date[`get${_utc}Seconds`]();\n\n    const time = pad2(hours)+ \":\" + pad2(minutes) + \":\" + pad2(seconds);\n    return dateToDayDateString(_date, utc) + \" \" + time + (utc ? \"Z\" : \"\");\n}\n\n\nexport function structuredClone(object) {\n    return new Promise(resolve => {\n        const {port1, port2} = new MessageChannel();\n        port1.onmessage = function(message) {\n            resolve(message.data);\n        };\n        port2.postMessage(object);\n    });\n}\n\nexport function appendScript(src, integrity) {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement(\"script\");\n        script.onload = resolve;\n        script.onerror = event => reject({message: \"Failed to load script\", src, integrity, event});\n        script.src = src;\n        script.async = true;\n        if (integrity) {\n            script.integrity = integrity;\n            script.crossOrigin = \"anonymous\";\n        }\n        document.body.append(script);\n    });\n}\n\n/**\n * `chunkSize` is 65536, ReadableStream uses the same size.\n * There is no speed difference between using of different the chunk's sizes.\n * @param {ArrayBuffer|Uint8Array} arrayBuffer\n * @param {Number} [chunkSize=65536]\n * @return {Generator<Uint8Array>}\n */\nexport function *iterateArrayBuffer(arrayBuffer, chunkSize = 65536) {\n    const buffer = new Uint8Array(arrayBuffer);\n    let index = 0;\n    while (true) {\n        const chunk = buffer.subarray(index, index + chunkSize);\n        if (!chunk.length) {\n            break;\n        }\n        yield chunk;\n        index += chunkSize;\n    }\n}\n\n/**\n * @param {Response|ReadableStream|Blob} dataSource\n * @return {AsyncGenerator<Uint8Array>}\n */\nexport async function *iterateAsyncDataSource(dataSource) {\n    if (dataSource instanceof Response) {\n        dataSource = dataSource.body;\n    }\n    if (dataSource instanceof ReadableStream) {\n        yield *iterateReadableStream(dataSource);\n    } else if (dataSource instanceof Blob) {\n        for (const part of iterateBlob(dataSource)) {\n            yield await part;\n        }\n    }\n}\n\n\n/**\n * @param {ReadableStream} stream\n * @return {AsyncGenerator<Uint8Array>}\n */\nexport async function *iterateReadableStream(stream) {\n    const reader = stream.getReader();\n    while (true) {\n        const {done, /** @type {Uint8Array} */ value} = await reader.read();\n        if (done) {\n            break;\n        }\n        yield value;\n    }\n}\n\n/**\n * Iterates Blob (or File).\n * Note: `chunkSize` affects the execution speed\n * @param {Blob} blob\n * @param {Number} [chunkSize=2097152]\n * @return {Generator<Promise<Uint8Array>>|AsyncGenerator<Uint8Array>}\n */\nexport function *iterateBlob(blob, chunkSize = 2 * 1024 * 1024) {\n    let index = 0;\n    while (true) {\n        const blobChunk = blob.slice(index, index + chunkSize);\n        if (!blobChunk.size) {break;}\n\n        yield read(blobChunk);\n        index += chunkSize;\n    }\n\n    async function read(blob) {\n        return new Uint8Array(await blob.arrayBuffer());\n    }\n}\n\n/**\n * Useful for file byte size formatting\n * 34456909 -> 34 456 909\n * @param {number} num */\nexport function tripleSizeGroups(num) {\n    const str = num.toString();\n    return str.padStart(str.length + (3 - str.length % 3)).match(/(.{3})/g).join(\" \").trimStart();\n}\n\n/**\n * Format bytes to human readable format.\n * Trims the tailing zeros.\n *\n * {@link https://stackoverflow.com/a/18650828/11468937}\n * @param {Number} bytes\n * @param {Number} [decimals=2]\n * @returns {String}\n */\nexport function bytesToSize(bytes, decimals = 2) {\n    if (bytes === 0) { return \"0 B\"; }\n    const k = 1024;\n    decimals = decimals < 0 ? 0 : decimals;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(decimals)) + \" \" + sizes[i];\n}\n\n/**\n * Formats bytes mostly like Windows does,\n * but in some rare cases the result is different.\n * Check the file with tests.\n * @see win-like-file-sizes.test.js\n * @param {Number} bytes\n * @return {string}\n */\nexport function bytesToSizeWinLike(bytes) {\n    if (bytes < 1024) { return bytes + \" B\"; }\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    let i = Math.floor(Math.log(bytes) / Math.log(1024));\n    let result = bytes / Math.pow(1024, i);\n    if (result >= 1000) {\n        i++;\n        result /= 1024;\n    }\n    return toTruncPrecision3(result) + \" \" + sizes[i];\n}\n\n/**\n * @see trunc-with-precision-3.test.js\n * @param {Number} number\n * @return {string}\n */\nexport function toTruncPrecision3(number) {\n    let result;\n    if (number < 10) {\n        result = Math.trunc(number * 100) / 100;\n    } else if (number < 100) {\n        result = Math.trunc(number * 10) / 10;\n    } else if (number < 1000) {\n        result = Math.trunc(number);\n    }\n    if (number < 0.1) {\n        return result.toPrecision(1);\n    } else if (number < 1) {\n        return result.toPrecision(2);\n    }\n    return result.toPrecision(3);\n}\n\n/**\n * @param {Uint8Array[]} arrays\n * @return {Uint8Array}\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((acc, value) => acc + value.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const array of arrays) {\n        result.set(array, offset);\n        offset += array.length;\n    }\n    return result;\n}\n\nexport function red(text) {\n    return [`%c${text}`,  \"color: #f44336; font-weight: bold;\"];\n}\nexport function orange(text) {\n    return [`%c${text}`,  \"color: #ff9800; font-weight: bold;\"];\n}\nexport function green(text) {\n    return [`%c${text}`,  \"color: #4caf50; font-weight: bold;\"];\n}\nexport function cyan(text) {\n    return [`%c${text}`,  \"color: #00bcd4; font-weight: bold;\"];\n}\nexport function blue(text) {\n    return [`%c${text}`,  \"color: #2196f3; font-weight: bold;\"];\n}\n","import {computed, ref} from \"vue\";\nimport {search, searchResult} from \"./search.js\";\nimport {openedFolder} from \"./folders.js\";\n\n\nexport const sort = ref(true);\n\n/** @type {import(\"vue\").Ref<(\"mtime\"|\"btime\")>} */\nexport const selectedTime = ref(\"mtime\");\n/** @type {import(\"vue\").Ref<(\"name\"|\"size\"|\"time\")>} */\nexport const orderBy = ref(\"name\");\nexport const orders = ref({\n    name: false,\n    size: false,\n    time: false,\n});\nexport const reverseOrder = computed(() => orders.value[orderBy.value]);\nexport function toggleOrder() {\n    orders.value[orderBy.value] = !orders.value[orderBy.value];\n}\n\n// todo tag:COMPUTED_TIME\n// export const computedFolderTime = ref(true);\n// globalThis.computedFolderTime = computedFolderTime;\n\nconst {compare} = new Intl.Collator(undefined, {\n    numeric: true,\n    sensitivity: \"accent\",\n});\n\n// // todo create the list variable (search result -> the list), (opened dir entries -> the list)\n// export const reactiveComparator = computed(() => {\n//     const k = reverseOrder.value ? -1 : 1;\n//     if (sort.value) {\n//         if (orderBy.value === \"name\") {\n//             return (pre, cur) => compare(pre.name, cur.name) * k;\n//         } else if (orderBy.value === \"size\") {\n//             return (pre, cur) => (pre.size - cur.size) * k;\n//         } else if (orderBy.value === \"mtime\") {\n//             return (pre, cur) => (pre.mtime - cur.mtime) * k;\n//         }\n//     }\n//     return (pre, cur) => 0;\n// });\n\nexport function comparator(pre, cur) {\n    const k = reverseOrder.value ? -1 : 1;\n    if (sort.value) {\n        if (orderBy.value === \"name\") {\n            return compare(pre.name, cur.name) * k;\n        } else if (orderBy.value === \"size\") {\n            return (pre.size - cur.size) * k;\n        } else if (orderBy.value === \"time\") {\n            const timeName = selectedTime.value;\n            return (pre[timeName] - cur[timeName]) * k;\n        }\n    }\n    return 0;\n}\n\n// grouped by type\nexport const entries = computed(() => {\n    return [\n        ...openedFolder.value.folders.sort(comparator),\n        ...openedFolder.value.files.sort(comparator),\n        ...openedFolder.value.symlinks.sort(comparator),\n        ...openedFolder.value.fifos.sort(comparator),\n        ...openedFolder.value.charDevs.sort(comparator),\n        ...openedFolder.value.blockDevs.sort(comparator),\n        ...openedFolder.value.sockets.sort(comparator),\n    ];\n});\n\n\n/** @type {import(\"vue\").Ref<Number>} */\nexport const limit = ref(50);\n\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const list = computed(() => {\n    if (search.value.length) {\n        return searchResult.value;\n    }\n    return entries.value;\n});\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const listLimited = computed(() => {\n    return list.value.slice(0, limit.value);\n});\n/** @type {import(\"vue\").ComputedRef<Number>} */\nexport const count = computed(() => {\n    if (searchResult.value.length > limit.value) {\n        return searchResult.value.length;\n    }\n    return list.value.length;\n});\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nexport const hoveredEntry = ref(null);\n\n\nObject.defineProperty(globalThis, \"list\", {\n    get() {\n        return list.value;\n    }\n});\nObject.defineProperty(globalThis, \"names\", {\n    get() {\n        return list.value.map(entry => entry.name);\n    }\n});\n","import {ref, toRaw, isProxy} from \"vue\";\nimport {bytesToSizeWinLike, dateToDayDateTimeString, tripleSizeGroups} from \"../util.js\";\n\nexport const debugMessage = ref(\"\");\nexport function addMessage(message) {\n    debugMessage.value = message;\n}\nexport function appendMessage(message) {\n    debugMessage.value += message;\n}\n\n/**\n * @param {SimpleEntry} entry\n */\nexport function debugMessageFromEntry(entry) {\n    console.log(isProxy(entry) ? \"Proxy:\" : \"Raw:\", toRaw(entry));\n    if (entry.hasErrors) {\n        debugMessage.value = \"\";\n    } else {\n        const name = entry.name ? (`\"` + entry.name.slice(0, 20) + (entry.name.length < 20 ? \"\" : \"…\") + `\"`) : \"\";\n\n        let messages = [];\n        if (entry.mtime !== undefined) {\n            messages.push(\"mtime \" + `\"${dateToDayDateTimeString(entry.mtime, false)}\"`);\n        }\n        if (entry.btime !== undefined) {\n            messages.push(\"btime \" + `\"${dateToDayDateTimeString(entry.btime, false)}\"`);\n        }\n        messages = [...messages, name, `${tripleSizeGroups(entry.size)} (${bytesToSizeWinLike(entry.size)})`];\n        debugMessage.value = messages.filter(m => m).join(\" — \");\n    }\n}\n","import {sleep} from \"../util.js\";\n\n/** @type {ScanEntryType[]} */\nexport const entryTypes = [\"folder\", \"file\", \"symlink\", \"fifo\", \"charDev\", \"blockDev\", \"socket\"];\n\nexport class SimpleEntry {\n    // [Symbol.toStringTag] = \"SimpleEntry\"; // Disables reactivity, BTW.\n    /**\n     * @param {SerializableScanEntry} entry\n     * @param {SimpleEntry|null} parent\n     * @param {Map<Number, SimpleScanError>} [errorsIDMap]\n     */\n    constructor(entry, parent, errorsIDMap) {\n        /** @type {String} */\n        this.name = entry.name;\n        /** @type {SimpleEntry|null} */\n        this.parent = parent;\n        /** @type {ScanEntryType} */\n        this.type = entry.type;\n\n        if (entry.size) {\n            /** @type {Number|undefined} */\n            this._size = entry.size;\n        }\n        if (entry.mtime) {\n            /** @type {Number|undefined} */\n            this._mtime = entry.mtime;\n        }\n        if (entry.btime) {\n            /** @type {Number|undefined} */\n            this.btime = entry.btime;\n\n            // todo tag:COMPUTED_TIME\n            // this._btime = entry.btime;\n        }\n\n        if (entry.errors) {\n            /** @type {SimpleScanError[]}|undefined} */\n            this.errors = entry.errors.map(id => errorsIDMap.get(id));\n        }\n\n        if (entry.pathTo) {\n            /** @type {String|undefined} */\n            this.pathTo = entry.pathTo;\n        }\n        if (entry.content) {\n            /** @type {String|undefined} */\n            this.content = entry.content;\n        }\n\n        parent?.addChild(this);\n    }\n    /** @param {SimpleEntry} entry */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {SimpleEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n    /** @param {SimpleEntry[]} entries\n     *  @param {Number} total */\n    addHardlinks(entries, total) {\n        /** @type {SimpleEntry[]|undefined} */\n        this.hardlinks = entries;\n        /** @type {Number|undefined} */\n        this.hardlinksTotal = total;\n    }\n\n    /** @param {ScanMeta|Object} meta */\n    addMeta(meta) {\n        /** @type {ScanMeta|Object|undefined} */\n        this.meta = meta;\n    }\n\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent && size) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n\n    // todo tag:COMPUTED_TIME\n    // /** @return {Number|undefined} */\n    // get mtime() {\n    //     if (this._mtime !== undefined) {\n    //         return this._mtime;\n    //     }\n    //     return getMaxChildPropertyValue(this, \"_mtime\", 16);\n    // }\n    //\n    // /** @return {Number|undefined} */\n    // get btime() {\n    //     if (this._btime !== undefined) {\n    //         return this._btime;\n    //     }\n    //     return getMaxChildPropertyValue(this, \"_btime\", 16);\n    // }\n\n    /** @return {Number|undefined} */\n    get mtime() {\n        if (this._mtime !== undefined) {\n            return this._mtime;\n        }\n        if (this.type === \"folder\" && this.children) { // Note: it's recursive // todo: an optional deep limit\n            let time = Number.MIN_SAFE_INTEGER;\n            for (const child of this.children) {\n                if (child.mtime > time) { // `child.mtime !== undefined` is not necessary\n                    time = child.mtime;\n                }\n            }\n            if (time !== Number.MIN_SAFE_INTEGER) {\n                return time;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this._size || 0;\n    }\n\n    /** @return {SimpleEntry[]} */\n    get folders() {\n        return this.children?.filter(e => e.type === \"folder\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get files() {\n        return this.children?.filter(e => e.type === \"file\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get symlinks() {\n        return this.children?.filter(e => e.type === \"symlink\") || [];\n    }\n\n    /** @return {SimpleEntry[]} */\n    get fifos() {\n        return this.children?.filter(e => e.type === \"fifo\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get charDevs() {\n        return this.children?.filter(e => e.type === \"charDev\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get blockDevs() {\n        return this.children?.filter(e => e.type === \"blockDev\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get sockets() {\n        return this.children?.filter(e => e.type === \"socket\") || [];\n    }\n\n    /** @return {Boolean} */\n    get isEmpty() {\n        return !Boolean(this.children?.length);\n    }\n    /** @return {Boolean} */\n    get hasErrors() {\n        return Boolean(this.errors?.length);\n    }\n    /** @return {SimpleEntry} */\n    get root() {\n        if (!this.parent) {\n            return this;\n        }\n        return this.parent.root;\n    }\n    /** @return {SimpleEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n\n    get contentTypesStats() {\n        return this.getContentTypesStats();\n    }\n    _getContentTypesStats(deep = true, result = {}, target = this) {\n        if (target.type === \"folder\" && target.children) {\n            for (const child of target.children) {\n                if (!result[child.type]) {\n                    result[child.type] = 1;\n                } else {\n                    result[child.type]++;\n                }\n                if (child.type === \"folder\" && deep) {\n                    this._getContentTypesStats(deep, result, child);\n                }\n            }\n            return result;\n        }\n    }\n    getContentTypesStats(deep = true) {\n        console.time(\"getContentTypesStats\");\n        const result = this._getContentTypesStats(deep);\n        console.timeEnd(\"getContentTypesStats\");\n        return result;\n    }\n\n    /** @return {Generator<SimpleEntry>} */\n    *[Symbol.iterator]() {\n        yield this;\n        if (this.children) {\n            for (const child of this.children) {\n                yield * child;\n            }\n        }\n    }\n\n    /** @return {SimpleEntry[]} */\n    flat() {\n        return [...this];\n    }\n\n    /**\n     * @param {SimpleEntry[]} entries\n     * @return {SimpleEntry[]}\n     */\n    static flat(entries) {\n        return entries.map(e => [...e]).flat();\n    }\n\n    get pathString() {\n        return this.getPathString();\n    }\n\n    /**\n     * @param {ScanMeta|null} [meta]\n     * @return {string}\n     */\n    getPathString(meta) {\n        const names = this.path.map(e => e.name);\n        let pathStr;\n        if (meta?.path) {\n            pathStr = [...meta.path, ...names].join(meta.separator || \"/\");\n        } else {\n            pathStr = names.join(\"/\");\n        }\n        if (pathStr.startsWith(\"//\")) {\n            return pathStr.slice(1);\n        }\n        return pathStr;\n    }\n\n    // todo tag:COMPUTED_TIME\n    // getChildTime() {\n    //     if (this.type !== \"folder\") {\n    //         return this.mtime;\n    //     }\n    // }\n}\n\n// todo tag:COMPUTED_TIME\n// export function getMaxChildPropertyValue(object, property, deep = 1) {\n//     if (object.type === \"folder\" && object.children && deep) {\n//         deep--;\n//         let maxTime = Number.MIN_SAFE_INTEGER;\n//         for (const child of object.children) {\n//             const time = getMaxChildPropertyValue(child, property, deep);\n//             if (time > maxTime) {\n//                 maxTime = time;\n//             }\n//         }\n//         if (maxTime !== Number.MIN_SAFE_INTEGER) {\n//             return maxTime;\n//         }\n//     } else {\n//         return object[property];\n//     }\n// }\n\n/**\n * Like `ScanError`, but without `path`.\n * @typedef {Object} SimpleScanError\n * @property {String} code\n * @property {String} syscall\n * @property {Number} errno\n **/\n\nexport class EntryStreamParser {\n    constructor() {\n        this.rootId = 0;\n        /** @type {Map<Number, SimpleEntry>} */\n        this.map = new Map();\n        /** @type {Map<String, SimpleEntry[]>} */\n        this.hidMap = new Map();\n    }\n\n    /** @param {ScanMeta} meta */\n    setMeta(meta) {\n        /** @type {ScanMeta} */\n        this.meta = meta;\n        /** @type {Object<String, Number>} */\n        const errorsMap = meta.errorsMap;\n        if (!errorsMap) {\n            return;\n        }\n        /** @type {Map<Number, SimpleScanError>|undefined} */\n        this.errorsIDMap = new Map(Object.entries(errorsMap)\n            .map(([k, v]) => {\n                const [code, syscall, errno] = k.split(\":\");\n                return [v, {code, syscall, errno: Number(errno)}];\n            }));\n    }\n\n    /** @param {SerializableScanEntry[]} sEntriesPart\n     * @return {{root: SimpleEntry, rootUpdated: boolean, processed: number}}\n     */\n    parse(sEntriesPart) {\n        let rootUpdated = false;\n        for (const entry of sEntriesPart) {\n            /** @type {SimpleEntry|null}*/\n            const parent = this.map.get(entry.pid) ?? null;\n            const simpleEntry = new SimpleEntry(entry, parent, this.errorsIDMap);\n            if (entry.type === \"folder\") {\n                this.map.set(entry.id, simpleEntry);\n            }\n            if (entry.hid) {\n                const array = this.hidMap.get(entry.hid) || [];\n                this.hidMap.set(entry.hid, [...array, simpleEntry]);\n            }\n            if (entry.pid === this.rootId) {\n                rootUpdated = true;\n            }\n        }\n        return {\n            root: this.map.get(this.rootId),\n            rootUpdated,\n            processed: sEntriesPart.length,\n        }\n    }\n\n    processHIDMapAsync() {\n        if (!this.hidMap.size) {\n            return;\n        }\n        console.log(\"[hidMap]:\", this.hidMap);\n        console.time(\"hidMap\");\n        processHIDMapAsync(this.hidMap)\n            .then(() => console.timeEnd(\"hidMap\"));\n    }\n}\n\nasync function processHIDMapAsync(hidMap) {\n    let i = 0;\n    let time = 0; // `0` to do `sleep` on the first iteration\n\n    for (const [hid, simpleEntries] of hidMap.entries()) {\n        if (!(i++ % 1000)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n            }\n        }\n\n        /** @type {Number}*/\n        const totalLinks = Number(hid.split(\":\")[1]);\n        simpleEntries.forEach(e => {\n            e.addHardlinks(simpleEntries, totalLinks);\n        });\n    }\n}\n\n/** @type {SimpleEntry} */\nexport const folderDummy = new SimpleEntry({\n    type: \"folder\",\n    name: \"\",\n    pid: null,\n}, null);\n\n\nexport class SimpleBucketEntry extends SimpleEntry {\n    constructor({name} = {name: \"\"}) {\n        super({\n            name,\n            type: \"folder\",\n            pid: null\n        }, null);\n        this.addMeta({\n            // path: [\"\"]\n        });\n    }\n    get size() {\n        // Since _contentSize is wrong because of it's not a parent of children\n        // (It takes the child's size only once while child is being parsed)\n        return this.children.reduce((acc, child) => acc + child.size, 0);\n    }\n}\n","import {ref} from \"vue\";\n\nexport const scanParsing         = ref(false);\nexport const allScansReady       = ref(true);\nexport const scansCount          = ref(0);\nexport const currentScansNum     = ref(0);\nexport const scanParsingProgress = ref(0);\nexport const searching           = ref(false);\nexport const searchAwaiting      = ref(false);\n","import {SimpleEntry} from \"./entry.js\";\nimport {openFolder} from \"./folders.js\";\nimport {addMessage} from \"./debug.js\";\nimport {dateToDayDateTimeString} from \"../util.js\";\n\n// Some special\nexport async function handleMegaUrl(url) {\n    addMessage(url);\n\n    globalThis.Mega = await import(\"https://alttiri.github.io/meganz-api/meganz-api.standalone.es.js\");\n    // globalThis.Mega.MegaApi.encryptedName = true;\n\n    let node;\n    try {\n        node = await globalThis.Mega.node(url);\n    } catch (e) {\n        addMessage(e);\n        return;\n    }\n    node = node.root;\n    console.log(node);\n\n    /** @type {SimpleEntry} */\n    let result = parseMegaNode(node);\n    result._url = url;\n    console.log(result);\n\n    const special = {\n        url,\n        id: result._id,\n        ownerId: result._ownerId,\n        btime: result.btime && dateToDayDateTimeString(result.btime),\n        mtime: result.mtime && dateToDayDateTimeString(result.mtime),\n    };\n\n    if (result.type !== \"folder\") { // if it's a share of 1 file\n        const emptyRootFolder = new SimpleEntry({\n            type: \"folder\",\n            name: \"\",\n            pid: null\n        }, null);\n        emptyRootFolder.addChild(result);\n        result = emptyRootFolder;\n    }\n\n    result.root.addMeta({\n        special\n    });\n    openFolder(result);\n}\n\n/** @return {SerializableScanEntry} */\nfunction nodeToSEntry(node) {\n    return {\n        /**@type {string} */\n        name: node.name === null ? \"[encrypted]\" : node.name,\n        /**@type {number} */\n        size: node.size,\n        /**@type {number} */\n        btime: node.creationDate * 1000,\n        /**@type {number} */\n        mtime: node.modificationDate * 1000,\n        /**@type {String} */\n        id: node.id,\n        /**@type {ScanEntryType} */\n        type: (node.type === \"rootFolder\" || node.type === \"folder\") ? \"folder\" : \"file\",\n        /**@type {String} */\n        pid: node.parentId,\n    };\n}\n\nfunction toSEntry(megaNode, parent) {\n    /** @type {SerializableScanEntry}   */\n    const ssEntry = nodeToSEntry(megaNode);\n    const sEntry = new SimpleEntry(ssEntry, parent);\n    sEntry._id = megaNode.id;\n    sEntry._ownerId = megaNode.ownerId;\n    return sEntry;\n}\n\nfunction parseMegaNode(megaNode, parent = null) {\n    const sEntry = toSEntry(megaNode, parent);\n    if (sEntry.type === \"folder\") {\n        for (const mNode of [...megaNode.folders, ...megaNode.files]) {\n            parseMegaNode(mNode, sEntry);\n        }\n    }\n    return sEntry;\n}\n","import {isReactive, ref, shallowRef, toRaw, watch, watchEffect, triggerRef} from \"vue\";\nimport {blue, bytesToSizeWinLike, debounce, sleep} from \"../util.js\";\nimport {openedFolder} from \"./folders.js\";\nimport {comparator, limit, orderBy, reverseOrder, selectedTime} from \"./entries.js\";\nimport * as debug from \"./debug.js\";\nimport {entryTypes} from \"./entry.js\";\nimport {allScansReady, searchAwaiting, searching} from \"./state.js\";\nimport {handleMegaUrl} from \"./mega-nz.js\";\n\n/** @type {import(\"vue\").Ref<string>} */\nexport const search = ref(\"\"); // [v-model]\nexport function clearSearch() {\n    console.log(\"[clearSearch]\");\n    search.value = \"\";\n}\n\n/** @type {import(\"vue\").ShallowRef<SimpleEntry[]>} */\nexport const searchResult = shallowRef([]);\nfunction clearSearchResult() {\n    setSearchResult([]);\n}\n/** * @param {SimpleEntry[]} result */\nfunction setSearchResult(result) {\n    /** @type {SimpleEntry[]} */\n    const rawResult = toRaw(result);\n    searchResult.value = rawResult;\n    limit.value = 50;\n\n    addSearchResultToGlobalThis(rawResult);\n}\n\nwatch([orderBy, reverseOrder, selectedTime], () => {\n    sortSearch();\n});\n\nexport function sortSearch() {\n    //todo sort by parts\n    const time = Date.now();\n    searchResult.value.sort(comparator);\n    const timeTotal = Date.now() - time;\n    console.log(\"[search][sort][time]\", timeTotal, \"ms\");\n    triggerRef(searchResult);\n    return timeTotal;\n}\n\n/** @param {SimpleEntry[]} rawResult */\nfunction addSearchResultToGlobalThis(rawResult) {\n    /** @type {SimpleEntry[]} */\n    globalThis.search = rawResult;\n    console.log(\"globalThis.search:\", rawResult);\n    Object.defineProperty(globalThis.search, \"download\", {\n        get() {\n            console.log(\"download\"); // todo\n        }\n    });\n    Object.defineProperty(globalThis.search, \"names\", {\n        get() {\n            return globalThis.search.map(entry => entry.name);\n        }\n    });\n    Object.defineProperty(globalThis.search, \"namelist\", {\n        get() {\n            return globalThis.search.map(entry => entry.name).join(\"\\n\");\n        }\n    });\n}\n\nlet resolve = () => {};\nlet scanParsingCompleted = Promise.resolve(true);\nwatchEffect(() => {\n    if (!allScansReady.value) {\n        resolve(false);\n        scanParsingCompleted = new Promise(r => resolve = r);\n    } else {\n        resolve(true);\n    }\n});\n\nfunction simplify(input) {\n    // todo .normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n    //  (It required to use a cache since it's a slow operation, and\n    //   only for the normalized values (not just lower cased) in order to save the memory consuming.)\n    // \"đ Crème Bruląśćńżółźćęéйeё\".normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n    return input\n        .toLowerCase();\n}\n\nwindow.addEventListener(\"storage\", event => {\n    if (event.key !== \"search-sync\") {\n        return;\n    }\n    document.querySelector(\"input\").value = event.newValue;\n    document.querySelector(\"input\").dispatchEvent(new Event(\"input\"));\n});\n\n// todo? cancel an already in run if a new search available\n// todo check a linked list perf for large search\nconst performSearchDebounced = debounce(performSearch, 300);\nasync function performSearch() {\n    if (searching.value) {\n        console.log(\"[return][already searching]\");\n        return;\n    }\n\n    const searchSync = new URL(location.href).searchParams.get(\"searchSync\");\n    if (searchSync) {\n        localStorage.setItem(\"search-sync\", search.value);\n        document.title = `Search...`;\n    }\n\n    searching.value = true;\n\n    // Await while the scan parsing is completed, return `false` if there is a new `performSearch` call while parsing.\n    if (false === await scanParsingCompleted) {\n        console.log(\"[return][scan parsing completed]\");\n        return;\n    } else {\n        console.log(\"[next][scan parsing completed]\");\n    }\n\n    const folder = openedFolder.value;\n    const request = search.value;\n\n    if (request === \"\") { // was reset while scans setting\n        searching.value = false;\n        searchAwaiting.value = false;\n        return;\n    }\n\n    // Do unProxy. Up to x40 in comparison with default reactive ref.\n    const folderRaw = isReactive(folder) ? toRaw(folder) : folder;\n\n    const time1 = performance.now();\n    const {result, search: searchText} = await searcher(folderRaw, request);\n    searching.value = false;\n\n    if (search.value !== request) {\n        console.log(\"[return][new search requested]\");\n        return performSearch();\n    }\n\n    searchAwaiting.value = false;\n    if (!result) {\n        return;\n    }\n    const searchTime = performance.now() - time1;\n    debug.addMessage(`Search time: ${searchTime.toFixed(2)} ms; `);\n    await sleep();\n\n    setSearchResult(result);\n    const sortTime = sortSearch();\n    debug.appendMessage(`Sort time: ${sortTime.toFixed(2)} ms; `);\n    await sleep();\n\n    console.time(\"search result size computing\");\n    const resultSet = new Set(result);\n    const allSize = result.reduce((acc, val) => computeEntrySize(val, resultSet) + acc, 0);\n    const filesSize = result.filter(entry => entry.type !== \"folder\").reduce((acc, val) => val.size + acc, 0);\n    console.timeEnd(\"search result size computing\");\n    console.log({allSize, filesSize});\n\n    debug.appendMessage(`${result.length} items; size: ${bytesToSizeWinLike(filesSize)} (${bytesToSizeWinLike(allSize)});  search: ${searchText}`);\n\n    if (searchSync) {\n        document.title = `[${result.length}] found`;\n    }\n}\n\n\n/**\n * The recursive size computing of an `SimpleEntry`.\n * Skips the entries of `excludeSet`.\n * @param {SimpleEntry} entry\n * @param {Set<SimpleEntry>} excludeSet\n * @return {Number}\n */\nfunction computeEntrySize(entry, excludeSet) {\n    if (entry.type !== \"folder\") {\n        return entry.size;\n    }\n    let childrenSize = 0;\n    for (const child of entry.children || []) {\n        if (excludeSet.has(child)) {\n            continue;\n        }\n        if (child.type === \"folder\") {\n            childrenSize += computeEntrySize(child, excludeSet);\n        } else {\n            childrenSize += child.size;\n        }\n    }\n    return childrenSize;\n}\n\n/**\n * @param {SimpleEntry} folder\n * @param {string} search\n * @return {Promise<{result: SimpleEntry[], search: string}>}\n */\nasync function searcher(folder, search) {\n    console.log(\"[search]      \", search);\n\n    let strict;\n    if (search.startsWith(\"//\")) {\n        strict = true;\n        search = search.slice(2);\n    } else {\n        strict = false;\n        const normalized = simplify(search);\n        // todo? \"red_cat\" -> \"red cat\"\n        if (normalized !== search) {\n            console.log(\"[search][norm]\", normalized);\n            search = normalized;\n        }\n    }\n\n    let searchHelp = null;\n\n    /** @type {\"includes\"|\"startsWith\"|\"endsWith\"|\"===\"} */\n    let subStringMatcher = \"includes\";\n\n    // Simplified glob search.\n    // For \"startsWith\", \"endsWith\" and \"full match\" search.\n    // /*/*.html     - ends with \".html\"\n    // ///*/*.html   - ends with \".html\" case sensitive\n    // /*/.*         - starts with \".\"\n    // /8/.*         - starts with \".\" (the same, just to no need to use Shift key)\n    // /*/index.html - matches \"index.html\"\n    const isSimpleGlobSearch = search.startsWith(\"/*/\") || search.startsWith(\"/8/\");\n    if (isSimpleGlobSearch) {\n        const subSearch = search.slice(\"/*/\".length);\n        const starts = subSearch.startsWith(\"*\");\n        const ends = subSearch.endsWith(\"*\");\n\n        if (starts && ends) {\n            subStringMatcher = \"includes\";\n            search = subSearch.slice(1, -1);\n            searchHelp = `includes \"${search}\"`;\n        } else\n        if (starts) {\n            subStringMatcher = \"endsWith\";\n            search = subSearch.slice(1);\n            searchHelp = `ends with \"${search}\"`;\n        } else\n        if (ends) {\n            subStringMatcher = \"startsWith\";\n            search = subSearch.slice(0, -1);\n            searchHelp = `starts with \"${search}\"`;\n        } else {\n            subStringMatcher = \"===\";\n            search = subSearch;\n            searchHelp = `matches \"${search}\"`;\n        }\n    }\n\n    /** @type {function(String, String): Boolean} */\n    let stringMatcher;\n    if (strict) {\n        if (subStringMatcher === \"===\") {\n            stringMatcher = (string, substring) => string === substring;\n        } else {\n            stringMatcher = (string, substring) => string[subStringMatcher](substring);\n        }\n    } else {\n        if (subStringMatcher === \"===\") {\n            stringMatcher = (string, substring) => simplify(string) === substring;\n        } else {\n            stringMatcher = (string, substring) => simplify(string)[subStringMatcher](substring);\n        }\n    }\n\n    function justSearch(substring) {\n        return findAll(folder, (entry) => {\n            return stringMatcher(entry.name, substring);\n        });\n    }\n\n    if ([\"https://\", \"http://\"].some(prefix => search.startsWith(prefix))) {\n        const url = new URL(search);\n\n        if (url.hostname === \"www.youtube.com\" && url.pathname === \"/watch\") {\n            search = url.searchParams.get(\"v\");\n        } else {\n            const pathnameEndsWithSlash = url.pathname.length > 1 && url.pathname.endsWith(\"/\");\n            const pathname = pathnameEndsWithSlash ? url.pathname.slice(0, -1) : url.pathname;\n            const resourceFullName = pathname.match(/[^\\/]+$/)?.[0];\n            if (!resourceFullName) {\n                return {result: [], search};\n            }\n            const {\n                name: resName,\n                ext: resExt, // [note] it can be not the file extension, but a part of a nickname (inst url, for example)\n            } = resourceFullName.match(/(?<name>.+)(\\.(?<ext>.+))$/)?.groups || {name: resourceFullName};\n            search = resName + ((pathnameEndsWithSlash && resExt) ? `.${resExt}` : \"\");\n        }\n\n        const result = await justSearch(search);\n        return {result, search};\n    }\n\n\n    /**\n     * @example\n     * /size:0       - find 0 byte size entries\n     * /size/120     - the same, find 120 bytes size entries\n     * /size:120+80  - find from 120 to 200\n     * /size:120+-20 - find from 100 to 120\n     * /size:120~20  - find from  80 to 140\n     * /size:120-220 - find from 120 to 220\n     * /size:220-120 - find from 120 to 220\n     * /size:^2      - size.toString() starts with \"2\"\n     * /size:%2      - size.toString() includes    \"2\"\n     * /size:$0      - size.toString() ends with   \"0\"\n     * /s/0          - find 0 byte size entries, just a short form\n     * /s/120 900    - find 120900 bytes size entries\n     * /s/120,900    - find 120900 bytes size entries\n     *\n     * /size:120~    - find from 120 -5% to 120 +5%\n     * /size:120~~   - find from 120-10% to 120+10%\n     * /size:120~~~  - find from 120-15% to 120+15%\n     *\n     * /sizek:5      - find 5 KB ± 0.1 KB\n     * /sizek:50     - find 50 KB  ± 1 KB\n     * /sizek:500    - find 500 KB ± 1 KB\n     * /sizem:5      - find 5 MB ± 0.1 MB\n     * /sizeg/50     - find 50 GB ± 1 GB\n     *\n     * /size:5m      - find 5 MB ± 0.1 MB\n     *\n     * /s/12.9       - find 12 bytes size entries\n     * /sk/12.9      - find 12.9 KB ± 1 KB\n     *\n     * /sizek:5!     - find 5 KB + (0 - 0.01) KB\n     * /sizek:5!!    - find 5 KB + (0 - 0.001) KB\n     * /s/5k!!       - find 5 KB + (0 - 0.001) KB\n     * /sizem:50!    - find 50 MB + (0 - 0.1) MB\n     * /sizem:50!!   - find 50 MB + (0 - 0.01) MB\n     */\n    const r1 = `\\\\/s(ize)?(?<defaultPrefix>b|k|m|g|t)?[:\\\\/]`;\n    if (search.match(new RegExp(r1))) {\n        const r2   = `(?<extra1>(?<caret>\\\\^)|(?<dollar>\\\\$)|(?<percent>%))?`;\n        const r3   = `((?<sizeString1>\\\\s*\\\\d[\\\\d\\\\s\\\\,]*)((?<dotDecimal1>\\\\.(?<decimal1>\\\\d+)?))?(?<prefix1>b|k|m|g|t)?(?<exclamations>!+)?)`;\n\n        const r4_1 = `(?<extra2>(?<plus>\\\\+)|(?<minus>\\\\-)|(?<tildes>\\\\~+))`;\n        const r4_2 = `((?<sizeString2>\\\\s*-?\\\\s*\\\\d[\\\\d\\\\s\\\\,]*)((?<dotDecimal2>\\\\.(?<decimal2>\\\\d+)?))?(?<prefix2>b|k|m|g|t)?)?`;\n        const r4   = `(?<range>${r4_1}${r4_2})?`;\n\n        const regex = new RegExp(r1 + r2 + r3 + r4);\n\n        const {\n            /** @type {\"b\"|\"k\"|\"m\"|\"g\"|\"t\"|undefined} */\n            defaultPrefix,\n\n            /** @type {String|undefined} */\n            caret,\n            /** @type {String|undefined} */\n            dollar,\n            /** @type {String|undefined} */\n            percent,\n\n            /** @type {String|undefined} */\n            sizeString1,\n            /** @type {String|undefined} */\n            decimal1,\n            /** @type {String|undefined} */\n            prefix1,\n            /** @type {String|undefined} */\n            exclamations,\n\n            /** @type {String|undefined} */\n            plus,\n            /** @type {String|undefined} */\n            minus,\n            /** @type {String|undefined} */\n            tildes,\n\n            /** @type {String|undefined} */\n            sizeString2,\n            /** @type {String|undefined} */\n            decimal2,\n            /** @type {String|undefined} */\n            prefix2,\n\n        } = search.match(regex)?.groups || {};\n\n        if (sizeString1) {\n            console.log({\n                defaultPrefix,\n                extra1: {caret, dollar, percent},\n                sizeString1, decimal1, prefix1, exclamations,\n                extra2: {plus, minus, tildes, sizeString2, decimal2, prefix2},\n            });\n\n            let text;\n            let result;\n\n            let sizeNum = Number(sizeString1.replaceAll(/[\\s,]/g, \"\"));\n            const size = sizeNum.toString();\n\n            let size2Num = sizeString2 && Number(sizeString2.replaceAll(/[\\s,]/g, \"\"));\n            const size2 = size2Num?.toString();\n\n\n            const dec1 = decimal1 ? Number(\"0.\" + decimal1) : 0;\n            const dec2 = decimal2 ? Number(\"0.\" + decimal2) : 0;\n            sizeNum  = multiplyByPrefix(sizeNum  + dec1, prefix1 || defaultPrefix);\n            size2Num = multiplyByPrefix(size2Num + dec2, prefix2 || defaultPrefix);\n\n\n            /**\n             * @param {Number} a\n             * @param {Number} b\n             * @return {Promise<void>}\n             */\n            async function rangeSearch(a, b) {\n                const {_min, max} = a < b ? {_min: a, max: b} : {_min: b, max: a};\n                const min = Math.max(0, _min);\n                text = `Size search from ${bytesToSizeWinLike(min)} to ${bytesToSizeWinLike(max)}`;\n                result = await findAll(folder, entry => {\n                    return entry.size >= min && entry.size <= max;\n                });\n            }\n            function multiplyByPrefix(value, prefix = \"b\") {\n                if (value === undefined) {\n                    return;\n                }\n                const prefixes = [\"b\", \"k\", \"m\", \"g\", \"t\"];\n                return Math.trunc(value * (1024 ** prefixes.indexOf(prefix)));\n            }\n\n\n            if (caret) { // ^\n                text = `Size search starts with \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().startsWith(size);\n                });\n            } else\n            if (dollar) { // $\n                text = `Size search ends with \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().endsWith(size);\n                });\n            } else\n            if (percent) { // %\n                text = `Size search includes \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().includes(size);\n                });\n            } else\n            if (plus && size2) { // +\n                await rangeSearch(sizeNum, sizeNum + size2Num);\n            } else\n            if (minus && size2) { // -\n                await rangeSearch(sizeNum, size2Num);\n            } else\n            if (tildes) {  // ~ // ~~ // ~~~\n                if (size2) {\n                    await rangeSearch(sizeNum - size2Num, sizeNum + size2Num);\n                } else {\n                    const count = tildes.length;\n                    const diff = Math.trunc(sizeNum * 5 * count / 100);\n                    await rangeSearch(sizeNum - diff, sizeNum + diff);\n                }\n            } else { // Default\n                const prefix = prefix1 || defaultPrefix;\n                if (prefix && prefix !== \"b\") {\n\n                    let orders = size.length;\n                    let diff = multiplyByPrefix(1, prefix);\n                    if (orders === 1) {\n                        diff = Math.trunc(diff / 10);\n                    }\n\n                    let from = sizeNum - diff;\n                    let to   = sizeNum + diff;\n                    if (exclamations) {\n                        from = sizeNum;\n                        if (exclamations.length > 1) {\n                            to = sizeNum + Math.trunc(diff / 10);\n                        }\n                    }\n                    await rangeSearch(from, to);\n                } else {\n                    text = `Size search ${bytesToSizeWinLike(sizeNum)}`;\n                    result = await findAll(folder, entry => {\n                        return entry.size === sizeNum;\n                    });\n                }\n            }\n            console.log(...blue(text));\n            return {result, search: text};\n        } else {\n            const text = \"No size to search\";\n            console.log(...blue(text));\n            return {result: [], search: text};\n        }\n    }\n    if (search.startsWith(\"/\")) {\n        const {type, word} = search.match(/\\/type:(?<type>[^\\/]+)\\/?(?<word>[^\\/]*)/)?.groups || {};\n        if (type) {\n            console.log({type, word});\n            if (entryTypes.includes(type)) {\n                const result = await findAll(folder, entry => {\n                    return entry.type === type && stringMatcher(entry.name, word);\n                });\n                return {result, search};\n            }\n        }\n    } else\n    if (search.includes(\" \")) {\n        const parts = search.split(\" \").filter(o => o);\n        if (parts.length > 1) {\n            let result = await justSearch(parts.shift());\n            let curWord;\n            while (curWord = parts.shift()) {\n                result = result.filter(entry => stringMatcher(entry.name, curWord));\n            }\n            return {result, search};\n        }\n    }\n    return {result: await justSearch(search), search: (searchHelp || search)};\n}\n\nwatch(search, async (newValue, oldValue) => {\n    const isEmptyString = !newValue;\n    if (isEmptyString) {\n        clearSearchResult();\n        return;\n    }\n    searchAwaiting.value = true;\n\n    // In order to \"no debounce by paste event\"\n    if (newValue.length - oldValue.length > 1) {\n        if (newValue.startsWith(\"https://mega.nz/\")) {\n            await handleMegaUrl(newValue);\n            return;\n        }\n        await performSearch();\n    } else {\n        await performSearchDebounced();\n    }\n});\n\n/**\n * @param {SimpleEntry} folder\n * @param {function(SimpleEntry)} predicate\n * @return {Promise<SimpleEntry[]>}\n */\nasync function findAll(folder, predicate) {\n    let res = [];\n    let time = Date.now();\n    for (const entries of listAllEntries(folder)) {\n        const curTime = Date.now();\n        if (curTime - time > 15) {\n            time = curTime;\n            await sleep();\n        }\n        for (const entry of entries) {\n            if (predicate(entry)) {\n                res.push(entry);\n            }\n        }\n    }\n    return res;\n}\n\n/**\n * List all entries by parts.\n * @param {SimpleEntry} folder\n * @return {Generator<SimpleEntry[]>}\n */\nfunction *listAllEntries(folder) {\n    const partSize = 1000;\n    /** @type {SimpleEntry[]} */\n    let list = [];\n    /** @param {SimpleEntry} folderEntry */\n    function *takePart(folderEntry) {\n        for (const entry of (folderEntry.children || [])) {\n            if (entry.type === \"folder\") {\n                yield *takePart(entry);\n            }\n            list.push(entry);\n            if (list.length === partSize) {\n                yield list;\n                list = [];\n            }\n        }\n    }\n    yield *takePart(folder);\n    yield list;\n}\n","import {EntryStreamParser} from \"./entry.js\";\nimport {appendScript, iterateAsyncDataSource, sleep} from \"../util.js\";\n\n\n/**\n * @param {Blob|Response} input\n * @return {AsyncGenerator<{meta:ScanMeta, root: SimpleEntry, rootUpdated: boolean, processed: number}>}\n */\nexport async function *parseScan(input) {\n    const parser = new EntryStreamParser();\n\n    let contentType;\n    if (input instanceof Response) {\n        contentType = input.headers.get(\"content-type\");\n    } else if (input instanceof Blob) {\n        contentType = input.type;\n    }\n    /** @type {ScanMeta} */\n    let meta;\n    if (isGZip(contentType)) {\n        console.log(\"parseGZippedJSONScan\");\n        for await (const obj of parseGZippedJSONScan(input)) {\n            if (!meta) {\n                meta = /** @type {ScanMeta} */ obj.shift();\n                parser.setMeta(meta);\n            }\n            yield {meta, ...parser.parse(/** @type {SerializableScanEntry[]} */ obj)};\n        }\n    } else if (isJSON(contentType)) {\n        console.log(\"streamParseJSONScan\");\n        for await (const array of streamParseJSONScan(input)) {\n            if (!meta) {\n                meta = /** @type {ScanMeta} */ array.shift();\n                parser.setMeta(meta);\n            }\n            yield {meta, ...parser.parse(/** @type {SerializableScanEntry[]} */ array)};\n        }\n    }\n    parser.processHIDMapAsync();\n}\n\n\n/**\n * @param {Response|ReadableStream|Blob} input\n * @return {AsyncGenerator<FlatScanResultEntry[]>}\n */\nasync function *streamParseJSONScan(input) {\n    const decoder = new TextDecoder();\n    const textParser = new TextParser();\n    let i = 0, time = 0;\n    for await (const uint8Array of iterateAsyncDataSource(input)) {\n        if (!(i++ % 10)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n                // console.log(\"sleep\", i);\n            }\n        }\n        const textPart = decoder.decode(uint8Array, {stream: true});\n        const scanResultEntries = textParser.parsePart(textPart);\n        if (scanResultEntries.length) {\n            yield scanResultEntries;\n        }\n    }\n}\n\n/**\n * @param {Response|Blob} input\n * @return {AsyncGenerator<FlatScanResultEntry[]>}\n */\nasync function *parseGZippedJSONScan(input) {\n    const decoder = new TextDecoder();\n    const textParser = new TextParser();\n    let i = 0, time = 0;\n    for await (const uint8Array of unGZipAsyncIterator(input)) {\n        if (!(i++ % 20)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n                // console.log(\"sleep\", i);\n            }\n        }\n        const textPart = decoder.decode(uint8Array, {stream: true});\n        const scanResultEntries = textParser.parsePart(textPart);\n        if (scanResultEntries.length) {\n            yield scanResultEntries;\n        }\n    }\n}\n\n/**\n * @param {Response|ReadableStream|Blob} input\n * @return {Generator<Uint8Array>}\n */\nasync function *unGZipAsyncIterator(input) {\n    if (!isPakoLoaded()) {\n        await loadPako();\n    }\n    let chunks = [];\n    const inflator = new pako.Inflate();\n    pako.Inflate.prototype.onData = function (chunk) {\n        chunks.push(chunk);\n    };\n    for await (const u8Array of iterateAsyncDataSource(input)) {\n        inflator.push(u8Array);\n        for (const chunk of chunks) {\n            yield chunk;\n        }\n        chunks = [];\n    }\n    yield inflator.result;\n    if (inflator.err) {\n        console.error(inflator.msg);\n    }\n}\n\n\nexport class TextParser {\n    buffer = \"\";\n    startHandled = false;\n    metaLines = [];\n    objects = [];\n\n    trimComma(text) {\n        return text.endsWith(\",\") ? text.slice(0, -1) : text;\n    }\n\n    handleStart(line) {\n        if (line === \"[\") { // the first line\n            return;\n        }\n        if (line === \"\") { // meta is separated from the main content by \"\\n\"\n            this.objects.push(this.metaLines.join(\"\"));\n            this.startHandled = true;\n            return;\n        }\n        this.metaLines.push(line);\n    }\n\n    /**\n     * @param {String} line\n     * @param isLastLine\n     */\n    handleLine(line, isLastLine) {\n        if (isLastLine) {\n            this.buffer += line;\n            return;\n        }\n        if (this.buffer) {\n            this.objects.push(this.buffer + line);\n            this.buffer = \"\";\n        } else {\n            this.objects.push(line);\n        }\n    }\n\n    /**\n     * May return an empty array\n     * @param {String} textPart\n     * @return {FlatScanResultEntry[]}\n     * */\n    parsePart(textPart) {\n        const isLastPart = textPart.endsWith(\"\\n]\");\n        /** @type {String[]} */\n        const lines = textPart.split(\"\\n\");\n\n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i];\n            const isLastLine = i === lines.length - 1;\n\n            if (isLastLine && isLastPart) {\n                continue;\n            }\n\n            if (!this.startHandled) {\n                this.handleStart(line, isLastLine);\n            } else {\n                this.handleLine(line, isLastLine);\n            }\n        }\n        try {\n            /** @type {FlatScanResultEntry[]} */\n            const result = JSON.parse(`[${this.trimComma(this.objects.join(\"\"))}]`);\n            this.objects = [];\n            return result;\n        } catch (e) {\n            console.log(`[${this.trimComma(this.objects.join(\"\"))}]`);\n            console.log(this.objects);\n            console.log(this, {isLastPart, textPart});\n            throw e;\n        }\n\n    }\n\n}\n\n\nlet pakoIsLoaded = false;\nasync function loadPako() {\n    if (!pakoIsLoaded) {\n        const src = \"https://cdn.jsdelivr.net/npm/pako@2.0.4/dist/pako_inflate.min.js\";\n        const integrity = \"sha256-ZIKs3+RZEULSy0dR6c/mke8V9unZm9vuh05TqvtMdGU=\";\n        await appendScript(src, integrity);\n        pakoIsLoaded = true;\n        console.log(\"pako is loaded\");\n    }\n}\nfunction isPakoLoaded() {\n    return pakoIsLoaded;\n}\n\n\n/**\n * \"application/x-gzip\"\n * \"application/gzip\"\n * @param contentType\n * @return {Boolean}\n */\nfunction isGZip(contentType) {\n    return Boolean(contentType.match(/^application\\/.*?gzip/));\n}\n\n/**\n * \"application/json\"\n * \"application/json; charset=utf-8\"\n * @param contentType\n * @return {Boolean}\n */\nfunction isJSON(contentType) {\n    return Boolean(contentType.match(/^application\\/.*?json/));\n}\n","import {computed, watch, shallowRef, triggerRef, shallowReadonly, ref, readonly} from \"vue\";\nimport {clearSearch} from \"./search.js\";\nimport {folderDummy, SimpleBucketEntry, SimpleEntry} from \"./entry.js\";\nimport {dateToDayDateString, sleep} from \"../util.js\";\nimport {addMessage} from \"./debug.js\";\nimport {parseScan} from \"./scan-parser.js\";\nimport {limit} from \"./entries.js\";\nimport {scanParsing, scanParsingProgress} from \"./state.js\";\n\n\n/**\n * @typedef {Object} SpecialMeta\n * @property {Object} [special]\n */\n/**\n * @typedef {ScanMeta & SpecialMeta} FolderMeta\n */\n// Well, IDEA does not support `{ScanMeta & SpecialMeta}` correctly\n// todo make a class for it\n\n/** @type {import(\"vue\").ShallowRef<FolderMeta|null>} */\nconst rootMeta  = shallowRef(null);\n/** @type {import(\"vue\").ShallowRef<SimpleEntry>} */\nconst root      = shallowRef(null);\n\nconst _rootMeta = shallowReadonly(rootMeta);\nconst _root     = shallowReadonly(root);\nexport {_rootMeta as rootMeta, _root as root};\n\n/** @type {import(\"vue\").ShallowRef<SimpleBucketEntry>} */\nconst home = shallowRef(new SimpleBucketEntry());\nglobalThis.home = home.value;\nconst isHomeOpened = ref(false);\nexport function clearHome() {\n    console.log(\"clearHome\");\n    resetFolderState();\n    home.value.children = [];\n    triggerRef(openedFolder);\n}\n\nconst _home = shallowReadonly(home);\nconst _isHomeOpened = readonly(isHomeOpened);\nexport {_home as home, _isHomeOpened as isHomeOpened};\n\nfunction updateParsingState() {\n    triggerRef(openedFolder);\n}\n\nclass ExecutionState {\n    constructor() {\n        this.abortRequested = false;\n        this._promise = Promise.resolve();\n        this._resolve = () => {};\n    }\n    abort() {\n        this.abortRequested = true;\n        return this._promise;\n    }\n    start() {\n        this._promise = new Promise(r => this._resolve = r);\n    }\n    abortIfRequested() {\n        if (!execution.abortRequested) {\n            return false;\n        }\n        this.abortRequested = false;\n        this._resolve();\n        return true;\n    }\n}\nconst execution = new ExecutionState();\n/**\n * @param {Blob|Response} input\n * @param {Boolean} keepSearch\n * @return {Promise<Boolean>}\n */\nexport async function setScan(input, keepSearch = false) {\n    if (scanParsing.value) {\n        await execution.abort();\n    }\n    scanParsingProgress.value = 0;\n    scanParsing.value = true;\n    execution.start();\n\n    let metaInited = false;\n    let rootInited = false;\n\n    const startTime = Date.now();\n    let time = Date.now();\n    let processedTotal = 0;\n    let total;\n    for await (const {meta: scanMeta, root: rootEntry, rootUpdated: rootContentUpdated, processed} of parseScan(input)) {\n        processedTotal += processed;\n        if (total) {\n            const percentStr = (processedTotal / total * 100).toPrecision(3);\n            scanParsingProgress.value = Number(percentStr);\n        }\n\n        if (execution.abortIfRequested()) {\n            console.log(`[setScan][time][aborted]`, Date.now() - startTime, \"ms\");\n            return false;\n        }\n        if (!rootInited && rootEntry) {\n            if (!metaInited && scanMeta) {\n                rootEntry.meta = scanMeta;\n                metaInited = true;\n                total = scanMeta.total;\n                processedTotal -= 1;\n            }\n            openFolder(rootEntry, keepSearch);\n            rootInited = true;\n        }\n        const now = Date.now();\n        if (rootContentUpdated || now - time > 50) {\n            time = now;\n            updateParsingState();\n            await sleep();\n        }\n    }\n    updateParsingState();\n    console.log(`[setScan][time]:`, Date.now() - startTime, \"ms\");\n\n    scanParsing.value = false;\n    return true;\n}\n\n/** @type {import(\"vue\").ComputedRef<string>} */\nexport const separator = computed(() => {\n    return rootMeta.value?.separator || \"/\";\n});\n/** @type {import(\"vue\").ComputedRef<string[]>} */\nexport const scanRootPath = computed(() => {\n    return rootMeta.value?.path || [];\n});\n\n\n/** @type {import(\"vue\").ShallowRef<SimpleEntry>} */\nexport const openedFolder = shallowRef(folderDummy);\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const openedFolders = computed(() => {\n    return openedFolder.value.path;\n});\n\nexport function resetFolderState() {\n    clearSearch();\n    openFolder(folderDummy);\n    root.value = null;\n    rootMeta.value = null;\n    globalThis.root = null;\n    globalThis.folder = null;\n}\n\n/** @param {SimpleEntry} entry\n *  @param {Boolean} keepSearch  */\nexport function openFolder(entry, keepSearch = false) {\n    if (!keepSearch) {\n        clearSearch();\n    }\n    openedFolder.value = entry;\n    limit.value = 50;\n\n    const root = entry.root;\n    globalThis.root = root;\n    root.value = root;\n    rootMeta.value = root.meta || {};\n\n    if (entry !== home.value) {\n        if (!home.value.children?.includes(root)) {\n            home.value.addChild(root);\n            triggerRef(home);\n        }\n    }\n    isHomeOpened.value = entry === home.value;\n\n    /** @type {SimpleEntry} */\n    globalThis.folder = entry;\n    console.log(\"globalThis.folder:\", entry);\n}\nObject.defineProperty(globalThis, \"flat\", {\n    get() {\n        return globalThis.folder?.flat();\n    }\n});\n\nexport function goBack() {\n    if (openedFolder.value.parent) {\n        openFolder(openedFolder.value.parent);\n    }\n}\n/** @type {import(\"vue\").ComputedRef<Boolean>} */\nexport const empty = computed(() => root.value && openedFolder.value.isEmpty);\n\n\nwatch(rootMeta, async (newValue, oldValue) => {\n    console.log(\"[meta]:\", rootMeta.value);\n    if (!rootMeta.value) {\n        return;\n    }\n    const {files, folders, symlinks, errors, total, scanDate} = rootMeta.value;\n    if (rootMeta.value.scanDate) {\n        addMessage(\n            `files: \"${files}\" folders: \"${folders}\", symlinks: \"${symlinks}\", ` +\n            `errors: \"${errors}\", total: \"${total}\", scanDate: \"${dateToDayDateString(scanDate)}\"`\n        );\n    }\n});\n","<template>\n  <span class=\"scanPath\">\n    <span class=\"parts\" @click=\"goToRoot\" :title=\"title\">\n      <span class=\"part\"       >{{part1}}</span>\n      <span class=\"part spaced\">{{part2}}</span>\n    </span>\n    <span class=\"spaced separator\" v-if=\"showSep\">{{separator}}</span>\n  </span>\n</template>\n\n<script setup>\n//todo title\nimport {computed} from \"vue\";\nimport {scanRootPath, openedFolders, separator, openedFolder, openFolder, rootMeta} from \"../core/folders.js\";\nimport {dateToDayDateString} from \"../util.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst title = computed(() => {\n  if (!rootMeta.value) {\n    return;\n  }\n\n  const {\n      files, folders, symlinks,\n      charDevs, blockDevs, fifos, sockets,\n      total,\n      platform, scanDate\n  } = rootMeta.value;\n\n  function doString(o) {\n    function pad(str) {\n      const count = 3 - Math.trunc((str.length/4));\n      return str + \"\\t\".repeat(count);\n    }\n    return Object.entries(o)\n        .filter(([k, v]) => v !== undefined)\n        .map(([k, v]) => pad(k) + \": \" + v)\n        .join(\"\\n\");\n  }\n  const commonFiles = doString({files, folders, symlinks});\n  const unusualFiles = doString({charDevs, blockDevs, fifos, sockets});\n  const additional = doString({total, platform, scanDate: (scanDate ? dateToDayDateString(scanDate) : undefined)});\n  const special = doString(rootMeta.value.special || {});\n\n  let result;\n  if (platform !== \"win32\") {\n    result = [commonFiles, unusualFiles, additional, special].filter(v => v).join(\"\\n\");\n  } else {\n    result = [commonFiles, additional, special].filter(v => v).join(\"\\n\");\n  }\n  console.log(result);\n  return result;\n});\n\nconst root = computed(() => {\n  const scanPath = [...scanRootPath.value, openedFolder.value.root.name];\n  const str = scanPath.join(separator.value);\n  if (str.startsWith(\"//\")) { // for unix\n    return str.slice(1);\n  }\n  if (rootMeta.value?.platform === \"win32\") { // uppercase win drive letter // todo remove as unnecessary\n    return str[0].toUpperCase() + str.slice(1);\n  }\n  return str;\n});\nconst part1 = computed(() => {\n  return [...root.value].slice(0, -1).join(\"\"); // if ends with surrogate pair\n});\nconst part2 = computed(() => {\n  return [...root.value].slice(-1).join(\"\");\n});\nconst showSep = computed(() => {\n  return (openedFolders.value.length - 1) && root.value !== \"/\";\n});\n\nfunction goToRoot() {\n  const root = openedFolder.value.root;\n  debugMessageFromEntry(root);\n  openFolder(root);\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.scanPath {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  .parts {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    white-space: pre; /* to display tailing spaces */\n\n    cursor: pointer;\n    box-sizing: border-box;\n    border-bottom: transparent solid 1px;\n    &:hover {\n      background-color: var(--blue-2);\n      border-bottom: 1px solid var(--blue-1);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n    .part {\n      display: contents; // for correct selection by double click\n    }\n  }\n  .spaced {\n    letter-spacing: 2px;\n  }\n}\n</style>\n","<template>\n  <span class=\"opened-folder\">\n    <span class=\"parts\" @click=\"onClick\">\n      <span class=\"part\"       >{{part1}}</span>\n      <span class=\"part spaced\">{{part2}}</span>\n    </span>\n    <span class=\"separator spaced\" v-if=\"!isLast\">{{separator}}</span>\n  </span>\n</template>\n\n<script setup>\nimport {computed, toRefs} from \"vue\";\nimport {openFolder, separator} from \"../core/folders.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst props = defineProps([\"index\", \"count\", \"entry\"]);\nconst {index, count, entry} = toRefs(props);\n\nconst isLast = computed(() => {\n  return index.value + 1 === count.value;\n});\nconst part1 = computed(() => {\n  return [...entry.value.name].slice(0, -1).join(\"\"); // if ends with surrogate pair\n});\nconst part2 = computed(() => {\n  return [...entry.value.name].slice(-1).join(\"\");\n});\n\nfunction onClick() {\n  debugMessageFromEntry(entry.value);\n  openFolder(entry.value);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.opened-folder {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  .parts {\n    height: 100%;\n    display: flex;\n    align-items: center;\n\n    width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    white-space: pre; /* to display tailing spaces */\n\n    cursor: pointer;\n    box-sizing: border-box;\n    border-bottom: transparent solid 1px;\n    &:hover {\n      background-color: var(--blue-2);\n      border-bottom: 1px solid var(--blue-1);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n    .part { // to use with max-width limitation // not works with  `display: contents;`\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: pre;\n    }\n    .part {\n      display: contents; // for correct selection by double click\n    }\n  }\n  .spaced {\n    letter-spacing: 2px;\n  }\n}\n</style>\n","<template>\n<div class=\"address\" @contextmenu=\"onContextmenu\">\n  <AddressBar_Part>\n    <AddressBar_Base/>\n  </AddressBar_Part>\n  <AddressBar_Part\n      v-for=\"(folder, i) of openedFolders.slice(1)\"\n  >\n    <AddressBar_Folder\n        :entry=\"folder\"\n        :index=\"i\"\n        :count=\"openedFolders.slice(1).length\"\n    />\n  </AddressBar_Part>\n</div>\n</template>\n\n<script setup>\nimport AddressBar_Base from \"./AddressBar_Base.vue\";\nimport AddressBar_Folder from \"./AddressBar_Folder.vue\";\nimport AddressBar_Part from \"./AddressBar_Part.vue\";\nimport {rootMeta, openedFolder, openedFolders, separator} from \"../core/folders.js\";\n\n/** @param {MouseEvent} event */\nasync function onContextmenu(event) {\n  event.preventDefault();\n  const folderPath = [...rootMeta.value.path, ...openedFolder.value.path.map(entry => entry.name)].join(separator.value);\n  console.log(\"Copy to clipboard:\", folderPath);\n  await navigator.clipboard.writeText(folderPath);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.address {\n  display: flex;\n  overflow-x: scroll;\n  padding-left: 6px;\n\n  scrollbar-width: none; // firefox\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 0;\n    height: 0;\n    background: transparent;\n    display: none;\n  }\n  &:active { // todo only on onContextmenu event do it\n    border-right: var(--blue-1) solid 1px;\n  }\n}\n</style>\n","<template>\n  <div class=\"search-wrapper\">\n    <div class=\"search\">\n      <input id=\"json-scan-search-input\" type=\"text\"\n             v-model=\"search\"\n             ref=\"inputRef\"\n      >\n      <button\n          @click=\"onClearClick\"\n          @contextmenu.prevent=\"onContextMenu\"\n          title=\"Right click to clear and paste\"\n      >Clear</button>\n    </div>\n    <label for=\"json-scan-search-input\" class=\"fuck-off-lighthouse\">.</label>\n  </div>\n</template>\n\n<script setup>\nimport {search, clearSearch} from \"../core/search.js\";\nimport {ref, onMounted, onUnmounted} from \"vue\";\n\nconst inputRef = ref();\nfunction onClearClick() {\n  clearSearch();\n  inputRef.value.focus();\n}\n\nasync function onContextMenu() {\n  try {\n    const text = await navigator.clipboard.readText();\n    console.log(\"[clipboard] readText:\", text);\n    search.value = text;\n  } catch (err) {\n    console.error(\"[clipboard] read failed\", err);\n  }\n}\n\nlet shiftTime = 0;\nfunction doubleShiftHandler(event) {\n  if (event.key !== \"Shift\") {\n    return;\n  }\n  const now = Date.now();\n  if (now - shiftTime < 250) {\n    inputRef.value.focus();\n  } else {\n    shiftTime = now;\n  }\n}\nonMounted(() => document.addEventListener(\"keydown\", doubleShiftHandler));\nonUnmounted(() => document.removeEventListener(\"keydown\", doubleShiftHandler));\n\n</script>\n\n<style lang=\"scss\" scoped>\n/** reset */\ninput { padding: 0 0; }\nbutton { padding: 0 0; }\n\n.fuck-off-lighthouse {\n  position: absolute;\n  top:-1000px;\n  left:-1000px;\n}\n\n.search {\n  display: flex;\n  height: 100%;\n  label {\n    display: contents;\n  }\n  input {\n    height: 100%;\n    flex-grow: 2;\n    border: none;\n    padding-left: 6px;\n    border-bottom: transparent solid 1px;\n    box-sizing: border-box;\n    &:focus, &:hover {\n      outline: none;\n      border-bottom: var(--blue-1) solid 1px;\n    }\n  }\n  button {\n    height: 100%;\n    padding: 0 6px;\n    //outline: none;\n    outline-width: 1px;\n    outline-color: var(--blue-1);\n    border: none;\n    border-bottom: transparent solid 1px;\n    border-left: var(--gray-2) solid 1px;\n    box-sizing: border-box;\n    background-color: var(--gray-1);\n    &:hover {\n      border-bottom: var(--blue-1) solid 1px;\n      background: var(--blue-2);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n  }\n}\n</style>\n","export class WebFileEntry {\n    /**\n     * @param {Object} init\n     * @param {File} [init.file]\n     * @param {\"file\"|\"folder\"} init.type\n     * @param {WebFileEntry} [init.parent]\n     * @param {String} [init.name]\n     */\n    constructor({file, parent, type, name}) {\n        if (file) {\n            /** @type {File|undefined} */\n            this.file = file;\n        }\n        if (parent) {\n            /** @type {WebFileEntry|undefined} */\n            this.parent = parent;\n            parent.addChild(this);\n        }\n        if (name) {\n            /** @type {String} */\n            this._name = name;\n        }\n        /** @type {\"file\"|\"folder\"} */\n        this.type = type;\n    }\n\n    get name() {\n        return this._name || this.file?.name;\n    }\n\n    /** @param {WebFileEntry} entry */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {WebFileEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n\n    /** @private\n     *  @param {Number} size  */\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            /** @type {Number}\n             *  @private  */\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent/* && size*/) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this.file?.size || 0;\n    }\n\n    get mtime() {\n        return this.file?.lastModified || 0;\n    }\n\n    /** @return {WebFileEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n\n    /** @return {Generator<WebFileEntry>} */\n    *[Symbol.iterator]() {\n        yield this;\n        if (this.children) {\n            for (const child of this.children) {\n                yield * child;\n            }\n        }\n    }\n\n    /** @return {WebFileEntry[]} */\n    flat() {\n        return [...this];\n    }\n\n    /**\n     * @param {WebFileEntry[]} entries\n     * @return {WebFileEntry[]}\n     */\n    static flat(entries) {\n        return entries.map(e => [...e]).flat();\n    }\n\n    /**\n     * @param {DataTransferItem[]} dtItems\n     * @return {Promise<WebFileEntry[]>}\n     */\n    static async fromDataTransferItems(dtItems) {\n        const fileSystemEntries = await dtItemsToFileSystemEntries(dtItems);\n        console.log(\"[fileSystemEntries]:\", fileSystemEntries);\n        /** @type {WebFileEntry[]} */\n        const result = [];\n        for (const fileSystemEntry of fileSystemEntries) {\n            result.push(await fromFileSystemEntry(fileSystemEntry));\n        }\n        return result;\n    }\n\n    /**\n     * @param {File[]} files\n     * @return {WebFileEntry[]}\n     */\n    static fromFiles(files) {\n        /** @type {WebFileEntry[]} */\n        const result = [];\n        for (const file of files) {\n            result.push(new WebFileEntry({file, type: \"file\"}));\n        }\n        return result;\n    }\n}\n\n/**\n * @param {FileSystemEntry} fsEntry\n * @param {WebFileEntry|null} parent\n * @return {Promise<WebFileEntry|null>}\n */\nasync function fromFileSystemEntry(fsEntry, parent = null) {\n    if (fsEntry.isFile) {\n        try {\n            const file = await toFile(/** @type {FileSystemFileEntry} */ fsEntry);\n            return new WebFileEntry({file, type: \"file\", parent});\n        } catch (e) { // For example, for long path \\\\?\\M:\\...\n            console.error(\"[fromFileSystemEntry][error]\", fsEntry.name, e);\n            return null;\n        }\n    } else if (fsEntry.isDirectory) {\n        const dirEntry = new WebFileEntry({type: \"folder\", parent, name: fsEntry.name});\n        /** @type {AsyncGenerator<FileSystemEntry>} */\n        const entries = readFileSystemDirectoryEntry(/** @type {FileSystemDirectoryEntry} */ fsEntry);\n        for await (const entry of entries) {\n            // The entries will be attached to the parent (`dirEntry`).\n            await fromFileSystemEntry(entry, dirEntry);\n        }\n        return dirEntry;\n    }\n}\n\n/**\n * Works only with a http server\n * @param {FileSystemFileEntry} fsFileEntry\n * @return {Promise<File>}\n */\nfunction toFile(fsFileEntry) {\n    return new Promise((resolve, reject) => fsFileEntry.file(resolve, reject));\n}\n\n/**\n * @param {FileSystemDirectoryEntry} fsDirEntry\n * @return {AsyncGenerator<FileSystemEntry>}\n */\nasync function * readFileSystemDirectoryEntry(fsDirEntry) {\n    const reader = fsDirEntry.createReader();\n    let part = [];\n    do {\n        part = await new Promise((resolve, reject) => reader.readEntries(resolve, reject));\n        for (const entry of part) {\n            yield entry;\n        }\n    } while (part.length);\n}\n\n/**\n * @param {DataTransferItem[]} dtItems\n * @return {Promise<FileSystemEntry[]>}\n */\nasync function dtItemsToFileSystemEntries(dtItems) {\n    const result = [];\n    for (const entry of dtItems) {\n        result.push(await dtItemToFileSystemEntry(entry));\n    }\n    return result;\n}\n\n/**\n * @param {DataTransferItem} entry\n * @return {Promise<FileSystemEntry>}\n */\nasync function dtItemToFileSystemEntry(entry) {\n    return entry.webkitGetAsEntry();\n}\n","import {ref, computed, watchEffect, toRaw} from \"vue\";\nimport {WebFileEntry} from \"./WebFileEntry.js\";\n\n/** @type {import(\"vue\").Ref<File[]>} */\nconst files = ref([]);\n/** @type {import(\"vue\").Ref<DataTransferItem[]>} */\nconst dtItems = ref([]);\n\n/** @type {import(\"vue\").Ref<Boolean>} */\nexport const dropHover = ref(false);\n/** @type {import(\"vue\").Ref<Number>} */\nexport const dropHoverItemCount = ref(0);\n/** @type {import(\"vue\").Ref<String[]>} */\nexport const dropHoverTypes = ref([]);\n\n/** @type {import(\"vue\").Ref<WebFileEntry[]>} */\nexport const fileEntries = ref([]);\n/** @type {import(\"vue\").Ref<Boolean>} */\nexport const parsing = ref(false);\nwatchEffect(async () => {\n    const time = Date.now();\n    parsing.value = true;\n    if (dtItems.value.length) {\n        fileEntries.value = await WebFileEntry.fromDataTransferItems(dtItems.value);\n    } else {\n        fileEntries.value = WebFileEntry.fromFiles(files.value);\n    }\n    parsing.value = false;\n    console.log(\"[WebFileEntry parsing][time]:\", Date.now() - time, \"ms\");\n    console.log(\"[fileEntries]\", toRaw(fileEntries.value));\n});\n\n/** @type {import(\"vue\").ComputedRef<WebFileEntry>} */\nexport const file = computed(() => {\n    return fileEntries.value[0];\n});\n/** @type {import(\"vue\").ComputedRef<Number>} */\nexport const count = computed(() => {\n    return fileEntries.value.length;\n});\n\n/** @param {DataTransfer} dataTransfer */\nexport function setDataTransferHover(dataTransfer) {\n    const count = dataTransfer.items.length;\n    const allTypes = [...dataTransfer.items].map(item => item.type);\n    const types = [...new Set(allTypes)];\n\n    dropHoverItemCount.value = count;\n    dropHoverTypes.value = types;\n    console.log(\"[setDataTransferHover]:\", count, types);\n}\nexport function resetDataTransferHover() {\n    dropHoverItemCount.value = 0;\n    dropHoverTypes.value = [];\n}\n\n/** @param {DataTransfer} dataTransfer */\nexport function setDataTransfer(dataTransfer) {\n    console.log(dataTransfer);\n    setFiles(dataTransfer.files);\n    setDtItems(dataTransfer.items);\n}\n/** @param {FileList} filelist */\nexport function setFiles(filelist) {\n    /** @type {File[]} */\n    const _files = [...filelist];\n    files.value = _files;\n    console.log(\"[setFiles]:\", _files);\n}\n/** @param {DataTransferItemList} items */\nexport function setDtItems(items) {\n    /** @type {DataTransferItem[]} */\n    const _dtItems = [...items];\n    dtItems.value = _dtItems;\n    console.log(\"[setDtItems]:\", _dtItems); // bug in chromium: `type` and `kind` is \"\" in the console when expand the array.\n\n    console.log(_dtItems[0].kind);\n    console.log(_dtItems[0].type);\n}\nexport function resetDtItems() {\n    dtItems.value = [];\n}\n","<template>\n  <div class=\"default-hover-text\">{{text}}</div>\n</template>\n\n<script setup>\nimport {computed} from \"vue\";\nimport {dropHoverItemCount} from \"./file-input-state-private.js\";\nconst text = computed(() => {\n  const postfix = dropHoverItemCount.value > 1 ? \"s\" : \"\";\n  return `Drop ${dropHoverItemCount.value} file${postfix}`;\n});\n</script>\n\n<style scoped>\n.default-hover-text {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n","<template>\n  <div class=\"default-prompt-text\" :title=\"names\">\n    <div class=\"parsing\" v-if=\"parsing\">Parsing...</div>\n    <div v-else-if=\"count\">{{count}} file{{count > 1 ? \"s\" : \"\"}}</div>\n    <div v-else style=\"display: contents\"><slot>Select file</slot></div>\n  </div>\n</template>\n\n<script setup>\n//todo split to 2 comps\n//todo use props\n\nimport {count, fileEntries, parsing} from \"./file-input-state-private.js\";\nimport {computed} from \"vue\";\nconst names = computed(() => {\n  return fileEntries.value.slice(0, 50).map(file => file.name).join(\"\\n\");\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.default-prompt-text {\n  width: inherit;\n  height: inherit;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  &:hover {\n    //text-decoration: underline;\n  }\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n</style>\n","<template>\n<div\n    class=\"file-input\"\n    ref=\"fileInputElem\"\n    :class=\"{'drop-hover': dropHover}\"\n    tabindex=\"0\"\n    @keydown=\"onKeyDown\"\n>\n  <label>\n    <input type=\"file\"\n           :accept=\"accept\"\n           :multiple=\"multiple\"\n           @change=\"onFileInputChange\"\n           style=\"display: none\"\n    >\n\n    <span class=\"content hover\" v-if=\"dropHover\">\n      <slot name=\"hover\"><FileInputDefaultHoverText/></slot>\n    </span>\n    <span class=\"content selected\" v-else-if=\"file && !parsing\">\n      <slot name=\"selected\"><FileInputDefaultText/></slot>\n    </span>\n    <span class=\"content prompt\" v-else>\n      <slot name=\"prompt\"><FileInputDefaultText/></slot>\n    </span>\n\n  </label>\n  <teleport to=\"body\">\n    <div class=\"file-input-hover-modal\" :class=\"{'drop-hover': dropHover}\"></div>\n  </teleport>\n</div>\n</template>\n\n<script setup>\nimport FileInputDefaultHoverText from \"./FileInputDefaultHoverText.vue\";\nimport FileInputDefaultText from \"./FileInputDefaultText.vue\";\n\nimport {ref, toRefs, onMounted, computed, onBeforeUnmount} from \"vue\";\nimport {\n  parsing,\n  file,\n  dropHover,\n  setFiles,\n  setDataTransfer,\n  setDataTransferHover,\n  resetDataTransferHover, resetDtItems\n} from \"./file-input-state-private.js\";\n\nconst props = defineProps({\n  globalDropZone: {\n    type: Boolean,\n    default: true\n  },\n  accept: {\n    type: String,\n    default: \"*/*\"\n  },\n  multiple: {\n    type: Boolean,\n    default: true\n  },\n});\nconst {\n  /** @type {import(\"vue\").Ref<Boolean>} */\n  globalDropZone,\n} = toRefs(props);\n\n\n/** @param {Event} event */\nfunction onFileInputChange(event) {\n  const fileElem = event.target;\n  setFiles(fileElem.files);\n  resetDtItems();\n}\n\n\n/** @type {import(\"vue\").Ref<HTMLElement|null>} */\nconst fileInputElem = ref(null);\n/** @type {import(\"vue\").Ref<HTMLElement>} */\nconst dropZone = computed(() => {\n  if (globalDropZone.value) {\n    return document.body;\n  }\n  return fileInputElem.value;\n});\nonMounted(() => {\n  if (!globalDropZone.value) {\n    disableDragOverNotDropZone();\n  }\n  initListeners();\n});\nonBeforeUnmount(() => {\n  removeListeners();\n});\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nfunction initListeners() {\n  dropZone.value.addEventListener(\"drop\", onDrop);\n  dropZone.value.addEventListener(\"dragover\", onDragOver);\n  dropZone.value.addEventListener(\"dragleave\", onDragLeave);\n  dropZone.value.addEventListener(\"dragenter\", onDragEnter);\n}\nfunction removeListeners() {\n  dropZone.value.removeEventListener(\"drop\", onDrop);\n  dropZone.value.removeEventListener(\"dragover\", onDragOver);\n  dropZone.value.removeEventListener(\"dragleave\", onDragLeave);\n  dropZone.value.removeEventListener(\"dragenter\", onDragEnter);\n}\nfunction onDrop(event) {\n  stopEvent(event);\n  dropHover.value = false;\n  setDataTransfer(event.dataTransfer);\n}\nfunction onDragOver(event) {\n  stopEvent(event);\n  event.dataTransfer.dropEffect = \"copy\";\n}\nfunction onDragEnter(event) {\n  stopEvent(event);\n  if (!dropHover.value) {\n    dropHover.value = true;\n  } else {\n    return;\n  }\n  setDataTransferHover(event.dataTransfer);\n}\nfunction onDragLeave(event) {\n  stopEvent(event);\n  if (!dropZone.value.contains(event.relatedTarget)) {\n    dropHover.value = false;\n    resetDataTransferHover();\n  }\n}\n\nfunction disableDragOverNotDropZone() {\n  /** @param {DragEvent} event */\n  const dragOverCallback = event => {\n    if (!dropZone.value.contains(event.target)) {\n      stopEvent(event);\n      event.dataTransfer.dropEffect = \"none\";\n    }\n  };\n  document.body.addEventListener(\"dragover\", dragOverCallback);\n}\n\nfunction onKeyDown(event) {\n  if (event.key === \"Enter\") {\n    fileInputElem.value.querySelector(\"label\").click();\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.file-input {\n  transition: background-color 0.1s;\n  border: solid 1px var(--file-input-border);\n  box-sizing: border-box;\n  &.drop-hover {\n    background-color: var(--drop-file-hover);\n    transition: background-color 0.1s;\n  }\n  &:hover {\n    background-color: var(--drop-hover);\n  }\n  &:active {\n    background-color: var(--drop-active);\n  }\n}\n.file-input, label, .content {\n  width: 100%;\n  height: 100%;\n}\n\n.file-input-hover-modal {\n  height: 50px;\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n  background-image: linear-gradient(to top, rgba(0,0,0,0.15), rgba(0,0,0,0.005));\n\n  transition: opacity 0.25s ease-out;\n  opacity: 0;\n  &.drop-hover {\n    opacity: 1;\n  }\n}\n</style>\n\n\n\n\n\n\n\n\n\n\n","import {readonly} from \"vue\";\nimport {fileEntries as _fileEntries} from \"./file-input-state-private.js\";\n\n/**@type {import(\"vue\").DeepReadonly<import(\"vue\").Ref<WebFileEntry[]>>} */\nexport const fileEntries = readonly(_fileEntries);\n","<template>\n  <div class=\"file-input-wrapper\">\n    <FileInput :accept=\"`application/json,application/gzip`\" :multiple=\"true\"/>\n  </div>\n</template>\n\n<script setup>\nimport {clearHome, home, openFolder, setScan} from \"../core/folders.js\";\n\nimport {watch} from \"vue\";\nimport FileInput from \"./file-input/FileInput.vue\";\nimport {fileEntries} from \"./file-input/file-input-state.js\";\nimport {allScansReady, currentScansNum, scansCount} from \"../core/state.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nwatch(fileEntries, async () => {\n  clearHome();\n  allScansReady.value = false;\n  scansCount.value = fileEntries.value.length;\n  currentScansNum.value = 0;\n  for (const {file} of fileEntries.value) {\n    currentScansNum.value++;\n    await setScan(file, true);\n  }\n  if (fileEntries.value.length > 1) {\n    openFolder(home.value, true);\n    debugMessageFromEntry(home.value);\n  }\n  allScansReady.value = true;\n});\n</script>\n\n<style lang=\"scss\" scoped>\n\n::v-deep(.file-input) {\n  border-right: 0;\n  border-left:  0;\n  outline-width: 1px;\n  outline-color: var(--blue-1);\n}\n.file-input-wrapper {\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 100%;\n  grid-template-rows: 100%;\n  width: 100%;\n  min-height: 35px;\n}\n</style>\n","<template>\n  <div class=\"home\" @click=\"onClick\" @contextmenu=\"onContextMenu\" :class=\"{active: isHomeOpened}\" v-if=\"show\">\n    Home\n  </div>\n</template>\n\n<script setup>\nimport {home, openFolder, isHomeOpened, clearHome} from \"../core/folders.js\";\nimport {computed} from \"vue\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst show = computed(() => {\n  return home.value?.children?.length > 1;\n});\n\nfunction onClick() {\n  debugMessageFromEntry(home.value);\n  openFolder(home.value);\n}\nfunction onContextMenu(event) {\n  event.preventDefault();\n  clearHome();\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.home {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 35px;\n\n  border: var(--gray-2) solid 1px;\n  border-right: 0;\n  border-left: 0;\n  box-sizing: border-box;\n  &:hover {\n    background-color: var(--drop-hover);\n    cursor: pointer;\n  }\n  &:active {\n    background-color: var(--drop-active);\n  }\n  &.active {\n    border-width: 2px;\n  }\n}\n</style>\n","<template>\n  <tr class=\"row\"\n      @click=\"onClick\"\n      @mousedown=\"onMousedown\"\n      @mouseover=\"onMouseover\"\n      @mouseleave=\"onMouseleave\"\n      :title=\"title\"\n      :class=\"{error, hoveredLink}\"\n  >\n      <td class=\"icon\">{{icon}}</td>\n      <td class=\"name\" :title=\"entry.getPathString(entry.root.meta)\">{{entry.name}}</td>\n      <td class=\"size\" :class=\"sizeClass\" :title=\"tripleSizeGroups(entry.size)\">{{size}}</td>\n      <td class=\"time\" :class=\"{[selectedTime]: true}\">{{time}}</td>\n<!--      <td class=\"type\">{{entry.type}}</td>-->\n<!--      <td class=\"filler\"></td>-->\n  </tr>\n</template>\n\n<script setup>\nimport {toRefs, computed, watchEffect, ref} from \"vue\";\nimport {openedFolder, openFolder} from \"../core/folders.js\";\nimport {bytesToSizeWinLike, dateToDayDateTimeString, isImage, isVideo, isAudio, tripleSizeGroups} from \"../util.js\";\nimport {hoveredEntry, selectedTime} from \"../core/entries.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst props = defineProps([\"entry\"]);\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nconst entry = toRefs(props).entry;\n\nconst size = computed(() => {\n  return entry.value.hasErrors ? \"\" : bytesToSizeWinLike(entry.value.size);\n});\n\nconst sizeClass = computed(() => {\n  if (size.value === \"0 B\") {\n    return \"Z\";\n  }\n  return size.value.split(\" \")[1];\n});\n\n\n/** @type {import(\"vue\").Ref<Boolean>} */\nconst error = computed(() => {\n  return entry.value.hasErrors;\n});\n\n/** @type {import(\"vue\").ComputedRef<String>} */\nconst time = computed(() => {\n  if (entry.value[selectedTime.value] === undefined) {\n    return \"\";\n  }\n\n  // todo tag:COMPUTED_TIME\n  // fucking slow on parsing\n  //\n  // let timeValue;\n  // if (computedFolderTime.value) {\n  //   timeValue = getMaxChildPropertyValue(entry.value, \"_\" + selectedTime.value, 128);\n  // } else {\n  //   timeValue = entry.value[selectedTime.value];\n  // }\n  // const time = dateToDayDateTimeString(timeValue, false);\n\n  const time = dateToDayDateTimeString(entry.value[selectedTime.value], false);\n  return time.slice(0, -3); // trim seconds\n});\n\n/** @type {import(\"vue\").ComputedRef<String>} */\nconst title = computed(() => {\n  if (entry.value.hasErrors) {\n    return JSON.stringify(entry.value.errors[0], null, \" \");\n  }\n  if (entry.value.type === \"symlink\") {\n    return entry.value.pathTo;\n  }\n});\n\n/** @type {import(\"vue\").Ref<String>} */\nconst icon = computed(() => {\n  const type = entry.value.type;\n  if (type === \"folder\") {\n    return \"📁\";\n  } else if (type === \"file\") {\n    const name = entry.value.name;\n    if (isVideo(name)) {\n      return \"🎦\";\n    } else if (isImage(name)) {\n      return \"🖼\";\n    } else if (isAudio(name)) {\n      return \"🎵\";\n    }\n    return \"📄\";\n  } else if (type === \"symlink\") {\n    return \"🔗\";\n  }\n  return \"👾\";\n});\n\nfunction onClick(event) {\n  debugMessageFromEntry(entry.value);\n\n  globalThis.c = globalThis.clicked = entry.value;\n\n  if (entry.value.type === \"folder\") {\n    openFolder(entry.value);\n  }\n}\n\n/** @param {MouseEvent} event */\nfunction onMousedown(event) {\n  const MIDDLE_BUTTON = 1;\n  const RIGHT_BUTTON = 2;\n  if (event.button === MIDDLE_BUTTON) {\n    event.preventDefault();\n    console.log(\n        entry.value.getPathString(entry.value.root.meta),\n        entry.value,\n    );\n\n    if (openedFolder.value !== entry.value.parent) {\n      openFolder(entry.value.parent);\n    }\n  }\n}\n\nfunction onMouseover(event) {\n  hoveredEntry.value = entry.value;\n}\nfunction onMouseleave(event) {\n  hoveredEntry.value = null;\n}\n\n// todo something for an infinite looped  folder\nconst hoveredLink = ref(false);\nwatchEffect(() => {\n  if (hoveredEntry.value?.type === \"symlink\") {\n    const pathTo = hoveredEntry.value.pathTo;\n    const fullPath = entry.value.getPathString(entry.value.root.meta);\n    hoveredLink.value = pathTo === fullPath;\n    return;\n  }\n  const noHardlinks = !hoveredEntry.value?.hardlinks;\n  if (hoveredLink.value && noHardlinks) {\n    hoveredLink.value = false;\n  }\n  if (noHardlinks) {\n    return;\n  }\n  hoveredLink.value = hoveredEntry.value.hardlinks.includes(entry.value);\n});\n\n</script>\n\n<style lang=\"scss\" scoped>\n.row {\n  width: 100%;\n  min-height: 28px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background-color: var(--blue-2);\n  }\n  &.hoveredLink:not(:hover) {\n    background-color: var(--blue-4);\n  }\n  * {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n  td {\n    &.icon {\n      border-left: 2px solid transparent;\n      width: 24px;\n      text-align: center;\n      user-select: none;\n    }\n    &.name {\n      display: block;\n      //width: 880px; // gets it from the parent\n      white-space: pre; // to display tailing spaces\n    }\n    &.size {\n      text-align: end;\n      min-width: 72px;\n      &.Z {\n        color: #888;\n      }\n      &.B {\n        color: #666;\n      }\n      &.KB {\n        color: #0b0;\n      }\n      &.MB {\n        color: #0070dd;\n      }\n      &.GB {\n        color: #a335ee;\n      }\n      &.TB {\n        color: #ff8000;\n      }\n    }\n    &.time {\n      text-align: end;\n      width: 140px;\n      color: #777;\n    }\n    &.type {\n      text-align: end;\n      width: 58px;\n      user-select: none;\n    }\n    //&.filler {\n    //  width: inherit;\n    //}\n  }\n  &.error {\n    .icon {\n      border-left: 2px solid red;\n    }\n  }\n}\n</style>\n","<template>\n<div class=\"intersection\" ref=\"intersection\"></div>\n</template>\n\n<script setup>\nimport {onBeforeUnmount, onMounted, ref} from \"vue\";\nimport {count, limit} from \"../core/entries.js\";\n\n/** @param {IntersectionObserverEntry[]} entries */\nconst callback = (entries) => {\n  const [entry] = entries;\n  if (entry.isIntersecting) {\n    if (count.value > limit.value) {\n      limit.value = limit.value + 50;\n    }\n  }\n}\nconst observer = new IntersectionObserver(callback);\n\n/** @type {import(\"vue\").Ref<HTMLElement>} */\nconst intersection = ref(null);\n\nonMounted(() => {\n  observer.observe(intersection.value);\n});\nonBeforeUnmount(() => {\n  observer.disconnect();\n});\n</script>\n\n<style scoped>\n.intersection {\n  width: 100%;\n  position: relative;\n  bottom: 120px;\n}\n</style>\n","<template>\n  <div class=\"content\"\n       @contextmenu=\"onContextMenu\"\n  >\n    <table class=\"rows\" v-if=\"listLimited.length\">\n      <tbody>\n        <Row v-for=\"entry of listLimited\" :entry=\"entry\" :key=\"`${entry.pathString}//${entry.size}`\"/>\n        <IntersectionRow/>\n      </tbody>\n    </table>\n    <div class=\"empty-message\" v-if=\"empty && !error\">\n      <span>The folder is empty.</span>\n    </div>\n    <div class=\"error-message\" v-if=\"error\">\n      <div>\n        <h2>Error</h2>\n        <table>\n          <tbody>\n            <tr>\n              <td>syscall</td>\n              <td><pre>{{error.syscall}}</pre></td>\n            </tr>\n            <tr>\n              <td>code</td>\n              <td><pre>{{error.code}}</pre></td>\n            </tr>\n            <tr>\n              <td>errno</td>\n              <td><pre>{{error.errno}}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Row from \"./Row.vue\";\nimport IntersectionRow from \"./IntersectionRow.vue\";\nimport {goBack, empty, openedFolder} from \"../core/folders.js\";\nimport {listLimited} from \"../core/entries.js\";\nimport {computed, onMounted, ref, onBeforeMount} from \"vue\";\n\n/** @type {import(\"vue\").ComputedRef<ScanError>} */\nconst error = computed(() => {\n  if (openedFolder.value.hasErrors) {\n    return openedFolder.value.errors[0];\n  }\n  return false;\n});\n\nfunction onContextMenu(event) {\n  event.preventDefault();\n  goBack();\n}\n\nconst nameElemWidth = ref();\nonMounted(() => {\n  resizeNameElem();\n  window.addEventListener(\"resize\", resizeNameElem);\n});\nonBeforeMount(() => {\n  window.removeEventListener(\"resize\", resizeNameElem);\n});\nfunction resizeNameElem() {\n  const w = document.body.offsetWidth;\n  const tabsWidthOff = w <= 720 ? 113 : 0;\n  if (w < 1280) {\n    let px = 893 - (1280 - w) + tabsWidthOff;\n    px = px < 140 ? 140 : px;\n    nameElemWidth.value = `${px}px`;\n  } else {\n    nameElemWidth.value = \"893px\";\n  }\n}\n</script>\n\n\n<style lang=\"scss\" scoped>\n::v-deep(.row .name) {\n  width: v-bind(nameElemWidth);\n}\n\n.content {\n  width: 100%;\n  overflow: auto;\n  .rows {\n    width: 100%;\n    overflow: auto;\n  }\n  .empty-message {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--gray-2);\n  }\n  .error-message {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: var(--red-1);\n    div {\n      h2 {\n        margin: 0;\n        padding-bottom: 6px;\n        padding-left: 2px;\n      }\n      pre {\n        display: inline;\n      }\n      td {\n        padding-right: 3px;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"status\">\n    <span>Items count: {{count}}</span>\n    <span v-show=\"hoveredEntry\">. Hover item's size: {{size}}</span>\n  </div>\n</template>\n\n<script setup>\nimport {count, hoveredEntry} from \"../core/entries.js\";\nimport {computed} from \"vue\";\nimport {bytesToSizeWinLike} from \"../util.js\";\n\nconst size = computed(() => hoveredEntry.value?.size && bytesToSizeWinLike(hoveredEntry.value.size));\n</script>\n\n<style scoped>\n.status {\n  padding: 2px 2px 2px 6px;\n}\n</style>\n","<template>\n  <div class=\"switch\">\n    <button\n        class=\"order-by-name\"\n        title=\"Order by name\"\n        @click=\"onClick('name')\"\n        :class=\"{active: orderBy === 'name'}\"\n    >{{ orders.name  ? \"N\" : \"n\"}}</button>\n    <button\n        class=\"order-by-size\"\n        title=\"Order by size\"\n        @click=\"onClick('size')\"\n        :class=\"{active: orderBy === 'size'}\"\n    >{{ orders.size  ? \"S\" : \"s\"}}</button>\n    <button\n        class=\"order-by-time\"\n        :title=\"'Order by ' + selectedTime\"\n        @click=\"onClick('time')\"\n        @contextmenu.prevent=\"toggleTimeType\"\n        :class=\"{active: orderBy === 'time', [selectedTime]: true}\"\n    >{{ orders.time ? \"D\" : \"d\"}}</button>\n  </div>\n</template>\n\n<script setup>\nimport {orderBy, toggleOrder, orders, selectedTime} from \"../core/entries.js\";\n\n// todo optimise reversing.\n// todo cancel sorting (for large arrays) on new click while sorting\n\nfunction toggleTimeType() {\n  selectedTime.value = selectedTime.value === \"mtime\" ? \"btime\" : \"mtime\";\n}\n\n/** @param {\"name\"|\"size\"|\"time\"} value */\nfunction onClick(value) {\n  if (orderBy.value === value) {\n    toggleOrder();\n  }\n  orderBy.value = value;\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.switch {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\nbutton.active {\n  font-weight: bold;\n}\n.btime {\n  font-style: italic;\n}\n\nbutton {\n  width: 22px;\n  margin: 1px 3px;\n  padding: 2px 6px;\n  outline-width: 1px;\n  outline-color: var(--blue-1);\n  border: 1px solid var(--gray-2);\n  box-sizing: border-box;\n  background-color: var(--gray-1);\n  &:hover {\n    border-bottom: var(--blue-1) solid 1px;\n    background: var(--blue-2);\n  }\n  &:active {\n    background: var(--blue-3);\n  }\n}\n</style>\n","<template>\n  <div class=\"guide\">\n    <div class=\"text-wrapper\">\n      <h2>No scan selected</h2>\n      <div>Use your own directory scan file (created with\n        <a href=\"https://github.com/AlttiRi/keep-lister#how-to-use\" target=\"_blank\">the scanner</a>).\n      </div>\n      <div class=\"\">Or use the demo scans to take a look at the program's work <span class=\"gray\">(just click on the link)</span>:\n        <ul>\n          <li><a href=\"./?filepath=https://alttiri.github.io/json-flat-scans/windows-admin.json.gz\">Win 10 scan (as Admin)</a></li>\n          <li><a href=\"./?filepath=https://alttiri.github.io/json-flat-scans/ubuntu-admin.json.gz\">Ubuntu scan (as Root)</a></li>\n          <li><a href=\"./?filepath=https://alttiri.github.io/json-flat-scans/linux-master.json.gz\">Linux Source Code scan</a></li>\n        </ul>\n      </div>\n      <div class=\"gray\">Also it supports mega.nz folder links (https://mega.nz/folder/ABcd12#XXX).<br>\n        Just paste them in the search field.</div>\n      <div>For more info see the <a href=\"https://github.com/AlttiRi/keep-lister#keeplister\" target=\"_blank\">Readme</a>.</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n\n</script>\n\n<style lang=\"scss\" scoped>\n.guide {\n  animation: appear 2s;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 15px;\n  .text-wrapper {\n    min-width: 50%;\n  }\n  div {\n    margin-top: 15px;\n  }\n  .gray {\n    color: #666666;\n  }\n}\n\n.text-wrapper {\n  animation: fadein 1.5s linear 1 forwards;\n}\n@keyframes fadein {\n  0% { opacity: 0; }\n  50% { opacity: 0; }\n  100% { opacity: 1; }\n}\n</style>\n","<template>\n  <div class=\"inner-modal\">\n    <slot></slot>\n  </div>\n</template>\n\n<script setup>\n</script>\n\n<style lang=\"scss\" scoped>\n.inner-modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n","<template>\n  <div class=\"memory-consuming-component\"\n       v-if=\"isSupported\"\n       :style=\"{width: percent + '%'}\"\n       :title=\"'Heap size: ' + formattedSize + (showHint ? '\\n' + hint : '')\"\n       @mousedown=\"onMousedown\"\n  >\n    <div class=\"visible\"\n        :class=\"{over100}\"\n    ></div>\n    <div class=\"invisible\"></div>\n  </div>\n</template>\n\n<script setup>\nimport {bytesToSizeWinLike} from \"../util.js\";\nimport {computed, ref, onMounted, onBeforeUnmount} from \"vue\";\n\n\n/** @type {import(\"vue\").Ref<{jsHeapSizeLimit: number, totalJSHeapSize: number, usedJSHeapSize: number}>} */\nconst memory = ref(performance.memory);\nconst jsHeapSizeLimit = computed(() => memory.value.jsHeapSizeLimit);\nconst totalJSHeapSize = computed(() => memory.value.totalJSHeapSize);\nconst usedJSHeapSize  = computed(() => memory.value.usedJSHeapSize);\n\nconst intervalId = ref(null);\nconst over100 = ref(false);\nconst showHint = ref(false);\nconst hint = \"Use middle mouse button click to clear the console.\";\n\nconst percent = computed(() => {\n  const percent = totalJSHeapSize.value / (jsHeapSizeLimit.value / 100);\n  over100.value = percent > 100;\n  return over100.value ? 100 : percent;\n});\n\nconst formattedSize = computed(() => bytesToSizeWinLike(totalJSHeapSize.value));\nconst isSupported = computed(() => memory.value);\n\nonMounted(() => {\n  if (!isSupported.value) {\n    return;\n  }\n  intervalId.value = setInterval(() => {\n    memory.value = performance.memory;\n  }, 1000);\n});\nonBeforeUnmount(() => {\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n});\n\n/** @param {MouseEvent} event */\nfunction onMousedown(event) {\n  const LEFT_BUTTON = 0;\n  const MIDDLE_BUTTON = 1;\n  const RIGHT_BUTTON = 2;\n  if (event.button === LEFT_BUTTON) {\n    showHint.value = true;\n  }\n  if (event.button === MIDDLE_BUTTON) {\n    event.preventDefault();\n    showHint.value = false;\n    console.clear();\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.memory-consuming-component {\n  position: absolute;\n  left: 0;\n  top: 0;\n  > div {\n    width: 100%;\n  }\n  .visible {\n    background-color: #415aff;\n    height: 2px;\n    &.over100 {\n      background-color: #e30000;\n    }\n  }\n  &:active .visible {\n    background-color: #415aff80;\n  }\n  .invisible {\n    height: 3px;\n  }\n}\n</style>\n","<template>\n  <div class=\"scan-parsing-progress-component\"\n       v-if=\"scanParsing || show100\"\n       :style=\"{width: scanParsingProgress + '%'}\"\n  >\n    <div class=\"visible\"></div>\n  </div>\n</template>\n\n<script setup>\nimport {scanParsing, scanParsingProgress} from \"../core/state.js\";\nimport {ref, watchEffect} from \"vue\";\nimport {sleep} from \"../util.js\";\n\nconst show100 = ref(false);\nwatchEffect(async () => {\n  if (scanParsingProgress.value === 100) {\n    show100.value = true;\n    await sleep(16);\n    show100.value = false;\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.scan-parsing-progress-component {\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n  top: 0;\n  > div {\n    width: 100%;\n  }\n  .visible {\n    background-color: var(--blue-1);\n    height: 4px;\n  }\n}\n</style>\n","<template>\n  <div class=\"main\">\n    <MemoryConsuming/>\n    <ScanProgressBar/>\n    <Switch     style=\"grid-area: switch;\"/>\n    <AddressBar style=\"grid-area: address;\"/>\n    <Search     style=\"grid-area: search;\"/>\n    <Tabs       style=\"grid-area: tabs;\"/>\n    <Guide      style=\"grid-area: content;\" v-if=\"showGuide\"/>\n    <InnerModal style=\"grid-area: content;\" v-else-if=\"scanParsing && searchAwaiting\">\n      [Search]: Scan parsing awaiting ({{currentScansNum}} of {{scansCount}})\n    </InnerModal>\n    <Content    style=\"grid-area: content;\" v-else/>\n    <Status     style=\"grid-area: status;\"/>\n    <Debug      style=\"grid-area: debug;\"/>\n    <a class=\"readme\" title=\"Open Readme\" href=\"https://github.com/AlttiRi/keep-lister#keeplister\" target=\"_blank\"><i>i</i></a>\n  </div>\n</template>\n\n<script setup>\nimport AddressBar from \"./AddressBar.vue\";\nimport Search from \"./Search.vue\";\nimport Tabs from \"./Tabs.vue\";\nimport Content from \"./Content.vue\";\nimport Status from \"./Status.vue\";\nimport Switch from \"./Switch.vue\";\nimport Debug from \"./Debug.vue\";\nimport Guide from \"./Guide.vue\";\nimport InnerModal from \"./InnerModal.vue\";\nimport MemoryConsuming from \"./MemoryConsuming.vue\";\nimport ScanProgressBar from \"./ScanProgressBar.vue\";\nimport {computed, onMounted} from \"vue\";\nimport {rootMeta, setScan} from \"../core/folders.js\";\nimport {search} from \"../core/search.js\";\nimport {bytesToSize, bytesToSizeWinLike} from \"../util.js\";\nimport {scanParsing, searchAwaiting} from \"../core/state.js\";\nimport {orderBy, toggleOrder} from \"../core/entries.js\";\nimport {handleMegaUrl} from \"../core/mega-nz.js\";\nimport {scansCount, currentScansNum} from \"../core/state.js\";\n\nglobalThis.bytesToSize = bytesToSize;\nglobalThis.bytesToSizeWinLike = bytesToSizeWinLike;\n\n\n// some kind of hack, but okay // don't show if a file selected, or remote scan is loading\nconst showGuide = computed(() => rootMeta.value === undefined && !new URL(location.href).searchParams.get(\"filepath\") || rootMeta.value === null);\n\n\n// Already opened directory, no need to open with input\nonMounted(async () => {\n  const url = new URL(location.href);\n  const filepath = url.searchParams.get(\"filepath\");\n  const sort = url.searchParams.get(\"sort\") || url.searchParams.get(\"order\");\n  if ([\"name\", \"size\", \"time\"].includes(sort)) {\n    orderBy.value = sort;\n    if ([\"true\", \"1\"].includes(url.searchParams.get(\"desc\"))) {\n      toggleOrder();\n    }\n  }\n  if (filepath) {\n    /** @type {Response} */\n    const response = await fetch(filepath);\n    await setScan(response);\n  }\n  const hash = url.hash.slice(1);\n  if (hash.startsWith(\"https://mega.nz/\")) {\n    await handleMegaUrl(hash);\n  }\n  const _search = url.searchParams.get(\"search\");\n  if (_search) {\n    search.value = _search;\n  }\n});\n\n</script>\n\n<style lang=\"scss\" scoped>\n.main {\n  grid-template-areas: \"switch address search \"\n                       \"tabs   content content\"\n                       \"status status  status \"\n                       \"debug  debug   debug  \";\n\n  display: grid;\n  grid-template-columns: 7em 2fr 1fr;\n  grid-template-rows:    2em 1fr;\n\n  @media screen and (max-width: 720px) {\n    grid-template-areas: \"switch  search  search \"\n                         \"address address address\"\n                         \"content content content\"\n                         \"status  status  status \"\n                         \"debug   debug   debug  \"\n                         \"tabs    tabs    tabs   \";\n    grid-template-rows:  2em 2em 1fr;\n  }\n\n  height: 720px;\n  max-height: 100vh;\n  width: 1280px;\n  max-width: 100%;\n  box-sizing: border-box;\n\n  grid-gap: 1px;\n  border: 1px solid var(--gray-2);\n  background-color: var(--gray-2);\n  * {\n    background-color: white;\n  }\n}\n.readme {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding: 2px 8px;\n  margin: 1px;\n  color: darkgray;\n  text-decoration: none;\n}\n</style>\n","import {createApp} from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n"],"file":"index.js"}