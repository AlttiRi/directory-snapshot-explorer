{"version":3,"file":"index.js","sources":["node-modules:///vite/modulepreload-polyfill","source-maps:///util.js","source-maps:///core/entries.js","source-maps:///core/debug.js","source-maps:///core/entry.js","source-maps:///core/state.js","node-modules:///vite/preload-helper","source-maps:///core/mega-nz.js","source-maps:///core/search.js","source-maps:///core/scan-parser.js","source-maps:///core/folders.js","source-maps:///components/AddressBar_Base.vue","source-maps:///components/AddressBar_Folder.vue","source-maps:///components/AddressBar.vue","source-maps:///components/Search.vue","source-maps:///components/file-input/FileEntry.js","source-maps:///components/file-input/file-input-state.js","source-maps:///components/file-input/FileInputDefaultHoverText.vue","source-maps:///components/file-input/FileInputDefaultText.vue","source-maps:///components/file-input/FileInput.vue","source-maps:///components/FileInputWrapper.vue","source-maps:///components/Home.vue","source-maps:///components/Row.vue","source-maps:///components/IntersectionRow.vue","source-maps:///components/Content.vue","source-maps:///components/Status.vue","source-maps:///components/Switch.vue","source-maps:///components/MemoryConsuming.vue","source-maps:///components/ScanProgressBar.vue","source-maps:///components/Main.vue","source-maps:///main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export const setImmediate = globalThis.setImmediate || /*#__PURE__*/ (function() {\n    const {port1, port2} = new MessageChannel();\n    const queue = [];\n\n    port1.onmessage = function() {\n        const callback = queue.shift();\n        callback();\n    };\n\n    return function(callback) {\n        port2.postMessage(null);\n        queue.push(callback);\n    };\n})();\n\nexport function sleep(ms) {\n    if (ms === undefined) {\n        return new Promise(resolve => setImmediate(resolve));\n    }\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport const shuffle = () => Math.random() >= 0.5 ? -1 : 1;\n\n// todo: use Set\nconst videoExtensions = [\"mp4\", \"webm\", \"mkv\", \"avi\", \"mov\", \"m4v\", \"m4v\", \"mpg\", \"mpeg\", \"wmv\", \"flv\"];\nexport function isVideo(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return videoExtensions.includes(ext.toLowerCase());\n}\nconst imageExtensions = [\"jpg\", \"png\", \"jpeg\", \"gif\", \"webp\", \"jfif\", \"jpe\", \"tiff\"];\nexport function isImage(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return imageExtensions.includes(ext.toLowerCase());\n}\nconst audioExtensions = [\"mp3\", \"flac\", \"wav\", \"wma\", \"aac\"];\nexport function isAudio(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return audioExtensions.includes(ext.toLowerCase());\n}\n\nexport function debounce(runnable, ms = 50) {\n    let timerId;\n    return function() {\n        // console.log({timerId});\n        if (timerId) {\n            clearTimeout(timerId);\n        }\n        timerId = setTimeout(() => {\n            runnable.apply(this, arguments);\n            timerId = null;\n        }, ms);\n    }\n}\n\nexport function isString(input) {\n    return typeof input === \"string\" || input instanceof String;\n}\n\nexport function firefoxDateFix(dateValue) {\n    return isString(dateValue) ? dateValue.replace(/(?<y>\\d{4})\\.(?<m>\\d{2})\\.(?<d>\\d{2})/, \"$<y>-$<m>-$<d>\") : dateValue;\n}\n\n// \"Sun, 10 Jan 2021 22:22:22 GMT\" -> \"2021.01.10\"\nexport function dateToDayDateString(dateValue, utc = true) {\n    dateValue = firefoxDateFix(dateValue);\n    const _date = new Date(dateValue);\n    if (_date.toString() === \"Invalid Date\") {\n        console.warn(\"Invalid Date value: \", dateValue);\n    }\n    function pad2(str) {\n        return str.toString().padStart(2, \"0\");\n    }\n    const _utc = utc ? \"UTC\" : \"\";\n    const year  = _date[`get${_utc}FullYear`]();\n    const month = _date[`get${_utc}Month`]() + 1;\n    const date  = _date[`get${_utc}Date`]();\n\n    return year + \".\" + pad2(month) + \".\" + pad2(date);\n}\n\n// \"Sun, 10 Jan 2021 22:22:22 GMT\" -> \"2021.01.10 22:22:22Z\"\nexport function dateToDayDateTimeString(dateValue, utc = true) {\n    dateValue = firefoxDateFix(dateValue);\n    const _date = new Date(dateValue);\n    function pad2(str) {\n        return str.toString().padStart(2, \"0\");\n    }\n    const _utc = utc ? \"UTC\" : \"\";\n    const hours    = _date[`get${_utc}Hours`]();\n    const minutes  = _date[`get${_utc}Minutes`]();\n    const seconds  = _date[`get${_utc}Seconds`]();\n\n    const time = pad2(hours)+ \":\" + pad2(minutes) + \":\" + pad2(seconds);\n    return dateToDayDateString(_date, utc) + \" \" + time + (utc ? \"Z\" : \"\");\n}\n\n\nexport function structuredClone(object) {\n    return new Promise(resolve => {\n        const {port1, port2} = new MessageChannel();\n        port1.onmessage = function(message) {\n            resolve(message.data);\n        };\n        port2.postMessage(object);\n    });\n}\n\nexport function appendScript(src, integrity) {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement(\"script\");\n        script.onload = resolve;\n        script.onerror = event => reject({message: \"Failed to load script\", src, integrity, event});\n        script.src = src;\n        script.async = true;\n        if (integrity) {\n            script.integrity = integrity;\n            script.crossOrigin = \"anonymous\";\n        }\n        document.body.append(script);\n    });\n}\n\n/**\n * `chunkSize` is 65536, ReadableStream uses the same size.\n * There is no speed difference between using of different the chunk's sizes.\n * @param {ArrayBuffer|Uint8Array} arrayBuffer\n * @param {Number} [chunkSize=65536]\n * @return {Generator<Uint8Array>}\n */\nexport function *iterateArrayBuffer(arrayBuffer, chunkSize = 65536) {\n    const buffer = new Uint8Array(arrayBuffer);\n    let index = 0;\n    while (true) {\n        const chunk = buffer.subarray(index, index + chunkSize);\n        if (!chunk.length) {\n            break;\n        }\n        yield chunk;\n        index += chunkSize;\n    }\n}\n\n/**\n * @param {Response|ReadableStream|Blob} dataSource\n * @return {AsyncGenerator<Uint8Array>}\n */\nexport async function *iterateAsyncDataSource(dataSource) {\n    if (dataSource instanceof Response) {\n        dataSource = dataSource.body;\n    }\n    if (dataSource instanceof ReadableStream) {\n        yield *iterateReadableStream(dataSource);\n    } else if (dataSource instanceof Blob) {\n        for (const part of iterateBlob(dataSource)) {\n            yield await part;\n        }\n    }\n}\n\n\n/**\n * @param {ReadableStream} stream\n * @return {AsyncGenerator<Uint8Array>}\n */\nexport async function *iterateReadableStream(stream) {\n    const reader = stream.getReader();\n    while (true) {\n        const {done, /** @type {Uint8Array} */ value} = await reader.read();\n        if (done) {\n            break;\n        }\n        yield value;\n    }\n}\n\n/**\n * Iterates Blob (or File).\n * Note: `chunkSize` affects the execution speed\n * @param {Blob} blob\n * @param {Number} [chunkSize=2097152]\n * @return {Generator<Promise<Uint8Array>>|AsyncGenerator<Uint8Array>}\n */\nexport function *iterateBlob(blob, chunkSize = 2 * 1024 * 1024) {\n    let index = 0;\n    while (true) {\n        const blobChunk = blob.slice(index, index + chunkSize);\n        if (!blobChunk.size) {break;}\n\n        yield read(blobChunk);\n        index += chunkSize;\n    }\n\n    async function read(blob) {\n        return new Uint8Array(await blob.arrayBuffer());\n    }\n}\n\n/** @param {number} num */\nexport function tripleSizeGroups(num) {\n    const str = num.toString();\n    return str.padStart(str.length + (3 - str.length % 3)).match(/(.{3})/g).join(\" \").trimStart();\n}\n\n/**\n * Format bytes to human readable format.\n * Trims the tailing zeros.\n *\n * {@link https://stackoverflow.com/a/18650828/11468937}\n * @param {Number} bytes\n * @param {Number} [decimals=2]\n * @returns {String}\n */\nexport function bytesToSize(bytes, decimals = 2) {\n    if (bytes === 0) { return \"0 B\"; }\n    const k = 1024;\n    decimals = decimals < 0 ? 0 : decimals;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(decimals)) + \" \" + sizes[i];\n}\n\n/**\n * Formats bytes mostly like Windows does,\n * but in some rare cases the result is different.\n * Check the file with tests.\n * @see win-like-file-sizes.test.js\n * @param {Number} bytes\n * @return {string}\n */\nexport function bytesToSizeWinLike(bytes) {\n    if (bytes < 1024) { return bytes + \" B\"; }\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    let i = Math.floor(Math.log(bytes) / Math.log(1024));\n    let result = bytes / Math.pow(1024, i);\n    if (result >= 1000) {\n        i++;\n        result /= 1024;\n    }\n    return toTruncPrecision3(result) + \" \" + sizes[i];\n}\n\n/**\n * @see trunc-with-precision-3.test.js\n * @param {Number} number\n * @return {string}\n */\nexport function toTruncPrecision3(number) {\n    let result;\n    if (number < 10) {\n        result = Math.trunc(number * 100) / 100;\n    } else if (number < 100) {\n        result = Math.trunc(number * 10) / 10;\n    } else if (number < 1000) {\n        result = Math.trunc(number);\n    }\n    if (number < 0.1) {\n        return result.toPrecision(1);\n    } else if (number < 1) {\n        return result.toPrecision(2);\n    }\n    return result.toPrecision(3);\n}\n\n/**\n * @param {Uint8Array[]} arrays\n * @return {Uint8Array}\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((acc, value) => acc + value.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const array of arrays) {\n        result.set(array, offset);\n        offset += array.length;\n    }\n    return result;\n}\n\nexport function red(text) {\n    return [`%c${text}`,  \"color: #f44336; font-weight: bold;\"];\n}\nexport function orange(text) {\n    return [`%c${text}`,  \"color: #ff9800; font-weight: bold;\"];\n}\nexport function green(text) {\n    return [`%c${text}`,  \"color: #4caf50; font-weight: bold;\"];\n}\nexport function cyan(text) {\n    return [`%c${text}`,  \"color: #00bcd4; font-weight: bold;\"];\n}\nexport function blue(text) {\n    return [`%c${text}`,  \"color: #2196f3; font-weight: bold;\"];\n}\n","import {computed, ref} from \"vue\";\nimport {search, searchResult} from \"./search.js\";\nimport {openedFolder} from \"./folders.js\";\n\n\nexport const sort = ref(true);\n\n/** @type {import(\"vue\").Ref<(\"mtime\"|\"btime\")>} */\nexport const selectedTime = ref(\"mtime\");\n/** @type {import(\"vue\").Ref<(\"name\"|\"size\"|\"time\")>} */\nexport const orderBy = ref(\"name\");\nexport const orders = ref({\n    name: false,\n    size: false,\n    time: false,\n});\nexport const reverseOrder = computed(() => orders.value[orderBy.value]);\nexport function toggleOrder() {\n    orders.value[orderBy.value] = !orders.value[orderBy.value];\n}\n\nconst {compare} = new Intl.Collator(undefined, {\n    numeric: true,\n    sensitivity: \"accent\",\n});\n\n// // todo create the list variable (search result -> the list), (opened dir entries -> the list)\n// export const reactiveComparator = computed(() => {\n//     const k = reverseOrder.value ? -1 : 1;\n//     if (sort.value) {\n//         if (orderBy.value === \"name\") {\n//             return (pre, cur) => compare(pre.name, cur.name) * k;\n//         } else if (orderBy.value === \"size\") {\n//             return (pre, cur) => (pre.size - cur.size) * k;\n//         } else if (orderBy.value === \"mtime\") {\n//             return (pre, cur) => (pre.mtime - cur.mtime) * k;\n//         }\n//     }\n//     return (pre, cur) => 0;\n// });\n\nexport function comparator(pre, cur) {\n    const k = reverseOrder.value ? -1 : 1;\n    if (sort.value) {\n        if (orderBy.value === \"name\") {\n            return compare(pre.name, cur.name) * k;\n        } else if (orderBy.value === \"size\") {\n            return (pre.size - cur.size) * k;\n        } else if (orderBy.value === \"time\") {\n            const timeName = selectedTime.value;\n            return (pre[timeName] - cur[timeName]) * k;\n        }\n    }\n    return 0;\n}\n\n// grouped by type\nexport const entries = computed(() => {\n    return [\n        ...openedFolder.value.folders.sort(comparator),\n        ...openedFolder.value.files.sort(comparator),\n        ...openedFolder.value.symlinks.sort(comparator),\n        ...openedFolder.value.fifos.sort(comparator),\n        ...openedFolder.value.charDevs.sort(comparator),\n        ...openedFolder.value.blockDevs.sort(comparator),\n        ...openedFolder.value.sockets.sort(comparator),\n    ];\n});\n\n\n/** @type {import(\"vue\").Ref<Number>} */\nexport const limit = ref(50);\n\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const list = computed(() => {\n    if (search.value.length) {\n        return searchResult.value;\n    }\n    return entries.value;\n});\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const listLimited = computed(() => {\n    return list.value.slice(0, limit.value);\n});\n/** @type {import(\"vue\").ComputedRef<Number>} */\nexport const count = computed(() => {\n    if (searchResult.value.length > limit.value) {\n        return searchResult.value.length;\n    }\n    return list.value.length;\n});\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nexport const hoveredEntry = ref(null);\n","import {ref, toRaw, isProxy} from \"vue\";\nimport {bytesToSizeWinLike, dateToDayDateTimeString} from \"../util.js\";\n\nexport const debugMessage = ref(\"\");\nexport function addMessage(message) {\n    debugMessage.value = message;\n}\nexport function appendMessage(message) {\n    debugMessage.value += message;\n}\n\n/**\n * @param {SimpleEntry} entry\n */\nexport function debugMessageFromEntry(entry) {\n    console.log(isProxy(entry) ? \"Proxy:\" : \"Raw:\", toRaw(entry));\n    if (entry.hasErrors) {\n        debugMessage.value = \"\";\n    } else {\n        const name = `\"` + entry.name.slice(0, 20) + (entry.name.length < 20 ? \"\" : \"...\") + `\"`;\n\n        let messages = [];\n        if (entry.mtime !== undefined) {\n            messages.push(\"mtime \" + `\"${dateToDayDateTimeString(entry.mtime, false)}\"`);\n        }\n        if (entry.btime !== undefined) {\n            messages.push(\"btime \" + `\"${dateToDayDateTimeString(entry.btime, false)}\"`);\n        }\n        messages = [...messages, name, `${entry.size} (${bytesToSizeWinLike(entry.size)})`];\n        debugMessage.value = messages.join(\" — \");\n    }\n}\n","/** @type {ScanEntryType[]} */\nimport {sleep} from \"../util.js\";\n\nexport const entryTypes = [\"folder\", \"file\", \"symlink\", \"fifo\", \"charDev\", \"blockDev\", \"socket\"];\n\nexport class SimpleEntry {\n    // [Symbol.toStringTag] = \"SimpleEntry\"; // Disables reactivity, BTW.\n    /**\n     * @param {SerializableScanEntry} entry\n     * @param {SimpleEntry|null} parent\n     * @param {Map<Number, SimpleScanError>} [errorsIDMap]\n     */\n    constructor(entry, parent, errorsIDMap) {\n        /** @type {String} */\n        this.name = entry.name;\n        /** @type {SimpleEntry|null} */\n        this.parent = parent;\n        /** @type {ScanEntryType} */\n        this.type = entry.type;\n\n        if (entry.size) {\n            /** @type {Number|undefined} */\n            this._size = entry.size;\n        }\n        if (entry.mtime) {\n            /** @type {Number|undefined} */\n            this._mtime = entry.mtime;\n        }\n        if (entry.btime) {\n            /** @type {Number|undefined} */\n            this.btime = entry.btime;\n        }\n\n        if (entry.errors) {\n            /** @type {SimpleScanError[]}|undefined} */\n            this.errors = entry.errors.map(id => errorsIDMap.get(id));\n        }\n\n        if (entry.pathTo) {\n            /** @type {String|undefined} */\n            this.pathTo = entry.pathTo;\n        }\n        if (entry.content) {\n            /** @type {String|undefined} */\n            this.content = entry.content;\n        }\n\n        parent?.addChild(this);\n    }\n    /** @param {SimpleEntry} entry */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {SimpleEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n    /** @param {SimpleEntry[]} entries\n     *  @param {Number} total */\n    addHardlinks(entries, total) {\n        /** @type {SimpleEntry[]|undefined} */\n        this.hardlinks = entries;\n        /** @type {Number|undefined} */\n        this.hardlinksTotal = total;\n    }\n\n    /** @param {ScanMeta|Object} meta */\n    addMeta(meta) {\n        /** @type {ScanMeta|Object|undefined} */\n        this.meta = meta;\n    }\n\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent && size) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n    /** @return {Number|undefined} */\n    get mtime() {\n        if (this._mtime !== undefined) {\n            return this._mtime;\n        }\n        if (this.type === \"folder\" && this.children) { // Note: it's recursive // todo: an optional deep limit\n            let time = Number.MIN_SAFE_INTEGER;\n            for (const child of this.children) {\n                if (child.mtime > time) { // `child.mtime !== undefined` is not necessary\n                    time = child.mtime;\n                }\n            }\n            if (time !== Number.MIN_SAFE_INTEGER) {\n                return time;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this._size || 0;\n    }\n\n    /** @return {SimpleEntry[]} */\n    get folders() {\n        return this.children?.filter(e => e.type === \"folder\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get files() {\n        return this.children?.filter(e => e.type === \"file\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get symlinks() {\n        return this.children?.filter(e => e.type === \"symlink\") || [];\n    }\n\n    /** @return {SimpleEntry[]} */\n    get fifos() {\n        return this.children?.filter(e => e.type === \"fifo\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get charDevs() {\n        return this.children?.filter(e => e.type === \"charDev\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get blockDevs() {\n        return this.children?.filter(e => e.type === \"blockDev\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get sockets() {\n        return this.children?.filter(e => e.type === \"socket\") || [];\n    }\n\n    /** @return {Boolean} */\n    get isEmpty() {\n        return !Boolean(this.children?.length);\n    }\n    /** @return {Boolean} */\n    get hasErrors() {\n        return Boolean(this.errors?.length);\n    }\n    /** @return {SimpleEntry} */\n    get root() {\n        if (!this.parent) {\n            return this;\n        }\n        return this.parent.root;\n    }\n    /** @return {SimpleEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n\n    get contentTypesStats() {\n        return this.getContentTypesStats();\n    }\n    _getContentTypesStats(deep = true, result = {}, target = this) {\n        if (target.type === \"folder\" && target.children) {\n            for (const child of target.children) {\n                if (!result[child.type]) {\n                    result[child.type] = 1;\n                } else {\n                    result[child.type]++;\n                }\n                if (child.type === \"folder\" && deep) {\n                    this._getContentTypesStats(deep, result, child);\n                }\n            }\n            return result;\n        }\n    }\n    getContentTypesStats(deep = true) {\n        console.time(\"getContentTypesStats\");\n        const result = this._getContentTypesStats(deep);\n        console.timeEnd(\"getContentTypesStats\");\n        return result;\n    }\n\n    /** @return {Generator<SimpleEntry>} */\n    *[Symbol.iterator]() {\n        yield this;\n        if (this.children) {\n            for (const child of this.children) {\n                yield * child;\n            }\n        }\n    }\n\n    /** @return {SimpleEntry[]} */\n    flat() {\n        return [...this];\n    }\n\n    /**\n     * @param {SimpleEntry[]} entries\n     * @return {SimpleEntry[]}\n     */\n    static flat(entries) {\n        return entries.map(e => [...e]).flat();\n    }\n\n    get pathString() {\n        return this.getPathString();\n    }\n\n    /**\n     * @param {ScanMeta|null} [meta]\n     * @return {string}\n     */\n    getPathString(meta) {\n        const names = this.path.map(e => e.name);\n        let pathStr;\n        if (meta?.path) {\n            pathStr = [...meta.path, ...names].join(meta.separator || \"/\");\n        } else {\n            pathStr = names.join(\"/\");\n        }\n        if (pathStr.startsWith(\"//\")) {\n            return pathStr.slice(1);\n        }\n        return pathStr;\n    }\n}\n\n/**\n * Like `ScanError`, but without `path`.\n * @typedef {Object} SimpleScanError\n * @property {String} code\n * @property {String} syscall\n * @property {Number} errno\n **/\n\nexport class EntryStreamParser {\n    constructor() {\n        this.rootId = 0;\n        /** @type {Map<Number, SimpleEntry>} */\n        this.map = new Map();\n        /** @type {Map<String, SimpleEntry[]>} */\n        this.hidMap = new Map();\n    }\n\n    /** @param {ScanMeta} meta */\n    setMeta(meta) {\n        /** @type {ScanMeta} */\n        this.meta = meta;\n        /** @type {Object<String, Number>} */\n        const errorsMap = meta.errorsMap;\n        if (!errorsMap) {\n            return;\n        }\n        /** @type {Map<Number, SimpleScanError>|undefined} */\n        this.errorsIDMap = new Map(Object.entries(errorsMap)\n            .map(([k, v]) => {\n                const [code, syscall, errno] = k.split(\":\");\n                return [v, {code, syscall, errno: Number(errno)}];\n            }));\n    }\n\n    /** @param {SerializableScanEntry[]} sEntriesPart\n     * @return {{root: SimpleEntry, rootUpdated: boolean, processed: number}}\n     */\n    parse(sEntriesPart) {\n        let rootUpdated = false;\n        for (const entry of sEntriesPart) {\n            /** @type {SimpleEntry|null}*/\n            const parent = this.map.get(entry.pid) ?? null;\n            const simpleEntry = new SimpleEntry(entry, parent, this.errorsIDMap);\n            if (entry.type === \"folder\") {\n                this.map.set(entry.id, simpleEntry);\n            }\n            if (entry.hid) {\n                const array = this.hidMap.get(entry.hid) || [];\n                this.hidMap.set(entry.hid, [...array, simpleEntry]);\n            }\n            if (entry.pid === this.rootId) {\n                rootUpdated = true;\n            }\n        }\n        return {\n            root: this.map.get(this.rootId),\n            rootUpdated,\n            processed: sEntriesPart.length,\n        }\n    }\n\n    processHIDMapAsync() {\n        if (!this.hidMap.size) {\n            return;\n        }\n        console.log(\"[hidMap]:\", this.hidMap);\n        console.time(\"hidMap\");\n        processHIDMapAsync(this.hidMap)\n            .then(() => console.timeEnd(\"hidMap\"));\n    }\n}\n\nasync function processHIDMapAsync(hidMap) {\n    let i = 0;\n    let time = 0; // `0` to do `sleep` on the first iteration\n\n    for (const [hid, simpleEntries] of hidMap.entries()) {\n        if (!(i++ % 1000)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n            }\n        }\n\n        /** @type {Number}*/\n        const totalLinks = Number(hid.split(\":\")[1]);\n        simpleEntries.forEach(e => {\n            e.addHardlinks(simpleEntries, totalLinks);\n        });\n    }\n}\n\n/** @type {SimpleEntry} */\nexport const folderDummy = new SimpleEntry({\n    type: \"folder\",\n    name: \"\",\n    pid: null,\n}, null);\n\n\nexport class SimpleBucketEntry extends SimpleEntry{\n    constructor({name} = {name: \"\"}) {\n        super({\n            name,\n            type: \"folder\",\n            pid: null\n        }, null);\n        this.addMeta({\n            // path: [\"\"]\n        })\n    }\n}\n","import {ref} from \"vue\";\n\nexport const scanParsing         = ref(false);\nexport const scanParsingProgress = ref(0);\nexport const searching           = ref(false);\nexport const searchAwaiting      = ref(false);\n","const scriptRel = 'modulepreload';const seen = {};const base = './';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', rej);\n            });\n        }\n    })).then(() => baseModule());\n}","import {SimpleEntry} from \"./entry.js\";\nimport {openFolder} from \"./folders.js\";\nimport {addMessage} from \"./debug.js\";\nimport {dateToDayDateTimeString} from \"../util.js\";\n\n// Some special\nexport async function handleMegaUrl(url) {\n    addMessage(url);\n\n    globalThis.Mega = await import(\"https://alttiri.github.io/meganz-api/meganz-api.standalone.es.js\");\n    // globalThis.Mega.MegaApi.encryptedName = true;\n\n    let node;\n    try {\n        node = await globalThis.Mega.node(url);\n    } catch (e) {\n        addMessage(e);\n        return;\n    }\n    node = node.root;\n    console.log(node);\n\n    /** @type {SimpleEntry} */\n    let result = parseMegaNode(node);\n    result._url = url;\n    console.log(result);\n\n    const special = {\n        url,\n        id: result._id,\n        ownerId: result._ownerId,\n        btime: result.btime && dateToDayDateTimeString(result.btime),\n        mtime: result.mtime && dateToDayDateTimeString(result.mtime),\n    };\n\n    if (result.type !== \"folder\") { // if it's a share of 1 file\n        const emptyRootFolder = new SimpleEntry({\n            type: \"folder\",\n            name: \"\",\n            pid: null\n        }, null);\n        emptyRootFolder.addChild(result);\n        result = emptyRootFolder;\n    }\n\n    result.root.addMeta({\n        special\n    });\n    openFolder(result);\n}\n\n/** @return {SerializableScanEntry} */\nfunction nodeToSEntry(node) {\n    return {\n        /**@type {string} */\n        name: node.name === null ? \"[encrypted]\" : node.name,\n        /**@type {number} */\n        size: node.size,\n        /**@type {number} */\n        btime: node.creationDate * 1000,\n        /**@type {number} */\n        mtime: node.modificationDate * 1000,\n        /**@type {String} */\n        id: node.id,\n        /**@type {ScanEntryType} */\n        type: (node.type === \"rootFolder\" || node.type === \"folder\") ? \"folder\" : \"file\",\n        /**@type {String} */\n        pid: node.parentId,\n    };\n}\n\nfunction toSEntry(megaNode, parent) {\n    /** @type {SerializableScanEntry}   */\n    const ssEntry = nodeToSEntry(megaNode);\n    const sEntry = new SimpleEntry(ssEntry, parent);\n    sEntry._id = megaNode.id;\n    sEntry._ownerId = megaNode.ownerId;\n    return sEntry;\n}\n\nfunction parseMegaNode(megaNode, parent = null) {\n    const sEntry = toSEntry(megaNode, parent);\n    if (sEntry.type === \"folder\") {\n        for (const mNode of [...megaNode.folders, ...megaNode.files]) {\n            parseMegaNode(mNode, sEntry);\n        }\n    }\n    return sEntry;\n}\n","import {isReactive, ref, shallowRef, toRaw, watch, watchEffect, triggerRef} from \"vue\";\nimport {blue, bytesToSizeWinLike, debounce, sleep} from \"../util.js\";\nimport {openedFolder} from \"./folders.js\";\nimport {comparator, limit, orderBy, reverseOrder, selectedTime} from \"./entries.js\";\nimport * as debug from \"./debug.js\";\nimport {entryTypes} from \"./entry.js\";\nimport {scanParsing, searchAwaiting, searching} from \"./state.js\";\nimport {handleMegaUrl} from \"./mega-nz.js\";\n\n/** @type {import(\"vue\").Ref<string>} */\nexport const search = ref(\"\"); // [v-model]\nexport function clearSearch() {\n    search.value = \"\";\n}\n\n/** @type {import(\"vue\").ShallowRef<SimpleEntry[]>} */\nexport const searchResult = shallowRef([]);\nfunction clearSearchResult() {\n    setSearchResult([]);\n}\n/** * @param {SimpleEntry[]} result */\nfunction setSearchResult(result) {\n    /** @type {SimpleEntry[]} */\n    const rawResult = toRaw(result);\n    searchResult.value = rawResult;\n    limit.value = 50;\n\n    addSearchResultToGlobalThis(rawResult);\n}\n\nwatch([orderBy, reverseOrder, selectedTime], () => {\n    sortSearch();\n});\n\nexport function sortSearch() {\n    //todo sort by parts\n    const time = Date.now();\n    searchResult.value.sort(comparator);\n    const timeTotal = Date.now() - time;\n    console.log(\"[search][sort][time]\", timeTotal, \"ms\");\n    triggerRef(searchResult);\n    return timeTotal;\n}\n\n/** @param {SimpleEntry[]} rawResult */\nfunction addSearchResultToGlobalThis(rawResult) {\n    /** @type {SimpleEntry[]} */\n    globalThis.search = rawResult;\n    console.log(\"globalThis.search:\", rawResult);\n    Object.defineProperty(globalThis.search, \"download\", {\n        get() {\n            console.log(\"download\"); // todo\n        }\n    });\n    Object.defineProperty(globalThis.search, \"names\", {\n        get() {\n            return globalThis.search.map(entry => entry.name);\n        }\n    });\n    Object.defineProperty(globalThis.search, \"namelist\", {\n        get() {\n            return globalThis.search.map(entry => entry.name).join(\"\\n\");\n        }\n    });\n}\n\nlet resolve = () => {};\nlet scanParsingCompleted = Promise.resolve(true);\nwatchEffect(() => {\n    if (scanParsing.value) {\n        resolve(false);\n        scanParsingCompleted = new Promise(r => resolve = r);\n    } else {\n        resolve(true);\n    }\n});\n\nfunction simplify(input) {\n    // todo .normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n    //  (It required to use a cache since it's a slow operation, and\n    //   only for the normalized values (not just lower cased) in order to save the memory consuming.)\n    // \"đ Crème Bruląśćńżółźćęéйeё\".normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n    return input\n        .toLowerCase();\n}\n\nwindow.addEventListener(\"storage\", event => {\n    if (event.key !== \"search-sync\") {\n        return;\n    }\n    document.querySelector(\"input\").value = event.newValue;\n    document.querySelector(\"input\").dispatchEvent(new Event(\"input\"));\n});\n\n//todo check linked list perf for large search\nconst performSearchDebounced = debounce(performSearch, 300);\nasync function performSearch() {\n    const searchSync = new URL(location.href).searchParams.get(\"searchSync\");\n    if (searchSync) {\n        localStorage.setItem(\"search-sync\", search.value);\n        document.title = `Search...`;\n    }\n\n    // Await while the scan parsing is completed, return `false` if there is a new `performSearch` call while parsing.\n    if (false === await scanParsingCompleted) {\n        return;\n    }\n\n    const folder = openedFolder.value;\n    const request = search.value;\n\n    // Do unProxy. Up to x40 in comparison with default reactive ref.\n    const folderRaw = isReactive(folder) ? toRaw(folder) : folder;\n\n    const time1 = performance.now();\n    searching.value = true;\n    const {result, search: searchText} = await searcher(folderRaw, request);\n    searching.value = false;\n    searchAwaiting.value = false;\n    if (!result) {\n        return;\n    }\n    const searchTime = performance.now() - time1;\n    debug.addMessage(`Search time: ${searchTime.toFixed(2)} ms; `);\n    await sleep();\n\n    setSearchResult(result);\n    const sortTime = sortSearch();\n    debug.appendMessage(`Sort time: ${sortTime.toFixed(2)} ms; `);\n    await sleep();\n\n    console.time(\"search result size computing\");\n    const resultSet = new Set(result);\n    const allSize = result.reduce((acc, val) => computeEntrySize(val, resultSet) + acc, 0);\n    const filesSize = result.filter(entry => entry.type !== \"folder\").reduce((acc, val) => val.size + acc, 0);\n    console.timeEnd(\"search result size computing\");\n    console.log({allSize, filesSize});\n\n    debug.appendMessage(`${result.length} items; size: ${bytesToSizeWinLike(filesSize)} (${bytesToSizeWinLike(allSize)});  search: ${searchText}`);\n\n    if (searchSync) {\n        document.title = `[${result.length}] found`;\n    }\n}\n\n\n/**\n * The recursive size computing of an `SimpleEntry`.\n * Skips the entries of `excludeSet`.\n * @param {SimpleEntry} entry\n * @param {Set<SimpleEntry>} excludeSet\n * @return {Number}\n */\nfunction computeEntrySize(entry, excludeSet) {\n    if (entry.type !== \"folder\") {\n        return entry.size;\n    }\n    let childrenSize = 0;\n    for (const child of entry.children || []) {\n        if (excludeSet.has(child)) {\n            continue;\n        }\n        if (child.type === \"folder\") {\n            childrenSize += computeEntrySize(child, excludeSet);\n        } else {\n            childrenSize += child.size;\n        }\n    }\n    return childrenSize;\n}\n\n/**\n * @param {SimpleEntry} folder\n * @param {string} search\n * @return {Promise<{result: SimpleEntry[], search: string}>}\n */\nasync function searcher(folder, search) {\n    console.log(\"[search]      \", search);\n\n    let strict;\n    if (search.startsWith(\"//\")) {\n        strict = true;\n        search = search.slice(2);\n    } else {\n        strict = false;\n        const normalized = simplify(search);\n        if (normalized !== search) {\n            console.log(\"[search][norm]\", normalized);\n            search = normalized;\n        }\n    }\n\n    let searchHelp = null;\n\n    /** @type {\"includes\"|\"startsWith\"|\"endsWith\"|\"===\"} */\n    let subStringMatcher = \"includes\";\n\n    // Simplified glob search.\n    // For \"startsWith\", \"endsWith\" and \"full match\" search.\n    // /*/*.html     - ends with \".html\"\n    // ///*/*.html   - ends with \".html\" case sensitive\n    // /*/.*         - starts with \".\"\n    // /8/.*         - starts with \".\" (the same, just to no need to use Shift key)\n    // /*/index.html - matches \"index.html\"\n    const isSimpleGlobSearch = search.startsWith(\"/*/\") || search.startsWith(\"/8/\");\n    if (isSimpleGlobSearch) {\n        const subSearch = search.slice(\"/*/\".length);\n        const starts = subSearch.startsWith(\"*\");\n        const ends = subSearch.endsWith(\"*\");\n\n        if (starts && ends) {\n            subStringMatcher = \"includes\";\n            search = subSearch.slice(1, -1);\n            searchHelp = `includes \"${search}\"`;\n        } else\n        if (starts) {\n            subStringMatcher = \"endsWith\";\n            search = subSearch.slice(1);\n            searchHelp = `ends with \"${search}\"`;\n        } else\n        if (ends) {\n            subStringMatcher = \"startsWith\";\n            search = subSearch.slice(0, -1);\n            searchHelp = `starts with \"${search}\"`;\n        } else {\n            subStringMatcher = \"===\";\n            search = subSearch;\n            searchHelp = `matches \"${search}\"`;\n        }\n    }\n\n    /** @type {function(String, String): Boolean} */\n    let stringMatcher;\n    if (strict) {\n        if (subStringMatcher === \"===\") {\n            stringMatcher = (string, substring) => string === substring;\n        } else {\n            stringMatcher = (string, substring) => string[subStringMatcher](substring);\n        }\n    } else {\n        if (subStringMatcher === \"===\") {\n            stringMatcher = (string, substring) => simplify(string) === substring;\n        } else {\n            stringMatcher = (string, substring) => simplify(string)[subStringMatcher](substring);\n        }\n    }\n\n    function justSearch(substring) {\n        return findAll(folder, (entry) => {\n            return stringMatcher(entry.name, substring);\n        });\n    }\n\n    if ([\"https://\", \"http://\"].some(prefix => search.startsWith(prefix))) {\n        const url = new URL(search);\n\n        if (url.hostname === \"www.youtube.com\" && url.pathname === \"/watch\") {\n            search = url.searchParams.get(\"v\");\n        } else {\n            const pathnameEndsWithSlash = url.pathname.length > 1 && url.pathname.endsWith(\"/\");\n            const pathname = pathnameEndsWithSlash ? url.pathname.slice(0, -1) : url.pathname;\n            const resourceFullName = pathname.match(/[^\\/]+$/)?.[0];\n            if (!resourceFullName) {\n                return {result: [], search};\n            }\n            const {\n                name: resName,\n                ext: resExt, // [note] it can be not the file extension, but a part of a nickname (inst url, for example)\n            } = resourceFullName.match(/(?<name>.+)(\\.(?<ext>.+))$/)?.groups || {name: resourceFullName};\n            search = resName + ((pathnameEndsWithSlash && resExt) ? `.${resExt}` : \"\");\n        }\n\n        const result = await justSearch(search);\n        return {result, search};\n    }\n\n\n    /**\n     * @example\n     * /size:0       - find 0 byte size entries\n     * /size/120     - the same, find 120 bytes size entries\n     * /size:120+80  - find from 120 to 200\n     * /size:120+-20 - find from 100 to 120\n     * /size:120~20  - find from  80 to 140\n     * /size:120-220 - find from 120 to 220\n     * /size:220-120 - find from 120 to 220\n     * /size:^2      - size.toString() starts with \"2\"\n     * /size:%2      - size.toString() includes    \"2\"\n     * /size:$0      - size.toString() ends with   \"0\"\n     * /s/0          - find 0 byte size entries, just a short form\n     * /s/120 900    - find 120900 bytes size entries\n     * /s/120,900    - find 120900 bytes size entries\n     *\n     * /size:120~    - find from 120 -5% to 120 +5%\n     * /size:120~~   - find from 120-10% to 120+10%\n     * /size:120~~~  - find from 120-15% to 120+15%\n     *\n     * /sizek:5      - find 5 KB ± 0.1 KB\n     * /sizek:50     - find 50 KB  ± 1 KB\n     * /sizek:500    - find 500 KB ± 1 KB\n     * /sizem:5      - find 5 MB ± 0.1 MB\n     * /sizeg/50     - find 50 GB ± 1 GB\n     *\n     * /size:5m      - find 5 MB ± 0.1 MB\n     *\n     * /s/12.9       - find 12 bytes size entries\n     * /sk/12.9      - find 12.9 KB ± 1 KB\n     *\n     * /sizek:5!     - find 5 KB + (0 - 0.01) KB\n     * /sizek:5!!    - find 5 KB + (0 - 0.001) KB\n     * /s/5k!!       - find 5 KB + (0 - 0.001) KB\n     * /sizem:50!    - find 50 MB + (0 - 0.1) MB\n     * /sizem:50!!   - find 50 MB + (0 - 0.01) MB\n     */\n    const r1 = `\\\\/s(ize)?(?<defaultPrefix>b|k|m|g|t)?[:\\\\/]`;\n    if (search.match(new RegExp(r1))) {\n        const r2   = `(?<extra1>(?<caret>\\\\^)|(?<dollar>\\\\$)|(?<percent>%))?`;\n        const r3   = `((?<sizeString1>\\\\s*\\\\d[\\\\d\\\\s\\\\,]*)((?<dotDecimal1>\\\\.(?<decimal1>\\\\d+)?))?(?<prefix1>b|k|m|g|t)?(?<exclamations>!+)?)`;\n\n        const r4_1 = `(?<extra2>(?<plus>\\\\+)|(?<minus>\\\\-)|(?<tildes>\\\\~+))`;\n        const r4_2 = `((?<sizeString2>\\\\s*-?\\\\s*\\\\d[\\\\d\\\\s\\\\,]*)((?<dotDecimal2>\\\\.(?<decimal2>\\\\d+)?))?(?<prefix2>b|k|m|g|t)?)?`;\n        const r4   = `(?<range>${r4_1}${r4_2})?`;\n\n        const regex = new RegExp(r1 + r2 + r3 + r4);\n\n        const {\n            /** @type {\"b\"|\"k\"|\"m\"|\"g\"|\"t\"|undefined} */\n            defaultPrefix,\n\n            /** @type {String|undefined} */\n            caret,\n            /** @type {String|undefined} */\n            dollar,\n            /** @type {String|undefined} */\n            percent,\n\n            /** @type {String|undefined} */\n            sizeString1,\n            /** @type {String|undefined} */\n            decimal1,\n            /** @type {String|undefined} */\n            prefix1,\n            /** @type {String|undefined} */\n            exclamations,\n\n            /** @type {String|undefined} */\n            plus,\n            /** @type {String|undefined} */\n            minus,\n            /** @type {String|undefined} */\n            tildes,\n\n            /** @type {String|undefined} */\n            sizeString2,\n            /** @type {String|undefined} */\n            decimal2,\n            /** @type {String|undefined} */\n            prefix2,\n\n        } = search.match(regex)?.groups || {};\n\n        if (sizeString1) {\n            console.log({\n                defaultPrefix,\n                extra1: {caret, dollar, percent},\n                sizeString1, decimal1, prefix1, exclamations,\n                extra2: {plus, minus, tildes, sizeString2, decimal2, prefix2},\n            });\n\n            let text;\n            let result;\n\n            let sizeNum = Number(sizeString1.replaceAll(/[\\s,]/g, \"\"));\n            const size = sizeNum.toString();\n\n            let size2Num = sizeString2 && Number(sizeString2.replaceAll(/[\\s,]/g, \"\"));\n            const size2 = size2Num?.toString();\n\n\n            const dec1 = decimal1 ? Number(\"0.\" + decimal1) : 0;\n            const dec2 = decimal2 ? Number(\"0.\" + decimal2) : 0;\n            sizeNum  = multiplyByPrefix(sizeNum  + dec1, prefix1 || defaultPrefix);\n            size2Num = multiplyByPrefix(size2Num + dec2, prefix2 || defaultPrefix);\n\n\n            /**\n             * @param {Number} a\n             * @param {Number} b\n             * @return {Promise<void>}\n             */\n            async function rangeSearch(a, b) {\n                const {_min, max} = a < b ? {_min: a, max: b} : {_min: b, max: a};\n                const min = Math.max(0, _min);\n                text = `Size search from ${bytesToSizeWinLike(min)} to ${bytesToSizeWinLike(max)}`;\n                result = await findAll(folder, entry => {\n                    return entry.size >= min && entry.size <= max;\n                });\n            }\n            function multiplyByPrefix(value, prefix = \"b\") {\n                if (value === undefined) {\n                    return;\n                }\n                const prefixes = [\"b\", \"k\", \"m\", \"g\", \"t\"];\n                return Math.trunc(value * (1024 ** prefixes.indexOf(prefix)));\n            }\n\n\n            if (caret) { // ^\n                text = `Size search starts with \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().startsWith(size);\n                });\n            } else\n            if (dollar) { // $\n                text = `Size search ends with \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().endsWith(size);\n                });\n            } else\n            if (percent) { // %\n                text = `Size search includes \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().includes(size);\n                });\n            } else\n            if (plus && size2) { // +\n                await rangeSearch(sizeNum, sizeNum + size2Num);\n            } else\n            if (minus && size2) { // -\n                await rangeSearch(sizeNum, size2Num);\n            } else\n            if (tildes) {  // ~ // ~~ // ~~~\n                if (size2) {\n                    await rangeSearch(sizeNum - size2Num, sizeNum + size2Num);\n                } else {\n                    const count = tildes.length;\n                    const diff = Math.trunc(sizeNum * 5 * count / 100);\n                    await rangeSearch(sizeNum - diff, sizeNum + diff);\n                }\n            } else { // Default\n                const prefix = prefix1 || defaultPrefix;\n                if (prefix && prefix !== \"b\") {\n\n                    let orders = size.length;\n                    let diff = multiplyByPrefix(1, prefix);\n                    if (orders === 1) {\n                        diff = Math.trunc(diff / 10);\n                    }\n\n                    let from = sizeNum - diff;\n                    let to   = sizeNum + diff;\n                    if (exclamations) {\n                        from = sizeNum;\n                        if (exclamations.length > 1) {\n                            to = sizeNum + Math.trunc(diff / 10);\n                        }\n                    }\n                    await rangeSearch(from, to);\n                } else {\n                    text = `Size search ${bytesToSizeWinLike(sizeNum)}`;\n                    result = await findAll(folder, entry => {\n                        return entry.size === sizeNum;\n                    });\n                }\n            }\n            console.log(...blue(text));\n            return {result, search: text};\n        } else {\n            const text = \"No size to search\";\n            console.log(...blue(text));\n            return {result: [], search: text};\n        }\n    }\n    if (search.startsWith(\"/\")) {\n        const {type, word} = search.match(/\\/type:(?<type>[^\\/]+)\\/?(?<word>[^\\/]*)/)?.groups || {};\n        if (type) {\n            console.log({type, word});\n            if (entryTypes.includes(type)) {\n                const result = await findAll(folder, entry => {\n                    return entry.type === type && stringMatcher(entry.name, word);\n                });\n                return {result, search};\n            }\n        }\n    } else\n    if (search.includes(\" \")) {\n        const parts = search.split(\" \").filter(o => o);\n        if (parts.length > 1) {\n            let result = await justSearch(parts.shift());\n            let curWord;\n            while (curWord = parts.shift()) {\n                result = result.filter(entry => stringMatcher(entry.name, curWord));\n            }\n            return {result, search};\n        }\n    }\n    return {result: await justSearch(search), search: (searchHelp || search)};\n}\n\nwatch(search, async (newValue, oldValue) => {\n    const isEmptyString = !newValue;\n    if (isEmptyString) {\n        clearSearchResult();\n        return;\n    }\n    searchAwaiting.value = true;\n\n    // In order to \"no debounce by paste event\"\n    if (newValue.length - oldValue.length > 1) {\n        if (newValue.startsWith(\"https://mega.nz/\")) {\n            await handleMegaUrl(newValue);\n            return;\n        }\n        await performSearch();\n    } else {\n        await performSearchDebounced();\n    }\n});\n\n/**\n * @param {SimpleEntry} folder\n * @param {function(SimpleEntry)} predicate\n * @return {Promise<SimpleEntry[]>}\n */\nasync function findAll(folder, predicate) {\n    let res = [];\n    let time = Date.now();\n    for (const entries of listAllEntries(folder)) {\n        const curTime = Date.now();\n        if (curTime - time > 15) {\n            time = curTime;\n            await sleep();\n        }\n        for (const entry of entries) {\n            if (predicate(entry)) {\n                res.push(entry);\n            }\n        }\n    }\n    return res;\n}\n\n/**\n * List all entries by parts.\n * @param {SimpleEntry} folder\n * @return {Generator<SimpleEntry[]>}\n */\nfunction *listAllEntries(folder) {\n    const partSize = 1000;\n    /** @type {SimpleEntry[]} */\n    let list = [];\n    /** @param {SimpleEntry} folderEntry */\n    function *takePart(folderEntry) {\n        for (const entry of (folderEntry.children || [])) {\n            if (entry.type === \"folder\") {\n                yield *takePart(entry);\n            }\n            list.push(entry);\n            if (list.length === partSize) {\n                yield list;\n                list = [];\n            }\n        }\n    }\n    yield *takePart(folder);\n    yield list;\n}\n","import {EntryStreamParser} from \"./entry.js\";\nimport {appendScript, iterateAsyncDataSource, sleep} from \"../util.js\";\n\n\n/**\n * @param {Blob|Response} input\n * @return {AsyncGenerator<{meta:ScanMeta, root: SimpleEntry, rootUpdated: boolean, processed: number}>}\n */\nexport async function *parseScan(input) {\n    const parser = new EntryStreamParser();\n\n    let contentType;\n    if (input instanceof Response) {\n        contentType = input.headers.get(\"content-type\");\n    } else if (input instanceof Blob) {\n        contentType = input.type;\n    }\n    /** @type {ScanMeta} */\n    let meta;\n    if (isGZip(contentType)) {\n        console.log(\"parseGZippedJSONScan\");\n        for await (const obj of parseGZippedJSONScan(input)) {\n            if (!meta) {\n                meta = /** @type {ScanMeta} */ obj.shift();\n                parser.setMeta(meta);\n            }\n            yield {meta, ...parser.parse(/** @type {SerializableScanEntry[]} */ obj)};\n        }\n    } else if (isJSON(contentType)) {\n        console.log(\"streamParseJSONScan\");\n        for await (const array of streamParseJSONScan(input)) {\n            if (!meta) {\n                meta = /** @type {ScanMeta} */ array.shift();\n                parser.setMeta(meta);\n            }\n            yield {meta, ...parser.parse(/** @type {SerializableScanEntry[]} */ array)};\n        }\n    }\n    parser.processHIDMapAsync();\n}\n\n\n/**\n * @param {Response|ReadableStream|Blob} input\n * @return {AsyncGenerator<FlatScanResultEntry[]>}\n */\nasync function *streamParseJSONScan(input) {\n    const decoder = new TextDecoder();\n    const textParser = new TextParser();\n    let i = 0, time = 0;\n    for await (const uint8Array of iterateAsyncDataSource(input)) {\n        if (!(i++ % 10)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n                // console.log(\"sleep\", i);\n            }\n        }\n        const textPart = decoder.decode(uint8Array, {stream: true});\n        const scanResultEntries = textParser.parsePart(textPart);\n        if (scanResultEntries.length) {\n            yield scanResultEntries;\n        }\n    }\n}\n\n/**\n * @param {Response|Blob} input\n * @return {AsyncGenerator<FlatScanResultEntry[]>}\n */\nasync function *parseGZippedJSONScan(input) {\n    const decoder = new TextDecoder();\n    const textParser = new TextParser();\n    let i = 0, time = 0;\n    for await (const uint8Array of unGZipAsyncIterator(input)) {\n        if (!(i++ % 20)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n                // console.log(\"sleep\", i);\n            }\n        }\n        const textPart = decoder.decode(uint8Array, {stream: true});\n        const scanResultEntries = textParser.parsePart(textPart);\n        if (scanResultEntries.length) {\n            yield scanResultEntries;\n        }\n    }\n}\n\n/**\n * @param {Response|ReadableStream|Blob} input\n * @return {Generator<Uint8Array>}\n */\nasync function *unGZipAsyncIterator(input) {\n    if (!isPakoLoaded()) {\n        await loadPako();\n    }\n    let chunks = [];\n    const inflator = new pako.Inflate();\n    pako.Inflate.prototype.onData = function (chunk) {\n        chunks.push(chunk);\n    };\n    for await (const u8Array of iterateAsyncDataSource(input)) {\n        inflator.push(u8Array);\n        for (const chunk of chunks) {\n            yield chunk;\n        }\n        chunks = [];\n    }\n    yield inflator.result;\n    if (inflator.err) {\n        console.error(inflator.msg);\n    }\n}\n\n\nexport class TextParser {\n    buffer = \"\";\n    startHandled = false;\n    metaLines = [];\n    objects = [];\n\n    trimComma(text) {\n        return text.endsWith(\",\") ? text.slice(0, -1) : text;\n    }\n\n    handleStart(line) {\n        if (line === \"[\") { // the first line\n            return;\n        }\n        if (line === \"\") { // meta is separated from the main content by \"\\n\"\n            this.objects.push(this.metaLines.join(\"\"));\n            this.startHandled = true;\n            return;\n        }\n        this.metaLines.push(line);\n    }\n\n    /**\n     * @param {String} line\n     * @param isLastLine\n     */\n    handleLine(line, isLastLine) {\n        if (isLastLine) {\n            this.buffer += line;\n            return;\n        }\n        if (this.buffer) {\n            this.objects.push(this.buffer + line);\n            this.buffer = \"\";\n        } else {\n            this.objects.push(line);\n        }\n    }\n\n    /**\n     * May return an empty array\n     * @param {String} textPart\n     * @return {FlatScanResultEntry[]}\n     * */\n    parsePart(textPart) {\n        const isLastPart = textPart.endsWith(\"\\n]\");\n        /** @type {String[]} */\n        const lines = textPart.split(\"\\n\");\n\n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i];\n            const isLastLine = i === lines.length - 1;\n\n            if (isLastLine && isLastPart) {\n                continue;\n            }\n\n            if (!this.startHandled) {\n                this.handleStart(line, isLastLine);\n            } else {\n                this.handleLine(line, isLastLine);\n            }\n        }\n        try {\n            /** @type {FlatScanResultEntry[]} */\n            const result = JSON.parse(`[${this.trimComma(this.objects.join(\"\"))}]`);\n            this.objects = [];\n            return result;\n        } catch (e) {\n            console.log(`[${this.trimComma(this.objects.join(\"\"))}]`);\n            console.log(this.objects);\n            console.log(this, {isLastPart, textPart});\n            throw e;\n        }\n\n    }\n\n}\n\n\nlet pakoIsLoaded = false;\nasync function loadPako() {\n    if (!pakoIsLoaded) {\n        const src = \"https://cdn.jsdelivr.net/npm/pako@2.0.4/dist/pako_inflate.min.js\";\n        const integrity = \"sha256-ZIKs3+RZEULSy0dR6c/mke8V9unZm9vuh05TqvtMdGU=\";\n        await appendScript(src, integrity);\n        pakoIsLoaded = true;\n        console.log(\"pako is loaded\");\n    }\n}\nfunction isPakoLoaded() {\n    return pakoIsLoaded;\n}\n\n\n/**\n * \"application/x-gzip\"\n * \"application/gzip\"\n * @param contentType\n * @return {Boolean}\n */\nfunction isGZip(contentType) {\n    return Boolean(contentType.match(/^application\\/.*?gzip/));\n}\n\n/**\n * \"application/json\"\n * \"application/json; charset=utf-8\"\n * @param contentType\n * @return {Boolean}\n */\nfunction isJSON(contentType) {\n    return Boolean(contentType.match(/^application\\/.*?json/));\n}\n","import {computed, watch, shallowRef, triggerRef, shallowReadonly, ref, readonly} from \"vue\";\nimport {clearSearch} from \"./search.js\";\nimport {folderDummy, SimpleBucketEntry, SimpleEntry} from \"./entry.js\";\nimport {dateToDayDateString, sleep} from \"../util.js\";\nimport {addMessage} from \"./debug.js\";\nimport {parseScan} from \"./scan-parser.js\";\nimport {limit} from \"./entries.js\";\nimport {scanParsing, scanParsingProgress} from \"./state.js\";\n\n\n/**\n * @typedef {Object} SpecialMeta\n * @property {Object} [special]\n */\n/**\n * @typedef {ScanMeta & SpecialMeta} FolderMeta\n */\n// Well, IDEA does not support `{ScanMeta & SpecialMeta}` correctly\n// todo make a class for it\n\n/** @type {import(\"vue\").ShallowRef<FolderMeta|null>} */\nconst rootMeta  = shallowRef(null);\n/** @type {import(\"vue\").ShallowRef<SimpleEntry>} */\nconst root      = shallowRef(null);\n\nconst _rootMeta = shallowReadonly(rootMeta);\nconst _root     = shallowReadonly(root);\nexport {_rootMeta as rootMeta, _root as root};\n\n/** @type {import(\"vue\").ShallowRef<SimpleBucketEntry>} */\nconst home = shallowRef(new SimpleBucketEntry());\nglobalThis.home = home.value;\nconst isHomeOpened = ref(false);\nexport function clearHome() {\n    console.log(\"clearHome\");\n    resetFolderState();\n    home.value.children = [];\n    triggerRef(openedFolder);\n}\n\nconst _home = shallowReadonly(home);\nconst _isHomeOpened = readonly(isHomeOpened);\nexport {_home as home, _isHomeOpened as isHomeOpened};\n\nfunction updateParsingState() {\n    triggerRef(openedFolder);\n}\n\nclass ExecutionState {\n    constructor() {\n        this.abortRequested = false;\n        this._promise = Promise.resolve();\n        this._resolve = () => {};\n    }\n    abort() {\n        this.abortRequested = true;\n        return this._promise;\n    }\n    start() {\n        this._promise = new Promise(r => this._resolve = r);\n    }\n    abortIfRequested() {\n        if (!execution.abortRequested) {\n            return false;\n        }\n        this.abortRequested = false;\n        this._resolve();\n        return true;\n    }\n}\nconst execution = new ExecutionState();\n/**\n * @param {Blob|Response} input\n * @return {Promise<Boolean>}\n */\nexport async function setScan(input) {\n    if (scanParsing.value) {\n        await execution.abort();\n    }\n    scanParsingProgress.value = 0;\n    scanParsing.value = true;\n    execution.start();\n\n    let metaInited = false;\n    let rootInited = false;\n\n    const startTime = Date.now();\n    let time = Date.now();\n    let processedTotal = 0;\n    let total;\n    for await (const {meta: scanMeta, root: rootEntry, rootUpdated: rootContentUpdated, processed} of parseScan(input)) {\n        processedTotal += processed;\n        if (total) {\n            const percentStr = (processedTotal / total * 100).toPrecision(3);\n            scanParsingProgress.value = Number(percentStr);\n        }\n\n        if (execution.abortIfRequested()) {\n            console.log(`[setScan][time][aborted]`, Date.now() - startTime, \"ms\");\n            return false;\n        }\n        if (!rootInited && rootEntry) {\n            if (!metaInited && scanMeta) {\n                rootEntry.meta = scanMeta;\n                metaInited = true;\n                total = scanMeta.total;\n                processedTotal -= 1;\n            }\n            openFolder(rootEntry);\n            rootInited = true;\n        }\n        const now = Date.now();\n        if (rootContentUpdated || now - time > 50) {\n            time = now;\n            updateParsingState();\n            await sleep();\n        }\n    }\n    updateParsingState();\n    console.log(`[setScan][time]:`, Date.now() - startTime, \"ms\");\n\n    scanParsing.value = false;\n    return true;\n}\n\n/** @type {import(\"vue\").ComputedRef<string>} */\nexport const separator = computed(() => {\n    return rootMeta.value?.separator || \"/\";\n});\n/** @type {import(\"vue\").ComputedRef<string[]>} */\nexport const scanRootPath = computed(() => {\n    return rootMeta.value?.path || [];\n});\n\n\n/** @type {import(\"vue\").ShallowRef<SimpleEntry>} */\nexport const openedFolder = shallowRef(folderDummy);\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const openedFolders = computed(() => {\n    return openedFolder.value.path;\n});\n\nexport function resetFolderState() {\n    clearSearch();\n    openFolder(folderDummy);\n    root.value = null;\n    rootMeta.value = null;\n    globalThis.root = null;\n    globalThis.folder = null;\n}\n\n/** @param {SimpleEntry} entry */\nexport function openFolder(entry) {\n    clearSearch();\n    openedFolder.value = entry;\n    limit.value = 50;\n\n    const root = entry.root;\n    globalThis.root = root;\n    root.value = root;\n    rootMeta.value = root.meta || {};\n\n    if (entry !== home.value) {\n        if (!home.value.children?.includes(root)) {\n            home.value.addChild(root);\n            triggerRef(home);\n        }\n    }\n    isHomeOpened.value = entry === home.value;\n\n    /** @type {SimpleEntry} */\n    globalThis.folder = entry;\n    console.log(\"globalThis.folder:\", entry);\n}\nObject.defineProperty(globalThis, \"flat\", {\n    get() {\n        return globalThis.folder?.flat();\n    }\n});\n\nexport function goBack() {\n    if (openedFolder.value.parent) {\n        openFolder(openedFolder.value.parent);\n    }\n}\n/** @type {import(\"vue\").ComputedRef<Boolean>} */\nexport const empty = computed(() => root.value && openedFolder.value.isEmpty);\n\n\nwatch(rootMeta, async (newValue, oldValue) => {\n    console.log(\"[meta]:\", rootMeta.value);\n    if (!rootMeta.value) {\n        return;\n    }\n    const {files, folders, symlinks, errors, total, scanDate} = rootMeta.value;\n    if (rootMeta.value.scanDate) {\n        addMessage(\n            `files: \"${files}\" folders: \"${folders}\", symlinks: \"${symlinks}\", ` +\n            `errors: \"${errors}\", total: \"${total}\", scanDate: \"${dateToDayDateString(scanDate)}\"`\n        );\n    }\n});\n","<template>\n  <span class=\"scanPath\">\n    <span class=\"parts\" @click=\"goToRoot\" :title=\"title\">\n      <span class=\"part\"       >{{part1}}</span>\n      <span class=\"part spaced\">{{part2}}</span>\n    </span>\n    <span class=\"spaced separator\" v-if=\"showSep\">{{separator}}</span>\n  </span>\n</template>\n\n<script setup>\n//todo title\nimport {computed} from \"vue\";\nimport {scanRootPath, openedFolders, separator, openedFolder, openFolder, rootMeta} from \"../core/folders.js\";\nimport {dateToDayDateString} from \"../util.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst title = computed(() => {\n  if (!rootMeta.value) {\n    return;\n  }\n\n  const {\n      files, folders, symlinks,\n      charDevs, blockDevs, fifos, sockets,\n      total,\n      platform, scanDate\n  } = rootMeta.value;\n\n  function doString(o) {\n    function pad(str) {\n      const count = 3 - Math.trunc((str.length/4));\n      return str + \"\\t\".repeat(count);\n    }\n    return Object.entries(o)\n        .filter(([k, v]) => v !== undefined)\n        .map(([k, v]) => pad(k) + \": \" + v)\n        .join(\"\\n\");\n  }\n  const commonFiles = doString({files, folders, symlinks});\n  const unusualFiles = doString({charDevs, blockDevs, fifos, sockets});\n  const additional = doString({total, platform, scanDate: (scanDate ? dateToDayDateString(scanDate) : undefined)});\n  const special = doString(rootMeta.value.special || {});\n\n  let result;\n  if (platform !== \"win32\") {\n    result = [commonFiles, unusualFiles, additional, special].filter(v => v).join(\"\\n\");\n  } else {\n    result = [commonFiles, additional, special].filter(v => v).join(\"\\n\");\n  }\n  console.log(result);\n  return result;\n});\n\nconst root = computed(() => {\n  const scanPath = [...scanRootPath.value, openedFolder.value.root.name];\n  const str = scanPath.join(separator.value);\n  if (str.startsWith(\"//\")) { // for unix\n    return str.slice(1);\n  }\n  if (rootMeta.value?.platform === \"win32\") { // uppercase win drive letter // todo remove as unnecessary\n    return str[0].toUpperCase() + str.slice(1);\n  }\n  return str;\n});\nconst part1 = computed(() => {\n  return [...root.value].slice(0, -1).join(\"\"); // if ends with surrogate pair\n});\nconst part2 = computed(() => {\n  return [...root.value].slice(-1).join(\"\");\n});\nconst showSep = computed(() => {\n  return (openedFolders.value.length - 1) && root.value !== \"/\";\n});\n\nfunction goToRoot() {\n  const root = openedFolder.value.root;\n  debugMessageFromEntry(root);\n  openFolder(root);\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.scanPath {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  .parts {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    white-space: pre; /* to display tailing spaces */\n\n    cursor: pointer;\n    box-sizing: border-box;\n    border-bottom: transparent solid 1px;\n    &:hover {\n      background-color: var(--blue-2);\n      border-bottom: 1px solid var(--blue-1);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n    .part {\n      display: contents; // for correct selection by double click\n    }\n  }\n  .spaced {\n    letter-spacing: 2px;\n  }\n}\n</style>\n","<template>\n  <span class=\"opened-folder\">\n    <span class=\"parts\" @click=\"onClick\">\n      <span class=\"part\"       >{{part1}}</span>\n      <span class=\"part spaced\">{{part2}}</span>\n    </span>\n    <span class=\"separator spaced\" v-if=\"!isLast\">{{separator}}</span>\n  </span>\n</template>\n\n<script setup>\nimport {computed, toRefs} from \"vue\";\nimport {openFolder, separator} from \"../core/folders.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst props = defineProps([\"index\", \"count\", \"entry\"]);\nconst {index, count, entry} = toRefs(props);\n\nconst isLast = computed(() => {\n  return index.value + 1 === count.value;\n});\nconst part1 = computed(() => {\n  return [...entry.value.name].slice(0, -1).join(\"\"); // if ends with surrogate pair\n});\nconst part2 = computed(() => {\n  return [...entry.value.name].slice(-1).join(\"\");\n});\n\nfunction onClick() {\n  debugMessageFromEntry(entry.value);\n  openFolder(entry.value);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.opened-folder {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  .parts {\n    height: 100%;\n    display: flex;\n    align-items: center;\n\n    width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    white-space: pre; /* to display tailing spaces */\n\n    cursor: pointer;\n    box-sizing: border-box;\n    border-bottom: transparent solid 1px;\n    &:hover {\n      background-color: var(--blue-2);\n      border-bottom: 1px solid var(--blue-1);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n    .part { // to use with max-width limitation // not works with  `display: contents;`\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: pre;\n    }\n    .part {\n      display: contents; // for correct selection by double click\n    }\n  }\n  .spaced {\n    letter-spacing: 2px;\n  }\n}\n</style>\n","<template>\n<div class=\"address\" @contextmenu=\"onContextmenu\">\n  <AddressBar_Part>\n    <AddressBar_Base/>\n  </AddressBar_Part>\n  <AddressBar_Part\n      v-for=\"(folder, i) of openedFolders.slice(1)\"\n  >\n    <AddressBar_Folder\n        :entry=\"folder\"\n        :index=\"i\"\n        :count=\"openedFolders.slice(1).length\"\n    />\n  </AddressBar_Part>\n</div>\n</template>\n\n<script setup>\nimport AddressBar_Base from \"./AddressBar_Base.vue\";\nimport AddressBar_Folder from \"./AddressBar_Folder.vue\";\nimport AddressBar_Part from \"./AddressBar_Part.vue\";\nimport {rootMeta, openedFolder, openedFolders, separator} from \"../core/folders.js\";\n\n/** @param {MouseEvent} event */\nasync function onContextmenu(event) {\n  event.preventDefault();\n  const folderPath = [...rootMeta.value.path, ...openedFolder.value.path.map(entry => entry.name)].join(separator.value);\n  console.log(\"Copy to clipboard:\", folderPath);\n  await navigator.clipboard.writeText(folderPath);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.address {\n  display: flex;\n  overflow-x: scroll;\n  padding-left: 6px;\n\n  scrollbar-width: none; // firefox\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 0;\n    height: 0;\n    background: transparent;\n    display: none;\n  }\n  &:active { // todo only on onContextmenu event do it\n    border-right: var(--blue-1) solid 1px;\n  }\n}\n</style>\n","<template>\n  <div class=\"search-wrapper\">\n    <div class=\"search\">\n      <input id=\"json-scan-search-input\" type=\"text\" v-model=\"search\" ref=\"inputRef\" @focus=\"onFocus\">\n      <button @click=\"onClearClick\">Clear</button>\n    </div>\n    <label for=\"json-scan-search-input\" class=\"fuck-off-lighthouse\">.</label>\n  </div>\n</template>\n\n<script setup>\nimport {search, clearSearch} from \"../core/search.js\";\nimport {ref} from \"vue\";\n\nconst inputRef = ref();\nfunction onClearClick() {\n  clearSearch();\n  inputRef.value.focus();\n}\n\n//todo focus on double shift\n</script>\n\n<style lang=\"scss\" scoped>\n/** reset */\ninput { padding: 0 0; }\nbutton { padding: 0 0; }\n\n.fuck-off-lighthouse {\n  position: absolute;\n  top:-1000px;\n  left:-1000px;\n}\n.search-wrapper {\n  display: contents;\n}\n\n.search {\n  display: flex;\n  height: 100%;\n  label {\n    display: contents;\n  }\n  input {\n    height: 100%;\n    flex-grow: 2;\n    border: none;\n    padding-left: 6px;\n    border-bottom: transparent solid 1px;\n    box-sizing: border-box;\n    &:focus, &:hover {\n      outline: none;\n      border-bottom: var(--blue-1) solid 1px;\n    }\n  }\n  button {\n    height: 100%;\n    padding: 0 6px;\n    //outline: none;\n    outline-width: 1px;\n    outline-color: var(--blue-1);\n    border: none;\n    border-bottom: transparent solid 1px;\n    border-left: var(--gray-2) solid 1px;\n    box-sizing: border-box;\n    background-color: var(--gray-1);\n    &:hover {\n      border-bottom: var(--blue-1) solid 1px;\n      background: var(--blue-2);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n  }\n}\n</style>\n","export class FileEntry {\n    /**\n     * @param {Object} init\n     * @param {File} [init.file]\n     * @param {\"file\"|\"folder\"} init.type\n     * @param {FileEntry} [init.parent]\n     * @param {String} [init.name]\n     */\n    constructor({file, parent, type, name}) {\n        if (file) {\n            /** @type {File|undefined} */\n            this.file = file;\n        }\n        if (parent) {\n            /** @type {FileEntry|undefined} */\n            this.parent = parent;\n            parent.addChild(this);\n        }\n        if (name) {\n            /** @type {String} */\n            this._name = name;\n        }\n        /** @type {\"file\"|\"folder\"} */\n        this.type = type;\n    }\n\n    get name() {\n        return this._name || this.file?.name;\n    }\n\n    /** @param {FileEntry} entry */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {FileEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n\n    /** @private\n     *  @param {Number} size  */\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            /** @type {Number}\n             *  @private  */\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent/* && size*/) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this.file?.size || 0;\n    }\n\n    get mtime() {\n        return this.file?.lastModified || 0;\n    }\n\n    /** @return {FileEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n\n    /** @return {Generator<FileEntry>} */\n    *[Symbol.iterator]() {\n        yield this;\n        if (this.children) {\n            for (const child of this.children) {\n                yield * child;\n            }\n        }\n    }\n\n    /** @return {FileEntry[]} */\n    flat() {\n        return [...this];\n    }\n\n    /**\n     * @param {FileEntry[]} entries\n     * @return {FileEntry[]}\n     */\n    static flat(entries) {\n        return entries.map(e => [...e]).flat();\n    }\n\n    /**\n     * @param {DataTransferItem[]} dtItems\n     * @return {Promise<FileEntry[]>}\n     */\n    static async fromDataTransferItems(dtItems) {\n        const fileSystemEntries = await dtItemsToFileSystemEntries(dtItems);\n        console.log(\"[fileSystemEntries]:\", fileSystemEntries);\n        /** @type {FileEntry[]} */\n        const result = [];\n        for (const fileSystemEntry of fileSystemEntries) {\n            result.push(await fromFileSystemEntry(fileSystemEntry));\n        }\n        return result;\n    }\n\n    /**\n     * @param {File[]} files\n     * @return {FileEntry[]}\n     */\n    static fromFiles(files) {\n        /** @type {FileEntry[]} */\n        const result = [];\n        for (const file of files) {\n            result.push(new FileEntry({file, type: \"file\"}));\n        }\n        return result;\n    }\n}\n\n/**\n * @param {FileSystemEntry} fsEntry\n * @param {FileEntry|null} parent\n * @return {Promise<FileEntry|null>}\n */\nasync function fromFileSystemEntry(fsEntry, parent = null) {\n    if (fsEntry.isFile) {\n        try {\n            const file = await toFile(/** @type {FileSystemFileEntry} */ fsEntry);\n            return new FileEntry({file, type: \"file\", parent});\n        } catch (e) { // For example, for long path \\\\?\\M:\\...\n            console.error(\"[fromFileSystemEntry][error]\", fsEntry.name, e);\n            return null;\n        }\n    } else if (fsEntry.isDirectory) {\n        const dirEntry = new FileEntry({type: \"folder\", parent, name: fsEntry.name});\n        /** @type {AsyncGenerator<FileSystemEntry>} */\n        const entries = readFileSystemDirectoryEntry(/** @type {FileSystemDirectoryEntry} */ fsEntry);\n        for await (const entry of entries) {\n            // The entries will be attached to the parent (`dirEntry`).\n            await fromFileSystemEntry(entry, dirEntry);\n        }\n        return dirEntry;\n    }\n}\n\n/**\n * Works only with a http server\n * @param {FileSystemFileEntry} fsFileEntry\n * @return {Promise<File>}\n */\nfunction toFile(fsFileEntry) {\n    return new Promise((resolve, reject) => fsFileEntry.file(resolve, reject));\n}\n\n/**\n * @param {FileSystemDirectoryEntry} fsDirEntry\n * @return {AsyncGenerator<FileSystemEntry>}\n */\nasync function * readFileSystemDirectoryEntry(fsDirEntry) {\n    const reader = fsDirEntry.createReader();\n    let part = [];\n    do {\n        part = await new Promise((resolve, reject) => reader.readEntries(resolve, reject));\n        for (const entry of part) {\n            yield entry;\n        }\n    } while (part.length);\n}\n\n/**\n * @param {DataTransferItem[]} dtItems\n * @return {Promise<FileSystemEntry[]>}\n */\nasync function dtItemsToFileSystemEntries(dtItems) {\n    const result = [];\n    for (const entry of dtItems) {\n        result.push(await dtItemToFileSystemEntry(entry));\n    }\n    return result;\n}\n\n/**\n * @param {DataTransferItem} entry\n * @return {Promise<FileSystemEntry>}\n */\nasync function dtItemToFileSystemEntry(entry) {\n    return entry.webkitGetAsEntry();\n}\n","import {ref, computed, watchEffect, toRaw} from \"vue\";\nimport {FileEntry} from \"./FileEntry.js\";\n\n/** @type {import(\"vue\").Ref<File[]>} */\nconst files = ref([]);\n/** @type {import(\"vue\").Ref<DataTransferItem[]>} */\nconst dtItems = ref([]);\n\n/** @type {import(\"vue\").Ref<Boolean>} */\nexport const dropHover = ref(false);\n/** @type {import(\"vue\").Ref<Number>} */\nexport const dropHoverItemCount = ref(0);\n/** @type {import(\"vue\").Ref<String[]>} */\nexport const dropHoverTypes = ref([]);\n\n/** @type {import(\"vue\").Ref<FileEntry[]>} */\nexport const fileEntries = ref([]);\n/** @type {import(\"vue\").Ref<Boolean>} */\nexport const parsing = ref(false);\nwatchEffect(async () => {\n    const time = Date.now();\n    parsing.value = true;\n    if (dtItems.value.length) {\n        fileEntries.value = await FileEntry.fromDataTransferItems(dtItems.value);\n    } else {\n        fileEntries.value = FileEntry.fromFiles(files.value);\n    }\n    parsing.value = false;\n    console.log(\"[FileEntry parsing][time]:\", Date.now() - time, \"ms\");\n    console.log(\"[fileEntries]\", toRaw(fileEntries.value));\n});\n\n/** @type {import(\"vue\").ComputedRef<FileEntry>} */\nexport const file = computed(() => {\n    return fileEntries.value[0];\n});\n/** @type {import(\"vue\").ComputedRef<Number>} */\nexport const count = computed(() => {\n    return fileEntries.value.length;\n});\n\n/** @param {DataTransfer} dataTransfer */\nexport function setDataTransferHover(dataTransfer) {\n    const count = dataTransfer.items.length;\n    const allTypes = [...dataTransfer.items].map(item => item.type);\n    const types = [...new Set(allTypes)];\n\n    dropHoverItemCount.value = count;\n    dropHoverTypes.value = types;\n    console.log(\"[setDataTransferHover]:\", count, types);\n}\nexport function resetDataTransferHover() {\n    dropHoverItemCount.value = 0;\n    dropHoverTypes.value = [];\n}\n\n/** @param {DataTransfer} dataTransfer */\nexport function setDataTransfer(dataTransfer) {\n    console.log(dataTransfer);\n    setFiles(dataTransfer.files);\n    setDtItems(dataTransfer.items);\n}\n/** @param {FileList} filelist */\nexport function setFiles(filelist) {\n    /** @type {File[]} */\n    const _files = [...filelist];\n    files.value = _files;\n    console.log(\"[setFiles]:\", _files);\n}\n/** @param {DataTransferItemList} items */\nexport function setDtItems(items) {\n    /** @type {DataTransferItem[]} */\n    const _dtItems = [...items];\n    dtItems.value = _dtItems;\n    console.log(\"[setDtItems]:\", _dtItems); // bug in chromium: `type` and `kind` is \"\" in the console when expand the array.\n\n    console.log(_dtItems[0].kind);\n    console.log(_dtItems[0].type);\n}\nexport function resetDtItems() {\n    dtItems.value = [];\n}\n","<template>\n  <div class=\"default-hover-text\">{{text}}</div>\n</template>\n\n<script setup>\nimport {computed} from \"vue\";\nimport {dropHoverItemCount} from \"./file-input-state.js\";\nconst text = computed(() => {\n  const postfix = dropHoverItemCount.value > 1 ? \"s\" : \"\";\n  return `Drop ${dropHoverItemCount.value} file${postfix}`;\n});\n</script>\n\n<style scoped>\n.default-hover-text {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n","<template>\n  <div class=\"default-prompt-text\" :title=\"names\">\n    <div class=\"parsing\" v-if=\"parsing\">Parsing...</div>\n    <div v-else-if=\"count\">{{count}} file{{count > 1 ? \"s\" : \"\"}}</div>\n    <div v-else style=\"display: contents\"><slot>Select file</slot></div>\n  </div>\n</template>\n\n<script setup>\n//todo split to 2 comps\n//todo use props\n\nimport {count, fileEntries, parsing} from \"./file-input-state.js\";\nimport {computed} from \"vue\";\nconst names = computed(() => {\n  return fileEntries.value.slice(0, 50).map(file => file.name).join(\"\\n\");\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.default-prompt-text {\n  width: inherit;\n  height: inherit;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  &:hover {\n    //text-decoration: underline;\n  }\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n</style>\n","<template>\n<div\n    class=\"file-input\"\n    ref=\"fileInputElem\"\n    :class=\"{'drop-hover': dropHover}\"\n    tabindex=\"0\"\n    @keydown=\"onKeyDown\"\n>\n  <label>\n    <input type=\"file\"\n           :accept=\"accept\"\n           :multiple=\"multiple\"\n           @change=\"onFileInputChange\"\n           style=\"display: none\"\n    >\n\n    <span class=\"content hover\" v-if=\"dropHover\">\n      <slot name=\"hover\"><FileInputDefaultHoverText/></slot>\n    </span>\n    <span class=\"content selected\" v-else-if=\"file && !parsing\">\n      <slot name=\"selected\"><FileInputDefaultText/></slot>\n    </span>\n    <span class=\"content prompt\" v-else>\n      <slot name=\"prompt\"><FileInputDefaultText/></slot>\n    </span>\n\n  </label>\n  <teleport to=\"body\">\n    <div class=\"file-input-hover-modal\" :class=\"{'drop-hover': dropHover}\"></div>\n  </teleport>\n</div>\n</template>\n\n<script setup>\nimport FileInputDefaultHoverText from \"./FileInputDefaultHoverText.vue\";\nimport FileInputDefaultText from \"./FileInputDefaultText.vue\";\n\nimport {ref, toRefs, onMounted, computed} from \"vue\";\nimport {\n  parsing,\n  file,\n  dropHover,\n  setFiles,\n  setDataTransfer,\n  setDataTransferHover,\n  resetDataTransferHover, resetDtItems\n} from \"./file-input-state.js\";\n\nconst props = defineProps({\n  globalDropZone: {\n    type: Boolean,\n    default: true\n  },\n  accept: {\n    type: String,\n    default: \"*/*\"\n  },\n  multiple: {\n    type: Boolean,\n    default: true\n  },\n});\nconst {\n  /** @type {import(\"vue\").Ref<Boolean>} */\n  globalDropZone,\n} = toRefs(props);\n\n\n/** @param {Event} event */\nfunction onFileInputChange(event) {\n  const fileElem = event.target;\n  setFiles(fileElem.files);\n  resetDtItems();\n}\n\n\n/** @type {import(\"vue\").Ref<HTMLElement|null>} */\nconst fileInputElem = ref(null);\n/** @type {import(\"vue\").Ref<HTMLElement>} */\nconst dropZone = computed(() => {\n  if (globalDropZone.value) {\n    return document.body;\n  }\n  return fileInputElem.value;\n});\nonMounted(() => {\n  if (!globalDropZone.value) {\n    disableDragOverNotDropZone();\n  }\n  initListeners();\n});\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nfunction initListeners() {\n  dropZone.value.addEventListener(\"drop\", onDrop);\n  dropZone.value.addEventListener(\"dragover\", onDragOver);\n  dropZone.value.addEventListener(\"dragleave\", onDragLeave);\n  dropZone.value.addEventListener(\"dragenter\", onDragEnter);\n}\nfunction onDrop(event) {\n  stopEvent(event);\n  dropHover.value = false;\n  setDataTransfer(event.dataTransfer);\n}\nfunction onDragOver(event) {\n  stopEvent(event);\n  event.dataTransfer.dropEffect = \"copy\";\n}\nfunction onDragEnter(event) {\n  stopEvent(event);\n  if (!dropHover.value) {\n    dropHover.value = true;\n  } else {\n    return;\n  }\n  setDataTransferHover(event.dataTransfer);\n}\nfunction onDragLeave(event) {\n  stopEvent(event);\n  if (!dropZone.value.contains(event.relatedTarget)) {\n    dropHover.value = false;\n    resetDataTransferHover();\n  }\n}\n\nfunction disableDragOverNotDropZone() {\n  /** @param {DragEvent} event */\n  const dragOverCallback = event => {\n    if (!dropZone.value.contains(event.target)) {\n      stopEvent(event);\n      event.dataTransfer.dropEffect = \"none\";\n    }\n  };\n  document.body.addEventListener(\"dragover\", dragOverCallback);\n}\n\nfunction onKeyDown(event) {\n  if (event.key === \"Enter\") {\n    fileInputElem.value.querySelector(\"label\").click();\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.file-input {\n  transition: background-color 0.1s;\n  border: solid 1px var(--file-input-border);\n  box-sizing: border-box;\n  &.drop-hover {\n    background-color: var(--drop-file-hover);\n    transition: background-color 0.1s;\n  }\n  &:hover {\n    background-color: var(--drop-hover);\n  }\n  &:active {\n    background-color: var(--drop-active);\n  }\n}\n.file-input, label, .content {\n  width: 100%;\n  height: 100%;\n}\n\n.file-input-hover-modal {\n  height: 50px;\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n  background-image: linear-gradient(to top, rgba(0,0,0,0.15), rgba(0,0,0,0.005));\n\n  transition: opacity 0.25s ease-out;\n  opacity: 0;\n  &.drop-hover {\n    opacity: 1;\n  }\n}\n</style>\n\n\n\n\n\n\n\n\n\n\n","<template>\n  <div class=\"file-input-wrapper\">\n    <FileInput :accept=\"`application/json,application/gzip`\" :multiple=\"true\"/>\n  </div>\n</template>\n\n<script setup>\nimport {clearHome, setScan} from \"../core/folders.js\";\n\nimport {watch} from \"vue\";\nimport FileInput from \"./file-input/FileInput.vue\";\nimport {fileEntries} from \"./file-input/file-input-state.js\";\n\nwatch(fileEntries, async () => {\n  clearHome();\n  for (const {file} of fileEntries.value) {\n    await setScan(file);\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n\n::v-deep(.file-input) {\n  border-right: 0;\n  border-left:  0;\n  outline-width: 1px;\n  outline-color: var(--blue-1);\n}\n.file-input-wrapper {\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 100%;\n  grid-template-rows: 100%;\n  width: 100%;\n  min-height: 35px;\n}\n</style>\n","<template>\n  <div class=\"home\" @click=\"onClick\" @contextmenu=\"onContextMenu\" :class=\"{active: isHomeOpened}\" v-if=\"show\">\n    Home\n  </div>\n</template>\n\n<script setup>\nimport {home, openFolder, isHomeOpened, clearHome} from \"../core/folders.js\";\nimport {computed} from \"vue\";\n\nconst show = computed(() => {\n  return home.value?.children?.length > 1;\n});\n\nfunction onClick() {\n  openFolder(home.value);\n}\nfunction onContextMenu(event) {\n  event.preventDefault();\n  clearHome();\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.home {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  min-height: 35px;\n\n  border: var(--gray-2) solid 1px;\n  border-right: 0;\n  border-left: 0;\n  box-sizing: border-box;\n  &:hover {\n    background-color: var(--drop-hover);\n    cursor: pointer;\n  }\n  &:active {\n    background-color: var(--drop-active);\n  }\n  &.active {\n    border-width: 2px;\n  }\n}\n</style>\n","<template>\n  <tr class=\"row\"\n      @click=\"onClick\"\n      @mousedown=\"onMousedown\"\n      @mouseover=\"onMouseover\"\n      @mouseleave=\"onMouseleave\"\n      :title=\"title\"\n      :class=\"{error}\"\n  >\n      <td class=\"icon\">{{icon}}</td>\n      <td class=\"name\" :title=\"entry.getPathString(entry.root.meta)\">{{entry.name}}</td>\n      <td class=\"size\" :class=\"sizeClass\" :title=\"tripleSizeGroups(entry.size)\">{{size}}</td>\n      <td class=\"time\" :class=\"{[selectedTime]: true}\">{{time}}</td>\n<!--      <td class=\"type\">{{entry.type}}</td>-->\n<!--      <td class=\"filler\"></td>-->\n  </tr>\n</template>\n\n<script setup>\nimport {toRefs, computed} from \"vue\";\nimport {openedFolder, openFolder} from \"../core/folders.js\";\nimport {bytesToSizeWinLike, dateToDayDateTimeString, isImage, isVideo, isAudio, tripleSizeGroups} from \"../util.js\";\nimport {hoveredEntry, selectedTime} from \"../core/entries.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst props = defineProps([\"entry\"]);\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nconst entry = toRefs(props).entry;\n\nconst size = computed(() => {\n  return entry.value.hasErrors ? \"\" : bytesToSizeWinLike(entry.value.size);\n});\n\nconst sizeClass = computed(() => {\n  if (size.value === \"0 B\") {\n    return \"Z\";\n  }\n  return size.value.split(\" \")[1];\n});\n\n\n/** @type {import(\"vue\").Ref<Boolean>} */\nconst error = computed(() => {\n  return entry.value.hasErrors;\n});\n\n/** @type {import(\"vue\").ComputedRef<String>} */\nconst time = computed(() => {\n  if (entry.value[selectedTime.value] === undefined) {\n    return \"\";\n  }\n  const time = dateToDayDateTimeString(entry.value[selectedTime.value], false);\n  return time.slice(0, -3); // trim seconds\n});\n\n/** @type {import(\"vue\").ComputedRef<String>} */\nconst title = computed(() => {\n  if (entry.value.hasErrors) {\n    return JSON.stringify(entry.value.errors[0], null, \" \");\n  }\n  if (entry.value.type === \"symlink\") {\n    return entry.value.pathTo;\n  }\n});\n\n/** @type {import(\"vue\").Ref<String>} */\nconst icon = computed(() => {\n  const type = entry.value.type;\n  if (type === \"folder\") {\n    return \"📁\";\n  } else if (type === \"file\") {\n    const name = entry.value.name;\n    if (isVideo(name)) {\n      return \"🎦\";\n    } else if (isImage(name)) {\n      return \"🖼\";\n    } else if (isAudio(name)) {\n      return \"🎵\";\n    }\n    return \"📄\";\n  } else if (type === \"symlink\") {\n    return \"🔗\";\n  }\n  return \"👾\";\n});\n\nfunction onClick(event) {\n  debugMessageFromEntry(entry.value);\n\n  if (entry.value.type === \"folder\") {\n    openFolder(entry.value);\n  }\n}\n\n/** @param {MouseEvent} event */\nfunction onMousedown(event) {\n  const MIDDLE_BUTTON = 1;\n  const RIGHT_BUTTON = 2;\n  if (event.button === MIDDLE_BUTTON) {\n    event.preventDefault();\n    console.log(\n        entry.value.getPathString(entry.value.root.meta),\n        entry.value,\n    );\n\n    if (openedFolder.value !== entry.value.parent) {\n      openFolder(entry.value.parent);\n    }\n  }\n}\n\nfunction onMouseover(event) {\n  hoveredEntry.value = entry.value;\n}\nfunction onMouseleave(event) {\n  hoveredEntry.value = null;\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.row {\n  width: 100%;\n  min-height: 28px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background-color: var(--blue-2);\n  }\n  * {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n  td {\n    &.icon {\n      border-left: 2px solid transparent;\n      width: 24px;\n      text-align: center;\n      user-select: none;\n    }\n    &.name {\n      display: block;\n      //width: 880px; // gets it from the parent\n      white-space: pre; // to display tailing spaces\n    }\n    &.size {\n      text-align: end;\n      min-width: 80px;\n      &.Z {\n        color: #888;\n      }\n      &.B {\n        color: #666;\n      }\n      &.KB {\n        color: #0b0;\n      }\n      &.MB {\n        color: #0070dd;\n      }\n      &.GB {\n        color: #a335ee;\n      }\n      &.TB {\n        color: #ff8000;\n      }\n    }\n    &.time {\n      text-align: end;\n      width: 145px;\n      color: #777;\n    }\n    &.type {\n      text-align: end;\n      width: 58px;\n      user-select: none;\n    }\n    //&.filler {\n    //  width: inherit;\n    //}\n  }\n  &.error {\n    .icon {\n      border-left: 2px solid red;\n    }\n  }\n}\n</style>\n","<template>\n<div class=\"intersection\" ref=\"intersection\"></div>\n</template>\n\n<script setup>\nimport {onBeforeUnmount, onMounted, ref} from \"vue\";\nimport {count, limit} from \"../core/entries.js\";\n\n/** @param {IntersectionObserverEntry[]} entries */\nconst callback = (entries) => {\n  const [entry] = entries;\n  if (entry.isIntersecting) {\n    if (count.value > limit.value) {\n      limit.value = limit.value + 50;\n    }\n  }\n}\nconst observer = new IntersectionObserver(callback);\n\n/** @type {import(\"vue\").Ref<HTMLElement>} */\nconst intersection = ref(null);\n\nonMounted(() => {\n  observer.observe(intersection.value);\n});\nonBeforeUnmount(() => {\n  observer.disconnect();\n});\n</script>\n\n<style scoped>\n.intersection {\n  width: 100%;\n  position: relative;\n  bottom: 120px;\n}\n</style>\n","<template>\n  <div class=\"content\"\n       @contextmenu=\"onContextMenu\"\n  >\n    <table class=\"rows\" v-if=\"listLimited.length\">\n      <tbody>\n        <Row v-for=\"entry of listLimited\" :entry=\"entry\" :key=\"`${entry.pathString}//${entry.size}`\"/>\n        <IntersectionRow/>\n      </tbody>\n    </table>\n    <div class=\"empty-message\" v-if=\"empty && !error\">\n      <span>The folder is empty.</span>\n    </div>\n    <div class=\"error-message\" v-if=\"error\">\n      <div>\n        <h2>Error</h2>\n        <table>\n          <tr>\n            <td>syscall</td>\n            <td><pre>{{error.syscall}}</pre></td>\n          </tr>\n          <tr>\n            <td>code</td>\n            <td><pre>{{error.code}}</pre></td>\n          </tr>\n          <tr>\n            <td>errno</td>\n            <td><pre>{{error.errno}}</pre></td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Row from \"./Row.vue\";\nimport IntersectionRow from \"./IntersectionRow.vue\";\nimport {goBack, empty, openedFolder} from \"../core/folders.js\";\nimport {listLimited} from \"../core/entries.js\";\nimport {computed, onMounted, ref} from \"vue\";\n\n/** @type {import(\"vue\").ComputedRef<ScanError>} */\nconst error = computed(() => {\n  if (openedFolder.value.hasErrors) {\n    return openedFolder.value.errors[0];\n  }\n  return false;\n});\n\nfunction onContextMenu(event) {\n  event.preventDefault();\n  goBack();\n}\n\nconst nameElemWidth = ref(\"880px\");\nonMounted(() => {\n  const w = document.body.offsetWidth;\n  if (w < 1280) {\n    let px = 880 - (1280 - w);\n    px = px < 140 ? 140 : px;\n    nameElemWidth.value = `${px}px`;\n  }\n});\n\n</script>\n\n\n<style lang=\"scss\" scoped>\n::v-deep(.row .name) {\n  width: v-bind(nameElemWidth);\n}\n\n.content {\n  width: 100%;\n  overflow: auto;\n  .rows {\n    width: 100%;\n    overflow: auto;\n  }\n  .empty-message {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--gray-2);\n  }\n  .error-message {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: var(--red-1);\n    div {\n      h2 {\n        margin: 0;\n        padding-bottom: 6px;\n        padding-left: 2px;\n      }\n      pre {\n        display: inline;\n      }\n      td {\n        padding-right: 3px;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"status\">\n    <span>Items count: {{count}}</span>\n    <span v-show=\"hoveredEntry\">. Hover item's size: {{size}}</span>\n  </div>\n</template>\n\n<script setup>\nimport {count, hoveredEntry} from \"../core/entries.js\";\nimport {computed} from \"vue\";\nimport {bytesToSizeWinLike} from \"../util.js\";\n\nconst size = computed(() => hoveredEntry.value?.size && bytesToSizeWinLike(hoveredEntry.value.size));\n</script>\n\n<style scoped>\n.status {\n  padding: 2px 2px 2px 6px;\n}\n</style>\n","<template>\n  <div class=\"switch\">\n    <button\n        class=\"order-by-name\"\n        title=\"Order by name\"\n        @click=\"onClick('name')\"\n        :class=\"{active: orderBy === 'name'}\"\n    >{{ orders.name  ? \"N\" : \"n\"}}</button>\n    <button\n        class=\"order-by-size\"\n        title=\"Order by size\"\n        @click=\"onClick('size')\"\n        :class=\"{active: orderBy === 'size'}\"\n    >{{ orders.size  ? \"S\" : \"s\"}}</button>\n    <button\n        class=\"order-by-time\"\n        :title=\"'Order by ' + selectedTime\"\n        @click=\"onClick('time')\"\n        @contextmenu.prevent=\"toggleTimeType\"\n        :class=\"{active: orderBy === 'time', [selectedTime]: true}\"\n    >{{ orders.time ? \"D\" : \"d\"}}</button>\n  </div>\n</template>\n\n<script setup>\nimport {orderBy, toggleOrder, orders, selectedTime} from \"../core/entries.js\";\n\n// todo optimise reversing.\n// todo cancel sorting (for large arrays) on new click while sorting\n\nfunction toggleTimeType() {\n  selectedTime.value = selectedTime.value === \"mtime\" ? \"btime\" : \"mtime\";\n}\n\n/** @param {\"name\"|\"size\"|\"time\"} value */\nfunction onClick(value) {\n  if (orderBy.value === value) {\n    toggleOrder();\n  }\n  orderBy.value = value;\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.switch {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\nbutton.active {\n  font-weight: bold;\n}\n.btime {\n  font-style: italic;\n}\n\nbutton {\n  width: 22px;\n  margin: 1px 3px;\n  padding: 2px 6px;\n  outline-width: 1px;\n  outline-color: var(--blue-1);\n  border: 1px solid var(--gray-2);\n  box-sizing: border-box;\n  background-color: var(--gray-1);\n  &:hover {\n    border-bottom: var(--blue-1) solid 1px;\n    background: var(--blue-2);\n  }\n  &:active {\n    background: var(--blue-3);\n  }\n}\n</style>\n","<template>\n  <div class=\"memory-consuming-component\"\n       v-if=\"isSupported\"\n       :style=\"{width: percent + '%'}\"\n       :title=\"'Heap size: ' + formattedSize + (showHint ? '\\n' + hint : '')\"\n       @mousedown=\"onMousedown\"\n  >\n    <div class=\"visible\"\n        :class=\"{over100}\"\n    ></div>\n    <div class=\"invisible\"></div>\n  </div>\n</template>\n\n<script setup>\nimport {bytesToSizeWinLike} from \"../util.js\";\nimport {computed, ref, onMounted, onBeforeUnmount} from \"vue\";\n\n\n/** @type {import(\"vue\").Ref<{jsHeapSizeLimit: number, totalJSHeapSize: number, usedJSHeapSize: number}>} */\nconst memory = ref(performance.memory);\nconst jsHeapSizeLimit = computed(() => memory.value.jsHeapSizeLimit);\nconst totalJSHeapSize = computed(() => memory.value.totalJSHeapSize);\nconst usedJSHeapSize  = computed(() => memory.value.usedJSHeapSize);\n\nconst intervalId = ref(null);\nconst over100 = ref(false);\nconst showHint = ref(false);\nconst hint = \"Use middle mouse button click to clear the console.\";\n\nconst percent = computed(() => {\n  const percent = totalJSHeapSize.value / (jsHeapSizeLimit.value / 100);\n  over100.value = percent > 100;\n  return over100.value ? 100 : percent;\n});\n\nconst formattedSize = computed(() => bytesToSizeWinLike(totalJSHeapSize.value));\nconst isSupported = computed(() => memory.value);\n\nonMounted(() => {\n  if (!isSupported.value) {\n    return;\n  }\n  intervalId.value = setInterval(() => {\n    memory.value = performance.memory;\n  }, 1000);\n});\nonBeforeUnmount(() => {\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n});\n\n/** @param {MouseEvent} event */\nfunction onMousedown(event) {\n  const LEFT_BUTTON = 0;\n  const MIDDLE_BUTTON = 1;\n  const RIGHT_BUTTON = 2;\n  if (event.button === LEFT_BUTTON) {\n    showHint.value = true;\n  }\n  if (event.button === MIDDLE_BUTTON) {\n    event.preventDefault();\n    showHint.value = false;\n    console.clear();\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.memory-consuming-component {\n  position: absolute;\n  left: 0;\n  top: 0;\n  > div {\n    width: 100%;\n  }\n  .visible {\n    background-color: #415aff;\n    height: 2px;\n    &.over100 {\n      background-color: #e30000;\n    }\n  }\n  &:active .visible {\n    background-color: #415aff80;\n  }\n  .invisible {\n    height: 3px;\n  }\n}\n</style>\n","<template>\n  <div class=\"scan-parsing-progress-component\"\n       v-if=\"scanParsing || show100\"\n       :style=\"{width: scanParsingProgress + '%'}\"\n  >\n    <div class=\"visible\"></div>\n  </div>\n</template>\n\n<script setup>\nimport {scanParsing, scanParsingProgress} from \"../core/state.js\";\nimport {ref, watchEffect} from \"vue\";\nimport {sleep} from \"../util.js\";\n\nconst show100 = ref(false);\nwatchEffect(async () => {\n  if (scanParsingProgress.value === 100) {\n    show100.value = true;\n    await sleep(16);\n    show100.value = false;\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.scan-parsing-progress-component {\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n  top: 0;\n  > div {\n    width: 100%;\n  }\n  .visible {\n    background-color: var(--blue-1);\n    height: 4px;\n  }\n}\n</style>\n","<template>\n  <div class=\"main\">\n    <MemoryConsuming/>\n    <ScanProgressBar/>\n    <Switch     style=\"grid-area: switch;\"/>\n    <AddressBar style=\"grid-area: address;\"/>\n    <Search     style=\"grid-area: search;\"/>\n    <Tabs       style=\"grid-area: tabs;\"/>\n    <Guide      style=\"grid-area: content;\" v-if=\"showGuide\"/>\n    <InnerModal style=\"grid-area: content;\" v-else-if=\"scanParsing && searchAwaiting\">\n      [Search]: Scan parsing awaiting\n    </InnerModal>\n    <Content    style=\"grid-area: content;\" v-else/>\n    <Status     style=\"grid-area: status;\"/>\n    <Debug      style=\"grid-area: debug;\"/>\n    <a class=\"readme\" title=\"Open Readme\" href=\"https://github.com/AlttiRi/directory-snapshot-explorer#file-manager-snapshot-explorer\" target=\"_blank\"><i>i</i></a>\n  </div>\n</template>\n\n<script setup>\nimport AddressBar from \"./AddressBar.vue\";\nimport Search from \"./Search.vue\";\nimport Tabs from \"./Tabs.vue\";\nimport Content from \"./Content.vue\";\nimport Status from \"./Status.vue\";\nimport Switch from \"./Switch.vue\";\nimport Debug from \"./Debug.vue\";\nimport Guide from \"./Guide.vue\";\nimport InnerModal from \"./InnerModal.vue\";\nimport MemoryConsuming from \"./MemoryConsuming.vue\";\nimport ScanProgressBar from \"./ScanProgressBar.vue\";\nimport {computed, onMounted} from \"vue\";\nimport {rootMeta, setScan} from \"../core/folders.js\";\nimport {search} from \"../core/search.js\";\nimport {bytesToSize, bytesToSizeWinLike} from \"../util.js\";\nimport {scanParsing, searchAwaiting} from \"../core/state.js\";\nimport {orderBy, toggleOrder} from \"../core/entries.js\";\nimport {handleMegaUrl} from \"../core/mega-nz.js\";\n\nglobalThis.bytesToSize = bytesToSize;\nglobalThis.bytesToSizeWinLike = bytesToSizeWinLike;\n\n\n// some kind of hack, but okay // don't show if a file selected, or remote scan is loading\nconst showGuide = computed(() => rootMeta.value === undefined && !new URL(location.href).searchParams.get(\"filepath\") || rootMeta.value === null);\n\n\n// Already opened directory, no need to open with input\nonMounted(async () => {\n  const url = new URL(location.href);\n  const filepath = url.searchParams.get(\"filepath\");\n  const sort = url.searchParams.get(\"sort\") || url.searchParams.get(\"order\");\n  if ([\"name\", \"size\", \"time\"].includes(sort)) {\n    orderBy.value = sort;\n    if ([\"true\", \"1\"].includes(url.searchParams.get(\"desc\"))) {\n      toggleOrder();\n    }\n  }\n  if (filepath) {\n    /** @type {Response} */\n    const response = await fetch(filepath);\n    await setScan(response);\n  }\n  const hash = url.hash.slice(1);\n  if (hash.startsWith(\"https://mega.nz/\")) {\n    await handleMegaUrl(hash);\n  }\n  const _search = url.searchParams.get(\"search\");\n  if (_search) {\n    search.value = _search;\n  }\n});\n\n</script>\n\n<style lang=\"scss\" scoped>\n.main {\n  grid-template-areas: \"switch address search \"\n                       \"tabs   content content\"\n                       \"status status  status \"\n                       \"debug  debug   debug  \";\n\n  display: grid;\n  grid-template-columns: 7em 2fr 1fr;\n  grid-template-rows:    2em 1fr;\n\n  height: 720px;\n  max-height: 100vh;\n  width: 1280px;\n  max-width: 100%;\n  box-sizing: border-box;\n\n  grid-gap: 1px;\n  border: 1px solid var(--gray-2);\n  background-color: var(--gray-2);\n  * {\n    background-color: white;\n  }\n}\n.readme {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding: 2px 8px;\n  margin: 1px;\n  color: darkgray;\n  text-decoration: none;\n}\n</style>\n","import {createApp} from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","p","setImmediate","globalThis","port1","port2","MessageChannel","queue","onmessage","shift","callback","postMessage","push","sleep","ms","Promise","resolve2","setTimeout","videoExtensions","imageExtensions","audioExtensions","firefoxDateFix","dateValue","input","String","replace","dateToDayDateString","utc","_date","Date","pad2","str","toString","padStart","console","warn","_utc","year","month","date","dateToDayDateTimeString","hours","minutes","seconds","time","async","iterateAsyncDataSource","dataSource","Response","body","ReadableStream","stream","reader","getReader","done","value","read","iterateReadableStream","Blob","part","blob","chunkSize","index","blobChunk","slice","size","blob2","Uint8Array","arrayBuffer","iterateBlob","tripleSizeGroups","num","length","match","join","trimStart","bytesToSize","bytes","decimals","i","Math","floor","log","Number","parseFloat","pow","toFixed","bytesToSizeWinLike","result","number","trunc","toPrecision","toTruncPrecision3","blue","text","sort","ref","selectedTime","orderBy","orders","name","reverseOrder","computed","toggleOrder","compare","Intl","Collator","numeric","sensitivity","comparator","pre","cur","k","timeName","entries","openedFolder","folders","files","symlinks","fifos","charDevs","blockDevs","sockets","limit","list","search","searchResult","listLimited","count","hoveredEntry","debugMessage","addMessage","message","appendMessage","debugMessageFromEntry","entry","isProxy","toRaw","hasErrors","messages","mtime","btime","entryTypes","SimpleEntry","constructor","parent","errorsIDMap","this","_size","_mtime","errors","map","id","get","pathTo","content","addChild","children","increaseContentSize","addHardlinks","entries2","total","hardlinks","hardlinksTotal","addMeta","meta","_contentSize","MIN_SAFE_INTEGER","child","_a","filter","e","isEmpty","Boolean","root","path","contentTypesStats","getContentTypesStats","_getContentTypesStats","deep","target","timeEnd","Symbol","iterator","flat","pathString","getPathString","names","pathStr","separator","startsWith","EntryStreamParser","rootId","Map","hidMap","setMeta","errorsMap","Object","v","code","syscall","errno","split","parse","sEntriesPart","rootUpdated","pid","simpleEntry","set","hid","array","processed","processHIDMapAsync","simpleEntries","timeNow","now","totalLinks","forEach","then","folderDummy","scanParsing","scanParsingProgress","searching","searchAwaiting","seen","handleMegaUrl","url","baseModule","deps","Mega","import","all","dep","isCss","endsWith","cssSelector","querySelector","as","crossOrigin","head","appendChild","res","rej","addEventListener","parseMegaNode","_url","special","_id","ownerId","_ownerId","emptyRootFolder","openFolder","megaNode","sEntry","ssEntry","creationDate","modificationDate","parentId","toSEntry","mNode","clearSearch","shallowRef","setSearchResult","rawResult","defineProperty","addSearchResultToGlobalThis","sortSearch","timeTotal","triggerRef","watch","resolve","scanParsingCompleted","simplify","toLowerCase","watchEffect","r","window","event","key","newValue","dispatchEvent","Event","performSearchDebounced","runnable","timerId","clearTimeout","apply","arguments","debounce","performSearch","searchSync","URL","location","searchParams","localStorage","setItem","title","folder","request","folderRaw","isReactive","time1","performance","searchText","search2","strict","normalized","searchHelp","subStringMatcher","subSearch","starts","ends","stringMatcher","string","substring","justSearch","findAll","some","prefix","hostname","pathname","pathnameEndsWithSlash","resourceFullName","resName","ext","resExt","_b","groups","r1","RegExp","regex","defaultPrefix","caret","dollar","percent","sizeString1","decimal1","prefix1","exclamations","plus","minus","tildes","sizeString2","decimal2","prefix2","_c","multiplyByPrefix","prefixes","indexOf","extra1","extra2","sizeNum","replaceAll","size2Num","size2","dec1","dec2","rangeSearch","a","b","_min","max","min","includes","count2","diff","orders2","from","to","word","parts","o","curWord","searcher","resultSet","Set","allSize","reduce","acc","val","computeEntrySize","filesSize","debug.appendMessage","excludeSet","childrenSize","has","predicate","partSize","list2","takePart","folderEntry","listAllEntries","curTime","parseScan","parser","contentType","headers","isGZip","obj","decoder","TextDecoder","textParser","TextParser","uint8Array","pakoIsLoaded","src","reject","onload","onerror","append","appendScript","loadPako","chunks","inflator","pako","Inflate","prototype","onData","chunk","u8Array","err","error","msg","unGZipAsyncIterator","textPart","decode","scanResultEntries","parsePart","parseGZippedJSONScan","isJSON","streamParseJSONScan","oldValue","__publicField","trimComma","handleStart","line","objects","metaLines","startHandled","handleLine","isLastLine","buffer","isLastPart","lines","JSON","rootMeta","_rootMeta","shallowReadonly","home","super","isHomeOpened","clearHome","_home","_isHomeOpened","readonly","updateParsingState","execution","abortRequested","_promise","_resolve","abort","start","abortIfRequested","setScan","metaInited","rootInited","startTime","processedTotal","scanMeta","rootEntry","rootContentUpdated","percentStr","scanRootPath","openedFolders","root2","empty","files2","scanDate","platform","doString","repeat","pad","commonFiles","unusualFiles","additional","toUpperCase","part1","part2","showSep","goToRoot","root3","toRefs","props","isLast","onClick","onContextmenu","preventDefault","folderPath","navigator","clipboard","writeText","inputRef","onClearClick","focus","FileEntry","file","file2","_name","lastModified","fromDataTransferItems","dtItems2","fileSystemEntries","dtItemToFileSystemEntry","dtItemsToFileSystemEntries","fileSystemEntry","fromFileSystemEntry","fromFiles","fsEntry","isFile","fsFileEntry","isDirectory","dirEntry","fsDirEntry","createReader","readEntries","readFileSystemDirectoryEntry","webkitGetAsEntry","dtItems","dropHover","dropHoverItemCount","dropHoverTypes","fileEntries","parsing","setDataTransfer","dataTransfer","setFiles","items","_dtItems","kind","setDtItems","filelist","_files","postfix","globalDropZone","onFileInputChange","fileInputElem","dropZone","stopEvent","stopPropagation","onDrop","onDragOver","dropEffect","onDragEnter","allTypes","item","types","setDataTransferHover","onDragLeave","contains","relatedTarget","onKeyDown","click","onMounted","dragOverCallback","disableDragOverNotDropZone","show","onContextMenu","sizeClass","stringify","icon","filename","isVideo","isImage","isAudio","onMousedown","button","onMouseover","onMouseleave","observer","IntersectionObserver","isIntersecting","intersection","onBeforeUnmount","disconnect","nameElemWidth","w","offsetWidth","px","toggleTimeType","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","intervalId","over100","showHint","percent2","formattedSize","isSupported","clear","setInterval","clearInterval","show100","showGuide","filepath","sort2","response","hash","_search","createApp","mount"],"mappings":"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"}