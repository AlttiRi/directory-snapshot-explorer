{"version":3,"file":"index.js","sources":["node-modules:///vite/modulepreload-polyfill","source-maps:///util.js","source-maps:///core/entries.js","source-maps:///core/debug.js","source-maps:///core/entry.js","source-maps:///core/state.js","source-maps:///core/search.js","source-maps:///core/scan-parser.js","source-maps:///core/folders.js","source-maps:///components/AddressBar_Base.vue","source-maps:///components/AddressBar_Folder.vue","source-maps:///components/AddressBar.vue","source-maps:///components/Search.vue","source-maps:///components/file-input/FileEntry.js","source-maps:///components/file-input/file-input-state.js","source-maps:///components/file-input/FileInputDefaultHoverText.vue","source-maps:///components/file-input/FileInputDefaultText.vue","source-maps:///components/file-input/FileInput.vue","source-maps:///components/FileInputWrapper.vue","source-maps:///components/Row.vue","source-maps:///components/IntersectionRow.vue","source-maps:///components/Content.vue","source-maps:///components/Status.vue","source-maps:///components/Switch.vue","source-maps:///components/MemoryConsuming.vue","source-maps:///components/ScanProgressBar.vue","source-maps:///components/Main.vue","source-maps:///main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export const setImmediate = globalThis.setImmediate || /*#__PURE__*/ (function() {\n    const {port1, port2} = new MessageChannel();\n    const queue = [];\n\n    port1.onmessage = function() {\n        const callback = queue.shift();\n        callback();\n    };\n\n    return function(callback) {\n        port2.postMessage(null);\n        queue.push(callback);\n    };\n})();\n\nexport function sleep(ms) {\n    if (ms === undefined) {\n        return new Promise(resolve => setImmediate(resolve));\n    }\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport const shuffle = () => Math.random() >= 0.5 ? -1 : 1;\n\nconst videoExtensions = [\"mp4\", \"webm\", \"mkv\", \"avi\", \"mov\", \"m4v\", \"m4v\", \"mpg\", \"mpeg\", \"wmv\", \"flv\"];\nexport function isVideo(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return videoExtensions.includes(ext.toLowerCase());\n}\nconst imageExtensions = [\"png\", \"jpg\", \"jpeg\", \"gif\", \"tiff\", \"webp\"];\nexport function isImage(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return imageExtensions.includes(ext.toLowerCase());\n}\nconst audioExtensions = [\"mp3\", \"flac\", \"wav\", \"wma\", \"aac\"];\nexport function isAudio(filename) {\n    const {ext} = filename.match(/(?<ext>[^.]+)$/).groups;\n    return audioExtensions.includes(ext.toLowerCase());\n}\n\nexport function debounce(runnable, ms = 50) {\n    let timerId;\n    return function() {\n        // console.log({timerId});\n        if (timerId) {\n            clearTimeout(timerId);\n        }\n        timerId = setTimeout(() => {\n            runnable.apply(this, arguments);\n            timerId = null;\n        }, ms);\n    }\n}\n\nexport function isString(input) {\n    return typeof input === \"string\" || input instanceof String;\n}\n\nexport function firefoxDateFix(dateValue) {\n    return isString(dateValue) ? dateValue.replace(/(?<y>\\d{4})\\.(?<m>\\d{2})\\.(?<d>\\d{2})/, \"$<y>-$<m>-$<d>\") : dateValue;\n}\n\n// \"Sun, 10 Jan 2021 22:22:22 GMT\" -> \"2021.01.10\"\nexport function dateToDayDateString(dateValue, utc = true) {\n    dateValue = firefoxDateFix(dateValue);\n    const _date = new Date(dateValue);\n    if (_date.toString() === \"Invalid Date\") {\n        console.warn(\"Invalid Date value: \", dateValue);\n    }\n    function pad2(str) {\n        return str.toString().padStart(2, \"0\");\n    }\n    const _utc = utc ? \"UTC\" : \"\";\n    const year  = _date[`get${_utc}FullYear`]();\n    const month = _date[`get${_utc}Month`]() + 1;\n    const date  = _date[`get${_utc}Date`]();\n\n    return year + \".\" + pad2(month) + \".\" + pad2(date);\n}\n\n// \"Sun, 10 Jan 2021 22:22:22 GMT\" -> \"2021.01.10 22:22:22Z\"\nexport function dateToDayDateTimeString(dateValue, utc = true) {\n    dateValue = firefoxDateFix(dateValue);\n    const _date = new Date(dateValue);\n    function pad2(str) {\n        return str.toString().padStart(2, \"0\");\n    }\n    const _utc = utc ? \"UTC\" : \"\";\n    const hours    = _date[`get${_utc}Hours`]();\n    const minutes  = _date[`get${_utc}Minutes`]();\n    const seconds  = _date[`get${_utc}Seconds`]();\n\n    const time = pad2(hours)+ \":\" + pad2(minutes) + \":\" + pad2(seconds);\n    return dateToDayDateString(_date, utc) + \" \" + time + (utc ? \"Z\" : \"\");\n}\n\n\nexport function structuredClone(object) {\n    return new Promise(resolve => {\n        const {port1, port2} = new MessageChannel();\n        port1.onmessage = function(message) {\n            resolve(message.data);\n        };\n        port2.postMessage(object);\n    });\n}\n\nexport function appendScript(src, integrity) {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement(\"script\");\n        script.onload = resolve;\n        script.onerror = event => reject({message: \"Failed to load script\", src, integrity, event});\n        script.src = src;\n        script.async = true;\n        if (integrity) {\n            script.integrity = integrity;\n            script.crossOrigin = \"anonymous\";\n        }\n        document.body.append(script);\n    });\n}\n\n/**\n * `chunkSize` is 65536, ReadableStream uses the same size.\n * There is no speed difference between using of different the chunk's sizes.\n * @param {ArrayBuffer|Uint8Array} arrayBuffer\n * @param {Number} [chunkSize=65536]\n * @return {Generator<Uint8Array>}\n */\nexport function *iterateArrayBuffer(arrayBuffer, chunkSize = 65536) {\n    const buffer = new Uint8Array(arrayBuffer);\n    let index = 0;\n    while (true) {\n        const chunk = buffer.subarray(index, index + chunkSize);\n        if (!chunk.length) {\n            break;\n        }\n        yield chunk;\n        index += chunkSize;\n    }\n}\n\n/**\n * @param {Response|ReadableStream|Blob} dataSource\n * @return {AsyncGenerator<Uint8Array>}\n */\nexport async function *iterateAsyncDataSource(dataSource) {\n    if (dataSource instanceof Response) {\n        dataSource = dataSource.body;\n    }\n    if (dataSource instanceof ReadableStream) {\n        yield *iterateReadableStream(dataSource);\n    } else if (dataSource instanceof Blob) {\n        for (const part of iterateBlob(dataSource)) {\n            yield await part;\n        }\n    }\n}\n\n\n/**\n * @param {ReadableStream} stream\n * @return {AsyncGenerator<Uint8Array>}\n */\nexport async function *iterateReadableStream(stream) {\n    const reader = stream.getReader();\n    while (true) {\n        const {done, /** @type {Uint8Array} */ value} = await reader.read();\n        if (done) {\n            break;\n        }\n        yield value;\n    }\n}\n\n/**\n * Iterates Blob (or File).\n * Note: `chunkSize` affects the execution speed\n * @param {Blob} blob\n * @param {Number} [chunkSize=2097152]\n * @return {Generator<Promise<Uint8Array>>|AsyncGenerator<Uint8Array>}\n */\nexport function *iterateBlob(blob, chunkSize = 2 * 1024 * 1024) {\n    let index = 0;\n    while (true) {\n        const blobChunk = blob.slice(index, index + chunkSize);\n        if (!blobChunk.size) {break;}\n\n        yield read(blobChunk);\n        index += chunkSize;\n    }\n\n    async function read(blob) {\n        return new Uint8Array(await blob.arrayBuffer());\n    }\n}\n\n/**\n * Format bytes to human readable format.\n * Trims the tailing zeros.\n *\n * {@link https://stackoverflow.com/a/18650828/11468937}\n * @param {Number} bytes\n * @param {Number} [decimals=2]\n * @returns {String}\n */\nexport function bytesToSize(bytes, decimals = 2) {\n    if (bytes === 0) { return \"0 B\"; }\n    const k = 1024;\n    decimals = decimals < 0 ? 0 : decimals;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return Number.parseFloat((bytes / Math.pow(k, i)).toFixed(decimals)) + \" \" + sizes[i];\n}\n\n/**\n * Formats bytes mostly like Windows does,\n * but in some rare cases the result is different.\n * Check the file with tests.\n * @see win-like-file-sizes.test.js\n * @param {Number} bytes\n * @return {string}\n */\nexport function bytesToSizeWinLike(bytes) {\n    if (bytes < 1024) { return bytes + \" B\"; }\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    let i = Math.floor(Math.log(bytes) / Math.log(1024));\n    let result = bytes / Math.pow(1024, i);\n    if (result >= 1000) {\n        i++;\n        result /= 1024;\n    }\n    return toTruncPrecision3(result) + \" \" + sizes[i];\n}\n\n/**\n * @see trunc-with-precision-3.test.js\n * @param {Number} number\n * @return {string}\n */\nexport function toTruncPrecision3(number) {\n    let result;\n    if (number < 10) {\n        result = Math.trunc(number * 100) / 100;\n    } else if (number < 100) {\n        result = Math.trunc(number * 10) / 10;\n    } else if (number < 1000) {\n        result = Math.trunc(number);\n    }\n    if (number < 0.1) {\n        return result.toPrecision(1);\n    } else if (number < 1) {\n        return result.toPrecision(2);\n    }\n    return result.toPrecision(3);\n}\n\n/**\n * @param {Uint8Array[]} arrays\n * @return {Uint8Array}\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((acc, value) => acc + value.length, 0);\n    const result = new Uint8Array(totalLength);\n    let offset = 0;\n    for (const array of arrays) {\n        result.set(array, offset);\n        offset += array.length;\n    }\n    return result;\n}\n\nexport function red(text) {\n    return [`%c${text}`,  \"color: #f44336; font-weight: bold;\"];\n}\nexport function orange(text) {\n    return [`%c${text}`,  \"color: #ff9800; font-weight: bold;\"];\n}\nexport function green(text) {\n    return [`%c${text}`,  \"color: #4caf50; font-weight: bold;\"];\n}\nexport function cyan(text) {\n    return [`%c${text}`,  \"color: #00bcd4; font-weight: bold;\"];\n}\nexport function blue(text) {\n    return [`%c${text}`,  \"color: #2196f3; font-weight: bold;\"];\n}\n","import {computed, ref} from \"vue\";\nimport {search, searchResult} from \"./search.js\";\nimport {openedFolder} from \"./folders.js\";\n\n\nexport const sort = ref(true);\n\n/** @type {import(\"vue\").Ref<(\"name\"|\"size\"|\"mtime\")>} */\nexport const orderBy = ref(\"name\");\nexport const orders = ref({\n    name: false,\n    size: false,\n    mtime: false,\n});\nexport const reverseOrder = computed(() => orders.value[orderBy.value]);\nexport function toggleOrder() {\n    orders.value[orderBy.value] = !orders.value[orderBy.value];\n}\n\nconst {compare} = new Intl.Collator(undefined, {\n    numeric: true,\n    sensitivity: \"accent\",\n});\n\n// // todo create the list variable (search result -> the list), (opened dir entries -> the list)\n// export const reactiveComparator = computed(() => {\n//     const k = reverseOrder.value ? -1 : 1;\n//     if (sort.value) {\n//         if (orderBy.value === \"name\") {\n//             return (pre, cur) => compare(pre.name, cur.name) * k;\n//         } else if (orderBy.value === \"size\") {\n//             return (pre, cur) => (pre.size - cur.size) * k;\n//         } else if (orderBy.value === \"mtime\") {\n//             return (pre, cur) => (pre.mtime - cur.mtime) * k;\n//         }\n//     }\n//     return (pre, cur) => 0;\n// });\n\nexport function comparator(pre, cur) {\n    const k = reverseOrder.value ? -1 : 1;\n    if (sort.value) {\n        if (orderBy.value === \"name\") {\n            return compare(pre.name, cur.name) * k;\n        } else if (orderBy.value === \"size\") {\n            return (pre.size - cur.size) * k;\n        } else if (orderBy.value === \"mtime\") {\n            return (pre.mtime - cur.mtime) * k;\n        }\n    }\n    return 0;\n}\n\n// grouped by type\nexport const entries = computed(() => {\n    return [\n        ...openedFolder.value.folders.sort(comparator),\n        ...openedFolder.value.files.sort(comparator),\n        ...openedFolder.value.symlinks.sort(comparator),\n        ...openedFolder.value.fifos.sort(comparator),\n        ...openedFolder.value.charDevs.sort(comparator),\n        ...openedFolder.value.blockDevs.sort(comparator),\n        ...openedFolder.value.sockets.sort(comparator),\n    ];\n});\n\n\n/** @type {import(\"vue\").Ref<Number>} */\nexport const limit = ref(50);\n\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const list = computed(() => {\n    if (search.value.length) {\n        return searchResult.value;\n    }\n    return entries.value;\n});\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const listLimited = computed(() => {\n    return list.value.slice(0, limit.value);\n});\n/** @type {import(\"vue\").ComputedRef<Number>} */\nexport const count = computed(() => {\n    if (searchResult.value.length > limit.value) {\n        return searchResult.value.length;\n    }\n    return list.value.length;\n});\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nexport const hoveredEntry = ref(null);\n","import {ref, toRaw, isProxy} from \"vue\";\nimport {bytesToSizeWinLike, dateToDayDateTimeString} from \"../util.js\";\n\nexport const debugMessage = ref(\"\");\nexport function addMessage(message) {\n    debugMessage.value = message;\n}\nexport function appendMessage(message) {\n    debugMessage.value += message;\n}\n\n/**\n * @param {SimpleEntry} entry\n */\nexport function debugMessageFromEntry(entry) {\n    console.log(isProxy(entry) ? \"Proxy:\" : \"Raw:\", toRaw(entry));\n    if (entry.hasErrors) {\n        debugMessage.value = \"\";\n    } else {\n        const name = `\"` + entry.name.slice(0, 20) + (entry.name.length < 20 ? \"\" : \"...\") + `\"`;\n\n        let message = \"\";\n        message += \"mtime \" + `\"${dateToDayDateTimeString(entry.mtime, false)}\"`;\n        message += \" —  btime \" + `\"${dateToDayDateTimeString(entry.btime ?? 0, false)}\"`;\n\n        message += ` — ${name} — ${entry.size} (${bytesToSizeWinLike(entry.size)})`;\n        debugMessage.value = message;\n    }\n}\n","/** @type {ScanEntryType[]} */\nimport {sleep} from \"../util.js\";\n\nexport const entryTypes = [\"folder\", \"file\", \"symlink\", \"fifo\", \"charDev\", \"blockDev\", \"socket\"];\n\nexport class SimpleEntry {\n    // [Symbol.toStringTag] = \"SimpleEntry\"; // Disables reactivity, BTW.\n    /**\n     * @param {SerializableScanEntry} entry\n     * @param {SimpleEntry|null} parent\n     * @param {Map<Number, SimpleScanError>} [errorsIDMap]\n     */\n    constructor(entry, parent, errorsIDMap) {\n        /** @type {String} */\n        this.name = entry.name;\n        /** @type {SimpleEntry|null} */\n        this.parent = parent;\n        /** @type {ScanEntryType} */\n        this.type = entry.type;\n\n        if (entry.size) {\n            /** @type {Number|undefined} */\n            this._size = entry.size;\n        }\n        if (entry.mtime) {\n            /** @type {Number|undefined} */\n            this.mtime = entry.mtime;\n        }\n        if (entry.btime) {\n            /** @type {Number|undefined} */\n            this.btime = entry.btime;\n        }\n\n        if (entry.errors) {\n            /** @type {SimpleScanError[]}|undefined} */\n            this.errors = entry.errors.map(id => errorsIDMap.get(id));\n        }\n\n        if (entry.pathTo) {\n            /** @type {String|undefined} */\n            this.pathTo = entry.pathTo;\n        }\n        if (entry.content) {\n            /** @type {String|undefined} */\n            this.content = entry.content;\n        }\n    }\n    /** @param {SimpleEntry} entry */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {SimpleEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n    /** @param {SimpleEntry[]} entries\n     *  @param {Number} total */\n    addHardlinks(entries, total) {\n        /** @type {SimpleEntry[]|undefined} */\n        this.hardlinks = entries;\n        /** @type {Number|undefined} */\n        this.hardlinksTotal = total;\n    }\n\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent && size) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this._size || 0;\n    }\n\n    /** @return {SimpleEntry[]} */\n    get folders() {\n        return this.children?.filter(e => e.type === \"folder\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get files() {\n        return this.children?.filter(e => e.type === \"file\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get symlinks() {\n        return this.children?.filter(e => e.type === \"symlink\") || [];\n    }\n\n    /** @return {SimpleEntry[]} */\n    get fifos() {\n        return this.children?.filter(e => e.type === \"fifo\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get charDevs() {\n        return this.children?.filter(e => e.type === \"charDev\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get blockDevs() {\n        return this.children?.filter(e => e.type === \"blockDev\") || [];\n    }\n    /** @return {SimpleEntry[]} */\n    get sockets() {\n        return this.children?.filter(e => e.type === \"socket\") || [];\n    }\n\n    /** @return {Boolean} */\n    get isEmpty() {\n        return !Boolean(this.children?.length);\n    }\n    /** @return {Boolean} */\n    get hasErrors() {\n        return Boolean(this.errors?.length);\n    }\n    /** @return {SimpleEntry} */\n    get root() {\n        if (!this.parent) {\n            return this;\n        }\n        return this.parent.root;\n    }\n    /** @return {SimpleEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n    get contentTypesStats() {\n        return this.getContentTypesStats();\n    }\n    _getContentTypesStats(deep = true, result = {}, target = this) {\n        if (target.type === \"folder\" && target.children) {\n            for (const child of target.children) {\n                if (!result[child.type]) {\n                    result[child.type] = 1;\n                } else {\n                    result[child.type]++;\n                }\n                if (child.type === \"folder\" && deep) {\n                    this._getContentTypesStats(deep, result, child);\n                }\n            }\n            return result;\n        }\n    }\n    getContentTypesStats(deep = true) {\n        console.time(\"getContentTypesStats\");\n        const result = this._getContentTypesStats(deep);\n        console.timeEnd(\"getContentTypesStats\");\n        return result;\n    }\n\n    /** @return {Generator<SimpleEntry>} */\n    *[Symbol.iterator]() {\n        yield this;\n        if (this.children) {\n            for (const child of this.children) {\n                yield * child;\n            }\n        }\n    }\n\n    /** @return {SimpleEntry[]} */\n    flat() {\n        return [...this];\n    }\n\n    /**\n     * @param {SimpleEntry[]} entries\n     * @return {SimpleEntry[]}\n     */\n    static flat(entries) {\n        return entries.map(e => [...e]).flat();\n    }\n\n    get pathString() {\n        return this.getPathString();\n    }\n\n    /**\n     * @param {ScanMeta} [meta]\n     * @return {string}\n     */\n    getPathString(meta) {\n        const names = this.path.map(e => e.name);\n        let pathStr;\n        if (meta) {\n            pathStr = [...meta.path, ...names].join(meta.separator || \"/\");\n        } else {\n            pathStr = names.join(\"/\");\n        }\n        if (pathStr.startsWith(\"//\")) {\n            return pathStr.slice(1);\n        }\n        return pathStr;\n    }\n}\n\n/**\n * Like `ScanError`, but without `path`.\n * @typedef {Object} SimpleScanError\n * @property {String} code\n * @property {String} syscall\n * @property {Number} errno\n **/\n\nexport class EntryStreamParser {\n    constructor() {\n        this.rootId = 0;\n        /** @type {Map<Number, SimpleEntry>} */\n        this.map = new Map();\n        /** @type {Map<String, SimpleEntry[]>} */\n        this.hidMap = new Map();\n    }\n\n    /** @param {ScanMeta} meta */\n    setMeta(meta) {\n        /** @type {ScanMeta} */\n        this.meta = meta;\n        /** @type {Object<String, Number>} */\n        const errorsMap = meta.errorsMap;\n        if (!errorsMap) {\n            return;\n        }\n        /** @type {Map<Number, SimpleScanError>|undefined} */\n        this.errorsIDMap = new Map(Object.entries(errorsMap)\n            .map(([k, v]) => {\n                const [code, syscall, errno] = k.split(\":\");\n                return [v, {code, syscall, errno: Number(errno)}];\n            }));\n    }\n\n    /** @param {SerializableScanEntry[]} sEntriesPart\n     * @return {{root: SimpleEntry, rootUpdated: boolean, processed: number}}\n     */\n    parse(sEntriesPart) {\n        let rootUpdated = false;\n        for (const entry of sEntriesPart) {\n            /** @type {SimpleEntry|null}*/\n            const parent = this.map.get(entry.pid) ?? null;\n            const simpleEntry = new SimpleEntry(entry, parent, this.errorsIDMap);\n            if (entry.type === \"folder\") {\n                this.map.set(entry.id, simpleEntry);\n            }\n            parent?.addChild(simpleEntry);\n            if (entry.hid) {\n                const array = this.hidMap.get(entry.hid) || [];\n                this.hidMap.set(entry.hid, [...array, simpleEntry]);\n            }\n            if (entry.pid === this.rootId) {\n                rootUpdated = true;\n            }\n        }\n        return {\n            root: this.map.get(this.rootId),\n            rootUpdated,\n            processed: sEntriesPart.length,\n        }\n    }\n\n    processHIDMapAsync() {\n        if (!this.hidMap.size) {\n            return;\n        }\n        console.log(\"[hidMap]:\", this.hidMap);\n        console.time(\"hidMap\");\n        processHIDMapAsync(this.hidMap)\n            .then(() => console.timeEnd(\"hidMap\"));\n    }\n}\n\nasync function processHIDMapAsync(hidMap) {\n    let i = 0;\n    let time = 0; // `0` to do `sleep` on the first iteration\n\n    for (const [hid, simpleEntries] of hidMap.entries()) {\n        if (!(i++ % 1000)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n            }\n        }\n\n        /** @type {Number}*/\n        const totalLinks = Number(hid.split(\":\")[1]);\n        simpleEntries.forEach(e => {\n            e.addHardlinks(simpleEntries, totalLinks);\n        });\n    }\n}\n\n/** @type {SimpleEntry} */\nexport const folderDummy = new SimpleEntry({\n    type: \"folder\",\n    name: \"\",\n    pid: null,\n}, null);\n","import {ref} from \"vue\";\n\nexport const scanParsing         = ref(false);\nexport const scanParsingProgress = ref(0);\nexport const searching           = ref(false);\nexport const searchAwaiting      = ref(false);\n","import {isReactive, ref, shallowRef, toRaw, watch, watchEffect, triggerRef} from \"vue\";\nimport {blue, bytesToSizeWinLike, debounce, sleep} from \"../util.js\";\nimport {openedFolder} from \"./folders.js\";\nimport {comparator, limit, orderBy, reverseOrder} from \"./entries.js\";\nimport * as debug from \"./debug.js\";\nimport {entryTypes} from \"./entry.js\";\nimport {scanParsing, searchAwaiting, searching} from \"./state.js\";\n\n/** @type {import(\"vue\").Ref<string>} */\nexport const search = ref(\"\"); // [v-model]\nexport function clearSearch() {\n    search.value = \"\";\n}\n\n/** @type {import(\"vue\").ShallowRef<SimpleEntry[]>} */\nexport const searchResult = shallowRef([]);\nfunction clearSearchResult() {\n    setSearchResult([]);\n}\n/** * @param {SimpleEntry[]} result */\nfunction setSearchResult(result) {\n    /** @type {SimpleEntry[]} */\n    const rawResult = toRaw(result);\n    searchResult.value = rawResult;\n    limit.value = 50;\n\n    addSearchResultToGlobalThis(rawResult);\n}\n\nwatch([orderBy, reverseOrder], () => {\n    sortSearch();\n});\n\nexport function sortSearch() {\n    //todo sort by parts\n    const time = Date.now();\n    searchResult.value.sort(comparator);\n    const timeTotal = Date.now() - time;\n    console.log(\"[search][sort][time]\", timeTotal, \"ms\");\n    triggerRef(searchResult);\n    return timeTotal;\n}\n\n/** @param {SimpleEntry[]} rawResult */\nfunction addSearchResultToGlobalThis(rawResult) {\n    /** @type {SimpleEntry[]} */\n    globalThis.search = rawResult;\n    console.log(\"globalThis.search:\", rawResult);\n    Object.defineProperty(globalThis.search, \"download\", {\n        get() {\n            console.log(\"download\"); // todo\n        }\n    });\n    Object.defineProperty(globalThis.search, \"names\", {\n        get() {\n            return globalThis.search.map(entry => entry.name);\n        }\n    });\n    Object.defineProperty(globalThis.search, \"namelist\", {\n        get() {\n            return globalThis.search.map(entry => entry.name).join(\"\\n\");\n        }\n    });\n}\n\nlet resolve = () => {};\nlet scanParsingCompleted = Promise.resolve(true);\nwatchEffect(() => {\n    if (scanParsing.value) {\n        resolve(false);\n        scanParsingCompleted = new Promise(r => resolve = r);\n    } else {\n        resolve(true);\n    }\n});\n\nfunction simplify(input) {\n    // todo .normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n    //  (It required to use a cache since it's a slow operation, and\n    //   only for the normalized values (not just lower cased) in order to save the memory consuming.)\n    // \"đ Crème Bruląśćńżółźćęéйeё\".normalize(\"NFD\").replace(/\\p{Diacritic}/gu, \"\")\n    return input\n        .toLowerCase();\n}\n\nwindow.addEventListener(\"storage\", event => {\n    if (event.key !== \"search-sync\") {\n        return;\n    }\n    document.querySelector(\"input\").value = event.newValue;\n    document.querySelector(\"input\").dispatchEvent(new Event(\"input\"));\n});\n\n//todo check linked list perf for large search\nconst performSearchDebounced = debounce(performSearch, 300);\nasync function performSearch() {\n    const searchSync = new URL(location.href).searchParams.get(\"searchSync\");\n    if (searchSync) {\n        localStorage.setItem(\"search-sync\", search.value);\n        document.title = `Search...`;\n    }\n\n    // Await while the scan parsing is completed, return `false` if there is a new `performSearch` call while parsing.\n    if (false === await scanParsingCompleted) {\n        return;\n    }\n\n    const folder = openedFolder.value;\n    const request = search.value;\n\n    // Do unProxy. Up to x40 in comparison with default reactive ref.\n    const folderRaw = isReactive(folder) ? toRaw(folder) : folder;\n\n    const time1 = performance.now();\n    searching.value = true;\n    const {result, search: searchText} = await searcher(folderRaw, request);\n    searching.value = false;\n    searchAwaiting.value = false;\n    if (!result) {\n        return;\n    }\n    const searchTime = performance.now() - time1;\n    debug.addMessage(`Search time: ${searchTime.toFixed(2)} ms; `);\n    await sleep();\n\n    setSearchResult(result);\n    const sortTime = sortSearch();\n    debug.appendMessage(`Sort time: ${sortTime.toFixed(2)} ms; `);\n    await sleep();\n\n    console.time(\"search result size computing\");\n    const resultSet = new Set(result);\n    const allSize = result.reduce((acc, val) => computeEntrySize(val, resultSet) + acc, 0);\n    const filesSize = result.filter(entry => entry.type !== \"folder\").reduce((acc, val) => val.size + acc, 0);\n    console.timeEnd(\"search result size computing\");\n    console.log({allSize, filesSize});\n\n    debug.appendMessage(`${result.length} items; size: ${bytesToSizeWinLike(filesSize)} (${bytesToSizeWinLike(allSize)});  search: ${searchText}`);\n\n    if (searchSync) {\n        document.title = `[${result.length}] found`;\n    }\n}\n\n\n/**\n * The recursive size computing of an `SimpleEntry`.\n * Skips the entries of `excludeSet`.\n * @param {SimpleEntry} entry\n * @param {Set<SimpleEntry>} excludeSet\n * @return {Number}\n */\nfunction computeEntrySize(entry, excludeSet) {\n    if (entry.type !== \"folder\") {\n        return entry.size;\n    }\n    let childrenSize = 0;\n    for (const child of entry.children || []) {\n        if (excludeSet.has(child)) {\n            continue;\n        }\n        if (child.type === \"folder\") {\n            childrenSize += computeEntrySize(child, excludeSet);\n        } else {\n            childrenSize += child.size;\n        }\n    }\n    return childrenSize;\n}\n\n/**\n * @param {SimpleEntry} folder\n * @param {string} search\n * @return {Promise<{result: SimpleEntry[], search: string}>}\n */\nasync function searcher(folder, search) {\n    console.log(\"[search]      \", search);\n\n    let strict;\n    if (search.startsWith(\"//\")) {\n        strict = true;\n        search = search.slice(2);\n    } else {\n        strict = false;\n        const normalized = simplify(search);\n        if (normalized !== search) {\n            console.log(\"[search][norm]\", normalized);\n            search = normalized;\n        }\n    }\n\n    let searchHelp = null;\n\n    /** @type {\"includes\"|\"startsWith\"|\"endsWith\"|\"===\"} */\n    let subStringMatcher = \"includes\";\n\n    // Simplified glob search.\n    // For \"startsWith\", \"endsWith\" and \"full match\" search.\n    // /*/*.html     - ends with \".html\"\n    // ///*/*.html   - ends with \".html\" case sensitive\n    // /*/.*         - starts with \".\"\n    // /8/.*         - starts with \".\" (the same, just to no need to use Shift key)\n    // /*/index.html - matches \"index.html\"\n    const isSimpleGlobSearch = search.startsWith(\"/*/\") || search.startsWith(\"/8/\");\n    if (isSimpleGlobSearch) {\n        const subSearch = search.slice(\"/*/\".length);\n        const starts = subSearch.startsWith(\"*\");\n        const ends = subSearch.endsWith(\"*\");\n\n        if (starts && ends) {\n            subStringMatcher = \"includes\";\n            search = subSearch.slice(1, -1);\n            searchHelp = `includes \"${search}\"`;\n        } else\n        if (starts) {\n            subStringMatcher = \"endsWith\";\n            search = subSearch.slice(1);\n            searchHelp = `ends with \"${search}\"`;\n        } else\n        if (ends) {\n            subStringMatcher = \"startsWith\";\n            search = subSearch.slice(0, -1);\n            searchHelp = `starts with \"${search}\"`;\n        } else {\n            subStringMatcher = \"===\";\n            search = subSearch;\n            searchHelp = `matches \"${search}\"`;\n        }\n    }\n\n    /** @type {function(String, String): Boolean} */\n    let stringMatcher;\n    if (strict) {\n        if (subStringMatcher === \"===\") {\n            stringMatcher = (string, substring) => string === substring;\n        } else {\n            stringMatcher = (string, substring) => string[subStringMatcher](substring);\n        }\n    } else {\n        if (subStringMatcher === \"===\") {\n            stringMatcher = (string, substring) => simplify(string) === substring;\n        } else {\n            stringMatcher = (string, substring) => simplify(string)[subStringMatcher](substring);\n        }\n    }\n\n    function justSearch(substring) {\n        return findAll(folder, (entry) => {\n            return stringMatcher(entry.name, substring);\n        });\n    }\n\n    if ([\"https://\", \"http://\"].some(prefix => search.startsWith(prefix))) {\n        const url = new URL(search);\n\n        if (url.hostname === \"www.youtube.com\" && url.pathname === \"/watch\") {\n            search = url.searchParams.get(\"v\");\n        } else {\n            const pathnameEndsWithSlash = url.pathname.length > 1 && url.pathname.endsWith(\"/\");\n            const pathname = pathnameEndsWithSlash ? url.pathname.slice(0, -1) : url.pathname;\n            const resourceFullName = pathname.match(/[^\\/]+$/)?.[0];\n            if (!resourceFullName) {\n                return {result: [], search};\n            }\n            const {\n                name: resName,\n                ext: resExt, // [note] it can be not the file extension, but a part of a nickname (inst url, for example)\n            } = resourceFullName.match(/(?<name>.+)(\\.(?<ext>.+))$/)?.groups || {name: resourceFullName};\n            search = resName + ((pathnameEndsWithSlash && resExt) ? `.${resExt}` : \"\");\n        }\n\n        const result = await justSearch(search);\n        return {result, search};\n    }\n\n\n    /**\n     * @example\n     * /size:0       - find 0 byte size entries\n     * /size/120     - the same, find 120 bytes size entries\n     * /size:120+80  - find from 120 to 200\n     * /size:120+-20 - find from 100 to 120\n     * /size:120~20  - find from  80 to 140\n     * /size:120-220 - find from 120 to 220\n     * /size:220-120 - find from 120 to 220\n     * /size:^2      - size.toString() starts with \"2\"\n     * /size:%2      - size.toString() includes    \"2\"\n     * /size:$0      - size.toString() ends with   \"0\"\n     * /s/0          - find 0 byte size entries, just a short form\n     * /s/120 900    - find 120900 bytes size entries\n     * /s/120,900    - find 120900 bytes size entries\n     *\n     * /size:120~    - find from 120 -5% to 120 +5%\n     * /size:120~~   - find from 120-10% to 120+10%\n     * /size:120~~~  - find from 120-15% to 120+15%\n     *\n     * /sizek:5      - find 5 KB ± 0.1 KB\n     * /sizek:50     - find 50 KB  ± 1 KB\n     * /sizek:500    - find 500 KB ± 1 KB\n     * /sizem:5      - find 5 MB ± 0.1 MB\n     * /sizeg/50     - find 50 GB ± 1 GB\n     *\n     * /size:5m      - find 5 MB ± 0.1 MB\n     *\n     * /s/12.9       - find 12 bytes size entries\n     * /sk/12.9      - find 12.9 KB ± 1 KB\n     *\n     * /sizek:5!     - find 5 KB + (0 - 0.01) KB\n     * /sizek:5!!    - find 5 KB + (0 - 0.001) KB\n     * /s/5k!!       - find 5 KB + (0 - 0.001) KB\n     * /sizem:50!    - find 50 MB + (0 - 0.1) MB\n     * /sizem:50!!   - find 50 MB + (0 - 0.01) MB\n     */\n    const r1 = `\\\\/s(ize)?(?<defaultPrefix>b|k|m|g|t)?[:\\\\/]`;\n    if (search.match(new RegExp(r1))) {\n        const r2   = `(?<extra1>(?<caret>\\\\^)|(?<dollar>\\\\$)|(?<percent>%))?`;\n        const r3   = `((?<sizeString1>\\\\s*\\\\d[\\\\d\\\\s\\\\,]*)((?<dotDecimal1>\\\\.(?<decimal1>\\\\d+)?))?(?<prefix1>b|k|m|g|t)?(?<exclamations>!+)?)`;\n\n        const r4_1 = `(?<extra2>(?<plus>\\\\+)|(?<minus>\\\\-)|(?<tildes>\\\\~+))`;\n        const r4_2 = `((?<sizeString2>\\\\s*-?\\\\s*\\\\d[\\\\d\\\\s\\\\,]*)((?<dotDecimal2>\\\\.(?<decimal2>\\\\d+)?))?(?<prefix2>b|k|m|g|t)?)?`;\n        const r4   = `(?<range>${r4_1}${r4_2})?`;\n\n        const regex = new RegExp(r1 + r2 + r3 + r4);\n\n        const {\n            /** @type {\"b\"|\"k\"|\"m\"|\"g\"|\"t\"|undefined} */\n            defaultPrefix,\n\n            /** @type {String|undefined} */\n            caret,\n            /** @type {String|undefined} */\n            dollar,\n            /** @type {String|undefined} */\n            percent,\n\n            /** @type {String|undefined} */\n            sizeString1,\n            /** @type {String|undefined} */\n            decimal1,\n            /** @type {String|undefined} */\n            prefix1,\n            /** @type {String|undefined} */\n            exclamations,\n\n            /** @type {String|undefined} */\n            plus,\n            /** @type {String|undefined} */\n            minus,\n            /** @type {String|undefined} */\n            tildes,\n\n            /** @type {String|undefined} */\n            sizeString2,\n            /** @type {String|undefined} */\n            decimal2,\n            /** @type {String|undefined} */\n            prefix2,\n\n        } = search.match(regex)?.groups || {};\n\n        if (sizeString1) {\n            console.log({\n                defaultPrefix,\n                extra1: {caret, dollar, percent},\n                sizeString1, decimal1, prefix1, exclamations,\n                extra2: {plus, minus, tildes, sizeString2, decimal2, prefix2},\n            });\n\n            let text;\n            let result;\n\n            let sizeNum = Number(sizeString1.replaceAll(/[\\s,]/g, \"\"));\n            const size = sizeNum.toString();\n\n            let size2Num = sizeString2 && Number(sizeString2.replaceAll(/[\\s,]/g, \"\"));\n            const size2 = size2Num?.toString();\n\n\n            const dec1 = decimal1 ? Number(\"0.\" + decimal1) : 0;\n            const dec2 = decimal2 ? Number(\"0.\" + decimal2) : 0;\n            sizeNum  = multiplyByPrefix(sizeNum  + dec1, prefix1 || defaultPrefix);\n            size2Num = multiplyByPrefix(size2Num + dec2, prefix2 || defaultPrefix);\n\n\n            /**\n             * @param {Number} a\n             * @param {Number} b\n             * @return {Promise<void>}\n             */\n            async function rangeSearch(a, b) {\n                const {_min, max} = a < b ? {_min: a, max: b} : {_min: b, max: a};\n                const min = Math.max(0, _min);\n                text = `Size search from ${bytesToSizeWinLike(min)} to ${bytesToSizeWinLike(max)}`;\n                result = await findAll(folder, entry => {\n                    return entry.size >= min && entry.size <= max;\n                });\n            }\n            function multiplyByPrefix(value, prefix = \"b\") {\n                if (value === undefined) {\n                    return;\n                }\n                const prefixes = [\"b\", \"k\", \"m\", \"g\", \"t\"];\n                return Math.trunc(value * (1024 ** prefixes.indexOf(prefix)));\n            }\n\n\n            if (caret) { // ^\n                text = `Size search starts with \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().startsWith(size);\n                });\n            } else\n            if (dollar) { // $\n                text = `Size search ends with \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().endsWith(size);\n                });\n            } else\n            if (percent) { // %\n                text = `Size search includes \"${size}\"`;\n                result = await findAll(folder, entry => {\n                    return entry.size.toString().includes(size);\n                });\n            } else\n            if (plus && size2) { // +\n                await rangeSearch(sizeNum, sizeNum + size2Num);\n            } else\n            if (minus && size2) { // -\n                await rangeSearch(sizeNum, size2Num);\n            } else\n            if (tildes) {  // ~ // ~~ // ~~~\n                if (size2) {\n                    await rangeSearch(sizeNum - size2Num, sizeNum + size2Num);\n                } else {\n                    const count = tildes.length;\n                    const diff = Math.trunc(sizeNum * 5 * count / 100);\n                    await rangeSearch(sizeNum - diff, sizeNum + diff);\n                }\n            } else { // Default\n                const prefix = prefix1 || defaultPrefix;\n                if (prefix && prefix !== \"b\") {\n\n                    let orders = size.length;\n                    let diff = multiplyByPrefix(1, prefix);\n                    if (orders === 1) {\n                        diff = Math.trunc(diff / 10);\n                    }\n\n                    let from = sizeNum - diff;\n                    let to   = sizeNum + diff;\n                    if (exclamations) {\n                        from = sizeNum;\n                        if (exclamations.length > 1) {\n                            to = sizeNum + Math.trunc(diff / 10);\n                        }\n                    }\n                    await rangeSearch(from, to);\n                } else {\n                    text = `Size search ${bytesToSizeWinLike(sizeNum)}`;\n                    result = await findAll(folder, entry => {\n                        return entry.size === sizeNum;\n                    });\n                }\n            }\n            console.log(...blue(text));\n            return {result, search: text};\n        } else {\n            const text = \"No size to search\";\n            console.log(...blue(text));\n            return {result: [], search: text};\n        }\n    }\n    if (search.startsWith(\"/\")) {\n        const {type, word} = search.match(/\\/type:(?<type>[^\\/]+)\\/?(?<word>[^\\/]*)/)?.groups || {};\n        if (type) {\n            console.log({type, word});\n            if (entryTypes.includes(type)) {\n                const result = await findAll(folder, entry => {\n                    return entry.type === type && stringMatcher(entry.name, word);\n                });\n                return {result, search};\n            }\n        }\n    } else\n    if (search.includes(\" \")) {\n        const parts = search.split(\" \").filter(o => o);\n        if (parts.length > 1) {\n            let result = await justSearch(parts.shift());\n            let curWord;\n            while (curWord = parts.shift()) {\n                result = result.filter(entry => stringMatcher(entry.name, curWord));\n            }\n            return {result, search};\n        }\n    }\n    return {result: await justSearch(search), search: (searchHelp || search)};\n}\n\nwatch(search, async (newValue, oldValue) => {\n    const isEmptyString = !newValue;\n    if (isEmptyString) {\n        clearSearchResult();\n        return;\n    }\n    searchAwaiting.value = true;\n\n    // In order to \"no debounce by paste event\"\n    if (newValue.length - oldValue.length > 1) {\n        await performSearch();\n    } else {\n        await performSearchDebounced();\n    }\n});\n\n/**\n * @param {SimpleEntry} folder\n * @param {function(SimpleEntry)} predicate\n * @return {Promise<SimpleEntry[]>}\n */\nasync function findAll(folder, predicate) {\n    let res = [];\n    let time = Date.now();\n    for (const entries of listAllEntries(folder)) {\n        const curTime = Date.now();\n        if (curTime - time > 15) {\n            time = curTime;\n            await sleep();\n        }\n        for (const entry of entries) {\n            if (predicate(entry)) {\n                res.push(entry);\n            }\n        }\n    }\n    return res;\n}\n\n/**\n * List all entries by parts.\n * @param {SimpleEntry} folder\n * @return {Generator<SimpleEntry[]>}\n */\nfunction *listAllEntries(folder) {\n    const partSize = 1000;\n    /** @type {SimpleEntry[]} */\n    let list = [];\n    /** @param {SimpleEntry} folderEntry */\n    function *takePart(folderEntry) {\n        for (const entry of (folderEntry.children || [])) {\n            if (entry.type === \"folder\") {\n                yield *takePart(entry);\n            }\n            list.push(entry);\n            if (list.length === partSize) {\n                yield list;\n                list = [];\n            }\n        }\n    }\n    yield *takePart(folder);\n    yield list;\n}\n","import {EntryStreamParser} from \"./entry.js\";\nimport {appendScript, iterateAsyncDataSource, sleep} from \"../util.js\";\n\n\n/**\n * @param {Blob|Response} input\n * @return {AsyncGenerator<{meta:ScanMeta, root: SimpleEntry, rootUpdated: boolean, processed: number}>}\n */\nexport async function *parseScan(input) {\n    const parser = new EntryStreamParser();\n\n    let contentType;\n    if (input instanceof Response) {\n        contentType = input.headers.get(\"content-type\");\n    } else if (input instanceof Blob) {\n        contentType = input.type;\n    }\n    /** @type {ScanMeta} */\n    let meta;\n    if (isGZip(contentType)) {\n        console.log(\"parseGZippedJSONScan\");\n        for await (const obj of parseGZippedJSONScan(input)) {\n            if (!meta) {\n                meta = /** @type {ScanMeta} */ obj.shift();\n                parser.setMeta(meta);\n            }\n            yield {meta, ...parser.parse(/** @type {SerializableScanEntry[]} */ obj)};\n        }\n    } else if (isJSON(contentType)) {\n        console.log(\"streamParseJSONScan\");\n        for await (const array of streamParseJSONScan(input)) {\n            if (!meta) {\n                meta = /** @type {ScanMeta} */ array.shift();\n                parser.setMeta(meta);\n            }\n            yield {meta, ...parser.parse(/** @type {SerializableScanEntry[]} */ array)};\n        }\n    }\n    parser.processHIDMapAsync();\n}\n\n\n/**\n * @param {Response|ReadableStream|Blob} input\n * @return {AsyncGenerator<FlatScanResultEntry[]>}\n */\nasync function *streamParseJSONScan(input) {\n    const decoder = new TextDecoder();\n    const textParser = new TextParser();\n    let i = 0, time = 0;\n    for await (const uint8Array of iterateAsyncDataSource(input)) {\n        if (!(i++ % 10)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n                // console.log(\"sleep\", i);\n            }\n        }\n        const textPart = decoder.decode(uint8Array, {stream: true});\n        const scanResultEntries = textParser.parsePart(textPart);\n        if (scanResultEntries.length) {\n            yield scanResultEntries;\n        }\n    }\n}\n\n/**\n * @param {Response|Blob} input\n * @return {AsyncGenerator<FlatScanResultEntry[]>}\n */\nasync function *parseGZippedJSONScan(input) {\n    const decoder = new TextDecoder();\n    const textParser = new TextParser();\n    let i = 0, time = 0;\n    for await (const uint8Array of unGZipAsyncIterator(input)) {\n        if (!(i++ % 20)) {\n            const timeNow = Date.now();\n            if (timeNow - time > 15) {\n                time = timeNow;\n                await sleep();\n                // console.log(\"sleep\", i);\n            }\n        }\n        const textPart = decoder.decode(uint8Array, {stream: true});\n        const scanResultEntries = textParser.parsePart(textPart);\n        if (scanResultEntries.length) {\n            yield scanResultEntries;\n        }\n    }\n}\n\n/**\n * @param {Response|ReadableStream|Blob} input\n * @return {Generator<Uint8Array>}\n */\nasync function *unGZipAsyncIterator(input) {\n    if (!isPakoLoaded()) {\n        await loadPako();\n    }\n    let chunks = [];\n    const inflator = new pako.Inflate();\n    pako.Inflate.prototype.onData = function (chunk) {\n        chunks.push(chunk);\n    };\n    for await (const u8Array of iterateAsyncDataSource(input)) {\n        inflator.push(u8Array);\n        for (const chunk of chunks) {\n            yield chunk;\n        }\n        chunks = [];\n    }\n    yield inflator.result;\n    if (inflator.err) {\n        console.error(inflator.msg);\n    }\n}\n\n\nexport class TextParser {\n    buffer = \"\";\n    startHandled = false;\n    metaLines = [];\n    objects = [];\n\n    trimComma(text) {\n        return text.endsWith(\",\") ? text.slice(0, -1) : text;\n    }\n\n    handleStart(line) {\n        if (line === \"[\") { // the first line\n            return;\n        }\n        if (line === \"\") { // meta is separated from the main content by \"\\n\"\n            this.objects.push(this.metaLines.join(\"\"));\n            this.startHandled = true;\n            return;\n        }\n        this.metaLines.push(line);\n    }\n\n    /**\n     * @param {String} line\n     * @param isLastLine\n     */\n    handleLine(line, isLastLine) {\n        if (isLastLine) {\n            this.buffer += line;\n            return;\n        }\n        if (this.buffer) {\n            this.objects.push(this.buffer + line);\n            this.buffer = \"\";\n        } else {\n            this.objects.push(line);\n        }\n    }\n\n    /**\n     * May return an empty array\n     * @param {String} textPart\n     * @return {FlatScanResultEntry[]}\n     * */\n    parsePart(textPart) {\n        const isLastPart = textPart.endsWith(\"\\n]\");\n        /** @type {String[]} */\n        const lines = textPart.split(\"\\n\");\n\n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i];\n            const isLastLine = i === lines.length - 1;\n\n            if (isLastLine && isLastPart) {\n                continue;\n            }\n\n            if (!this.startHandled) {\n                this.handleStart(line, isLastLine);\n            } else {\n                this.handleLine(line, isLastLine);\n            }\n        }\n        try {\n            /** @type {FlatScanResultEntry[]} */\n            const result = JSON.parse(`[${this.trimComma(this.objects.join(\"\"))}]`);\n            this.objects = [];\n            return result;\n        } catch (e) {\n            console.log(`[${this.trimComma(this.objects.join(\"\"))}]`);\n            console.log(this.objects);\n            console.log(this, {isLastPart, textPart});\n            throw e;\n        }\n\n    }\n\n}\n\n\nlet pakoIsLoaded = false;\nasync function loadPako() {\n    if (!pakoIsLoaded) {\n        const src = \"https://cdn.jsdelivr.net/npm/pako@2.0.4/dist/pako_inflate.min.js\";\n        const integrity = \"sha256-ZIKs3+RZEULSy0dR6c/mke8V9unZm9vuh05TqvtMdGU=\";\n        await appendScript(src, integrity);\n        pakoIsLoaded = true;\n        console.log(\"pako is loaded\");\n    }\n}\nfunction isPakoLoaded() {\n    return pakoIsLoaded;\n}\n\n\n/**\n * \"application/x-gzip\"\n * \"application/gzip\"\n * @param contentType\n * @return {Boolean}\n */\nfunction isGZip(contentType) {\n    return Boolean(contentType.match(/^application\\/.*?gzip/));\n}\n\n/**\n * \"application/json\"\n * \"application/json; charset=utf-8\"\n * @param contentType\n * @return {Boolean}\n */\nfunction isJSON(contentType) {\n    return Boolean(contentType.match(/^application\\/.*?json/));\n}\n","import {computed, ref, watch, shallowRef, triggerRef} from \"vue\";\nimport {clearSearch} from \"./search.js\";\nimport {folderDummy} from \"./entry.js\";\nimport {dateToDayDateString, sleep} from \"../util.js\";\nimport {addMessage} from \"./debug.js\";\nimport {parseScan} from \"./scan-parser.js\";\nimport {limit} from \"./entries.js\";\nimport {scanParsing, scanParsingProgress} from \"./state.js\";\n\n\n/** @type {import(\"vue\").ShallowRef<ScanMeta>} */\nexport const meta = shallowRef(null);\n/** @type {import(\"vue\").ShallowRef<SimpleEntry>} */\nexport const root = shallowRef(null);\n\n\nfunction updateParsingState() {\n    triggerRef(openedFolder);\n}\n\nclass ExecutionState {\n    constructor() {\n        this.abortRequested = false;\n        this._promise = Promise.resolve();\n        this._resolve = () => {};\n    }\n    abort() {\n        this.abortRequested = true;\n        return this._promise;\n    }\n    start() {\n        this._promise = new Promise(r => this._resolve = r);\n    }\n    abortIfRequested() {\n        if (!execution.abortRequested) {\n            return false;\n        }\n        this.abortRequested = false;\n        this._resolve();\n        return true;\n    }\n}\nconst execution = new ExecutionState();\n/**\n * @param {Blob|Response} input\n * @return {Promise<Boolean>}\n */\nexport async function setScan(input) {\n    if (scanParsing.value) {\n        await execution.abort();\n    }\n    scanParsingProgress.value = 0;\n    scanParsing.value = true;\n    execution.start();\n\n    let metaInited = false;\n    let rootInited = false;\n\n    const startTime = Date.now();\n    let time = Date.now();\n    let processedTotal = 0;\n    let total;\n    for await (const {meta: scanMeta, root: rootEntry, rootUpdated: rootContentUpdated, processed} of parseScan(input)) {\n        processedTotal += processed;\n        if (total) {\n            const percentStr = (processedTotal / total * 100).toPrecision(3);\n            scanParsingProgress.value = Number(percentStr);\n        }\n\n        if (execution.abortIfRequested()) {\n            console.log(`[setScan][time][aborted]`, Date.now() - startTime, \"ms\");\n            return false;\n        }\n        if (!metaInited && scanMeta) {\n            meta.value = scanMeta;\n            metaInited = true;\n            total = scanMeta.total;\n            processedTotal -= 1;\n        }\n        if (!rootInited && rootEntry) {\n            root.value = rootEntry;\n            globalThis.root = rootEntry;\n            openFolder(rootEntry);\n            rootInited = true;\n        }\n        const now = Date.now();\n        if (rootContentUpdated || now - time > 50) {\n            time = now;\n            updateParsingState();\n            await sleep();\n        }\n    }\n    updateParsingState();\n    console.log(`[setScan][time]:`, Date.now() - startTime, \"ms\");\n\n    scanParsing.value = false;\n    return true;\n}\n\n/** @type {import(\"vue\").ComputedRef<string>} */\nexport const separator = computed(() => {\n    return meta.value?.separator || \"/\";\n});\n/** @type {import(\"vue\").ComputedRef<string[]>} */\nexport const scanRootPath = computed(() => {\n    return meta.value?.path || [];\n});\n\n\n/** @type {import(\"vue\").ShallowRef<SimpleEntry>} */\nexport const openedFolder = shallowRef(folderDummy);\n/** @type {import(\"vue\").ComputedRef<SimpleEntry[]>} */\nexport const openedFolders = computed(() => {\n    return openedFolder.value.path;\n});\n\n/** @param {SimpleEntry} entry */\nexport function openFolder(entry) {\n    clearSearch();\n    openedFolder.value = entry;\n    limit.value = 50;\n\n    /** @type {SimpleEntry} */\n    globalThis.folder = entry;\n    console.log(\"globalThis.folder:\", entry);\n}\nObject.defineProperty(globalThis, \"flat\", {\n    get() {\n        return globalThis.folder?.flat();\n    }\n});\n\nexport function goBack() {\n    if (openedFolder.value.parent) {\n        openFolder(openedFolder.value.parent);\n    }\n}\n/** @type {import(\"vue\").ComputedRef<Boolean>} */\nexport const empty = computed(() => root.value && openedFolder.value.isEmpty);\n\n\nwatch(meta, async (newValue, oldValue) => {\n    console.log(\"[meta]:\", meta.value);\n    const {files, folders, symlinks, errors, total, scanDate} = meta.value;\n    if (meta.value.scanDate) {\n        addMessage(\n            `files: \"${files}\" folders: \"${folders}\", symlinks: \"${symlinks}\", ` +\n            `errors: \"${errors}\", total: \"${total}\", scanDate: \"${dateToDayDateString(scanDate)}\"`\n        );\n    }\n});\n","<template>\n  <span class=\"scanPath\">\n    <span class=\"parts\" @click=\"goToRoot\" :title=\"title\">\n      <span class=\"part\"       >{{part1}}</span>\n      <span class=\"part spaced\">{{part2}}</span>\n    </span>\n    <span class=\"spaced separator\" v-if=\"showSep\">{{separator}}</span>\n  </span>\n</template>\n\n<script setup>\n//todo title\nimport {computed} from \"vue\";\nimport {scanRootPath, openedFolders, separator, openedFolder, openFolder, meta} from \"../core/folders.js\";\nimport {dateToDayDateString} from \"../util.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst title = computed(() => {\n  if (!meta.value) {\n    return;\n  }\n\n  const {\n      files, folders, symlinks,\n      charDevs, blockDevs, fifos, sockets,\n      total,\n      platform, scanDate\n  } = meta.value;\n\n  function doString(o) {\n    function pad(str) {\n      const count = 3 - Math.trunc((str.length/4));\n      return str + \"\\t\".repeat(count);\n    }\n    return Object.entries(o)\n        .map(([k, v]) => pad(k) + \": \" + v)\n        .join(\"\\n\");\n  }\n  const commonFiles = doString({files, folders, symlinks});\n  const unusualFiles = doString({charDevs, blockDevs, fifos, sockets});\n  const additional = doString({total, platform, scanDate: dateToDayDateString(scanDate)});\n\n  let result;\n  if (platform !== \"win32\") {\n    result = [commonFiles, unusualFiles, additional].join(\"\\n\");\n  } else {\n    result = [commonFiles, additional].join(\"\\n\");\n  }\n  console.log(result);\n  return result;\n});\n\nconst root = computed(() => {\n  const scanPath = [...scanRootPath.value, openedFolder.value.root.name];\n  const str = scanPath.join(separator.value);\n  if (str.startsWith(\"//\")) { // for unix\n    return str.slice(1);\n  }\n  if (meta.value?.platform === \"win32\") { // uppercase win drive letter // todo remove as unnecessary\n    return str[0].toUpperCase() + str.slice(1);\n  }\n  return str;\n});\nconst part1 = computed(() => {\n  return [...root.value].slice(0, -1).join(\"\"); // if ends with surrogate pair\n});\nconst part2 = computed(() => {\n  return [...root.value].slice(-1).join(\"\");\n});\nconst showSep = computed(() => {\n  return (openedFolders.value.length - 1) && root.value !== \"/\";\n});\n\nfunction goToRoot() {\n  const root = openedFolder.value.root;\n  debugMessageFromEntry(root);\n  openFolder(root);\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.scanPath {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  .parts {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    white-space: pre; /* to display tailing spaces */\n\n    cursor: pointer;\n    box-sizing: border-box;\n    border-bottom: transparent solid 1px;\n    &:hover {\n      background-color: var(--blue-2);\n      border-bottom: 1px solid var(--blue-1);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n    .part {\n      display: contents; // for correct selection by double click\n    }\n  }\n  .spaced {\n    letter-spacing: 2px;\n  }\n}\n</style>\n","<template>\n  <span class=\"opened-folder\">\n    <span class=\"parts\" @click=\"onClick\">\n      <span class=\"part\"       >{{part1}}</span>\n      <span class=\"part spaced\">{{part2}}</span>\n    </span>\n    <span class=\"separator spaced\" v-if=\"!isLast\">{{separator}}</span>\n  </span>\n</template>\n\n<script setup>\nimport {computed, toRefs} from \"vue\";\nimport {openFolder, separator} from \"../core/folders.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst props = defineProps([\"index\", \"count\", \"entry\"]);\nconst {index, count, entry} = toRefs(props);\n\nconst isLast = computed(() => {\n  return index.value + 1 === count.value;\n});\nconst part1 = computed(() => {\n  return [...entry.value.name].slice(0, -1).join(\"\"); // if ends with surrogate pair\n});\nconst part2 = computed(() => {\n  return [...entry.value.name].slice(-1).join(\"\");\n});\n\nfunction onClick() {\n  debugMessageFromEntry(entry.value);\n  openFolder(entry.value);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.opened-folder {\n  height: 100%;\n  display: flex;\n  align-items: center;\n  .parts {\n    height: 100%;\n    display: flex;\n    align-items: center;\n\n    width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    white-space: pre; /* to display tailing spaces */\n\n    cursor: pointer;\n    box-sizing: border-box;\n    border-bottom: transparent solid 1px;\n    &:hover {\n      background-color: var(--blue-2);\n      border-bottom: 1px solid var(--blue-1);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n    .part { // to use with max-width limitation // not works with  `display: contents;`\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: pre;\n    }\n    .part {\n      display: contents; // for correct selection by double click\n    }\n  }\n  .spaced {\n    letter-spacing: 2px;\n  }\n}\n</style>\n","<template>\n<div class=\"address\" @contextmenu=\"onContextmenu\">\n  <AddressBar_Part>\n    <AddressBar_Base/>\n  </AddressBar_Part>\n  <AddressBar_Part\n      v-for=\"(folder, i) of openedFolders.slice(1)\"\n  >\n    <AddressBar_Folder\n        :entry=\"folder\"\n        :index=\"i\"\n        :count=\"openedFolders.slice(1).length\"\n    />\n  </AddressBar_Part>\n</div>\n</template>\n\n<script setup>\nimport AddressBar_Base from \"./AddressBar_Base.vue\";\nimport AddressBar_Folder from \"./AddressBar_Folder.vue\";\nimport AddressBar_Part from \"./AddressBar_Part.vue\";\nimport {meta, openedFolder, openedFolders, separator} from \"../core/folders.js\";\n\n/** @param {MouseEvent} event */\nasync function onContextmenu(event) {\n  event.preventDefault();\n  const folderPath = [...meta.value.path, ...openedFolder.value.path.map(entry => entry.name)].join(separator.value);\n  console.log(\"Copy to clipboard:\", folderPath);\n  await navigator.clipboard.writeText(folderPath);\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.address {\n  display: flex;\n  overflow-x: scroll;\n  padding-left: 6px;\n\n  scrollbar-width: none; // firefox\n  &::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 0;\n    height: 0;\n    background: transparent;\n    display: none;\n  }\n  &:active { // todo only on onContextmenu event do it\n    border-right: var(--blue-1) solid 1px;\n  }\n}\n</style>\n","<template>\n  <div class=\"search-wrapper\">\n    <div class=\"search\">\n      <input id=\"json-scan-search-input\" type=\"text\" v-model=\"search\" ref=\"inputRef\" @focus=\"onFocus\">\n      <button @click=\"onClearClick\">Clear</button>\n    </div>\n    <label for=\"json-scan-search-input\" class=\"fuck-off-lighthouse\">.</label>\n  </div>\n</template>\n\n<script setup>\nimport {search, clearSearch} from \"../core/search.js\";\nimport {ref} from \"vue\";\n\nconst inputRef = ref();\nfunction onClearClick() {\n  clearSearch();\n  inputRef.value.focus();\n}\n\n//todo focus on double shift\n</script>\n\n<style lang=\"scss\" scoped>\n/** reset */\ninput { padding: 0 0; }\nbutton { padding: 0 0; }\n\n.fuck-off-lighthouse {\n  position: absolute;\n  top:-1000px;\n  left:-1000px;\n}\n.search-wrapper {\n  display: contents;\n}\n\n.search {\n  display: flex;\n  height: 100%;\n  label {\n    display: contents;\n  }\n  input {\n    height: 100%;\n    flex-grow: 2;\n    border: none;\n    padding-left: 6px;\n    border-bottom: transparent solid 1px;\n    box-sizing: border-box;\n    &:focus, &:hover {\n      outline: none;\n      border-bottom: var(--blue-1) solid 1px;\n    }\n  }\n  button {\n    height: 100%;\n    padding: 0 6px;\n    //outline: none;\n    outline-width: 1px;\n    outline-color: var(--blue-1);\n    border: none;\n    border-bottom: transparent solid 1px;\n    border-left: var(--gray-2) solid 1px;\n    box-sizing: border-box;\n    background-color: var(--gray-1);\n    &:hover {\n      border-bottom: var(--blue-1) solid 1px;\n      background: var(--blue-2);\n    }\n    &:active {\n      background: var(--blue-3);\n    }\n  }\n}\n</style>\n","export class FileEntry {\n    /**\n     * @param {Object} init\n     * @param {File} [init.file]\n     * @param {\"file\"|\"folder\"} init.type\n     * @param {FileEntry} [init.parent]\n     * @param {String} [init.name]\n     */\n    constructor({file, parent, type, name}) {\n        if (file) {\n            /** @type {File|undefined} */\n            this.file = file;\n        }\n        if (parent) {\n            /** @type {FileEntry|undefined} */\n            this.parent = parent;\n            parent.addChild(this);\n        }\n        if (name) {\n            /** @type {String} */\n            this._name = name;\n        }\n        /** @type {\"file\"|\"folder\"} */\n        this.type = type;\n    }\n\n    get name() {\n        return this._name || this.file?.name;\n    }\n\n    /** @param {FileEntry} entry */\n    addChild(entry) {\n        if (!this.children) {\n            /**\n             * `undefined` if there is no child\n             * @type {FileEntry[]|undefined}\n             */\n            this.children = [];\n        }\n        this.children.push(entry);\n        this.increaseContentSize(entry.size);\n    }\n\n    /** @private\n     *  @param {Number} size  */\n    increaseContentSize(size) {\n        if (!size) {\n            return;\n        }\n        if (!this._contentSize) {\n            /** @type {Number}\n             *  @private  */\n            this._contentSize = 0;\n        }\n        this._contentSize += size;\n        if (this.parent/* && size*/) {\n            this.parent.increaseContentSize(size);\n        }\n    }\n\n    /**\n     * Note: the folder size is computed on the creation step.\n     * @return {Number}\n     */\n    get size() {\n        if (this.type === \"folder\") {\n            return this._contentSize || 0;\n        }\n        return this.file?.size || 0;\n    }\n\n    get mtime() {\n        return this.file?.lastModified || 0;\n    }\n\n    /** @return {FileEntry[]} */\n    get path() {\n        if (!this.parent) {\n            return [this];\n        }\n        return [...this.parent.path, this];\n    }\n\n    /** @return {Generator<FileEntry>} */\n    *[Symbol.iterator]() {\n        yield this;\n        if (this.children) {\n            for (const child of this.children) {\n                yield * child;\n            }\n        }\n    }\n\n    /** @return {FileEntry[]} */\n    flat() {\n        return [...this];\n    }\n\n    /**\n     * @param {FileEntry[]} entries\n     * @return {FileEntry[]}\n     */\n    static flat(entries) {\n        return entries.map(e => [...e]).flat();\n    }\n\n    /**\n     * @param {DataTransferItem[]} dtItems\n     * @return {Promise<FileEntry[]>}\n     */\n    static async fromDataTransferItems(dtItems) {\n        const fileSystemEntries = await dtItemsToFileSystemEntries(dtItems);\n        console.log(\"[fileSystemEntries]:\", fileSystemEntries);\n        /** @type {FileEntry[]} */\n        const result = [];\n        for (const fileSystemEntry of fileSystemEntries) {\n            result.push(await fromFileSystemEntry(fileSystemEntry));\n        }\n        return result;\n    }\n\n    /**\n     * @param {File[]} files\n     * @return {FileEntry[]}\n     */\n    static fromFiles(files) {\n        /** @type {FileEntry[]} */\n        const result = [];\n        for (const file of files) {\n            result.push(new FileEntry({file, type: \"file\"}));\n        }\n        return result;\n    }\n}\n\n/**\n * @param {FileSystemEntry} fsEntry\n * @param {FileEntry|null} parent\n * @return {Promise<FileEntry|null>}\n */\nasync function fromFileSystemEntry(fsEntry, parent = null) {\n    if (fsEntry.isFile) {\n        try {\n            const file = await toFile(/** @type {FileSystemFileEntry} */ fsEntry);\n            return new FileEntry({file, type: \"file\", parent});\n        } catch (e) { // For example, for long path \\\\?\\M:\\...\n            console.error(\"[fromFileSystemEntry][error]\", fsEntry.name, e);\n            return null;\n        }\n    } else if (fsEntry.isDirectory) {\n        const dirEntry = new FileEntry({type: \"folder\", parent, name: fsEntry.name});\n        /** @type {AsyncGenerator<FileSystemEntry>} */\n        const entries = readFileSystemDirectoryEntry(/** @type {FileSystemDirectoryEntry} */ fsEntry);\n        for await (const entry of entries) {\n            // The entries will be attached to the parent (`dirEntry`).\n            await fromFileSystemEntry(entry, dirEntry);\n        }\n        return dirEntry;\n    }\n}\n\n/**\n * Works only with a http server\n * @param {FileSystemFileEntry} fsFileEntry\n * @return {Promise<File>}\n */\nfunction toFile(fsFileEntry) {\n    return new Promise((resolve, reject) => fsFileEntry.file(resolve, reject));\n}\n\n/**\n * @param {FileSystemDirectoryEntry} fsDirEntry\n * @return {AsyncGenerator<FileSystemEntry>}\n */\nasync function * readFileSystemDirectoryEntry(fsDirEntry) {\n    const reader = fsDirEntry.createReader();\n    let part = [];\n    do {\n        part = await new Promise((resolve, reject) => reader.readEntries(resolve, reject));\n        for (const entry of part) {\n            yield entry;\n        }\n    } while (part.length);\n}\n\n/**\n * @param {DataTransferItem[]} dtItems\n * @return {Promise<FileSystemEntry[]>}\n */\nasync function dtItemsToFileSystemEntries(dtItems) {\n    const result = [];\n    for (const entry of dtItems) {\n        result.push(await dtItemToFileSystemEntry(entry));\n    }\n    return result;\n}\n\n/**\n * @param {DataTransferItem} entry\n * @return {Promise<FileSystemEntry>}\n */\nasync function dtItemToFileSystemEntry(entry) {\n    return entry.webkitGetAsEntry();\n}\n","import {ref, computed, watchEffect, toRaw} from \"vue\";\nimport {FileEntry} from \"./FileEntry.js\";\n\n/** @type {import(\"vue\").Ref<File[]>} */\nconst files = ref([]);\n/** @type {import(\"vue\").Ref<DataTransferItem[]>} */\nconst dtItems = ref([]);\n\n/** @type {import(\"vue\").Ref<Boolean>} */\nexport const dropHover = ref(false);\n/** @type {import(\"vue\").Ref<Number>} */\nexport const dropHoverItemCount = ref(0);\n/** @type {import(\"vue\").Ref<String[]>} */\nexport const dropHoverTypes = ref([]);\n\n/** @type {import(\"vue\").Ref<FileEntry[]>} */\nexport const fileEntries = ref([]);\n/** @type {import(\"vue\").Ref<Boolean>} */\nexport const parsing = ref(false);\nwatchEffect(async () => {\n    const time = Date.now();\n    parsing.value = true;\n    if (dtItems.value.length) {\n        fileEntries.value = await FileEntry.fromDataTransferItems(dtItems.value);\n    } else {\n        fileEntries.value = FileEntry.fromFiles(files.value);\n    }\n    parsing.value = false;\n    console.log(\"[FileEntry parsing][time]:\", Date.now() - time, \"ms\");\n    console.log(\"[fileEntries]\", toRaw(fileEntries.value));\n});\n\n/** @type {import(\"vue\").ComputedRef<FileEntry>} */\nexport const file = computed(() => {\n    return fileEntries.value[0];\n});\n/** @type {import(\"vue\").ComputedRef<Number>} */\nexport const count = computed(() => {\n    return fileEntries.value.length;\n});\n\n/** @param {DataTransfer} dataTransfer */\nexport function setDataTransferHover(dataTransfer) {\n    const count = dataTransfer.items.length;\n    const allTypes = [...dataTransfer.items].map(item => item.type);\n    const types = [...new Set(allTypes)];\n\n    dropHoverItemCount.value = count;\n    dropHoverTypes.value = types;\n    console.log(\"[setDataTransferHover]:\", count, types);\n}\nexport function resetDataTransferHover() {\n    dropHoverItemCount.value = 0;\n    dropHoverTypes.value = [];\n}\n\n/** @param {DataTransfer} dataTransfer */\nexport function setDataTransfer(dataTransfer) {\n    console.log(dataTransfer);\n    setFiles(dataTransfer.files);\n    setDtItems(dataTransfer.items);\n}\n/** @param {FileList} filelist */\nexport function setFiles(filelist) {\n    /** @type {File[]} */\n    const _files = [...filelist];\n    files.value = _files;\n    console.log(\"[setFiles]:\", _files);\n}\n/** @param {DataTransferItemList} items */\nexport function setDtItems(items) {\n    /** @type {DataTransferItem[]} */\n    const _dtItems = [...items];\n    dtItems.value = _dtItems;\n    console.log(\"[setDtItems]:\", _dtItems); // bug in chromium: `type` and `kind` is \"\" in the console when expand the array.\n\n    console.log(_dtItems[0].kind);\n    console.log(_dtItems[0].type);\n}\nexport function resetDtItems() {\n    dtItems.value = [];\n}\n","<template>\n  <div class=\"default-hover-text\">{{text}}</div>\n</template>\n\n<script setup>\nimport {computed} from \"vue\";\nimport {dropHoverItemCount} from \"./file-input-state.js\";\nconst text = computed(() => {\n  const postfix = dropHoverItemCount.value > 1 ? \"s\" : \"\";\n  return `Drop ${dropHoverItemCount.value} file${postfix}`;\n});\n</script>\n\n<style scoped>\n.default-hover-text {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n</style>\n","<template>\n  <div class=\"default-prompt-text\" :title=\"names\">\n    <div class=\"parsing\" v-if=\"parsing\">Parsing...</div>\n    <div v-else-if=\"count\">{{count}} file{{count > 1 ? \"s\" : \"\"}}</div>\n    <div v-else style=\"display: contents\"><slot>Select file</slot></div>\n  </div>\n</template>\n\n<script setup>\n//todo split to 2 comps\n//todo use props\n\nimport {count, fileEntries, parsing} from \"./file-input-state.js\";\nimport {computed} from \"vue\";\nconst names = computed(() => {\n  return fileEntries.value.slice(0, 50).map(file => file.name).join(\"\\n\");\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.default-prompt-text {\n  width: inherit;\n  height: inherit;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  cursor: pointer;\n\n  &:hover {\n    //text-decoration: underline;\n  }\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n</style>\n","<template>\n<div\n    class=\"file-input\"\n    ref=\"fileInputElem\"\n    :class=\"{'drop-hover': dropHover}\"\n    tabindex=\"0\"\n    @keydown=\"onKeyDown\"\n>\n  <label>\n    <input type=\"file\"\n           :accept=\"accept\"\n           :multiple=\"multiple\"\n           @change=\"onFileInputChange\"\n           style=\"display: none\"\n    >\n\n    <span class=\"content hover\" v-if=\"dropHover\">\n      <slot name=\"hover\"><FileInputDefaultHoverText/></slot>\n    </span>\n    <span class=\"content selected\" v-else-if=\"file && !parsing\">\n      <slot name=\"selected\"><FileInputDefaultText/></slot>\n    </span>\n    <span class=\"content prompt\" v-else>\n      <slot name=\"prompt\"><FileInputDefaultText/></slot>\n    </span>\n\n  </label>\n  <teleport to=\"body\">\n    <div class=\"file-input-hover-modal\" :class=\"{'drop-hover': dropHover}\"></div>\n  </teleport>\n</div>\n</template>\n\n<script setup>\nimport FileInputDefaultHoverText from \"./FileInputDefaultHoverText.vue\";\nimport FileInputDefaultText from \"./FileInputDefaultText.vue\";\n\nimport {ref, toRefs, onMounted, computed} from \"vue\";\nimport {\n  parsing,\n  file,\n  dropHover,\n  setFiles,\n  setDataTransfer,\n  setDataTransferHover,\n  resetDataTransferHover, resetDtItems\n} from \"./file-input-state.js\";\n\nconst props = defineProps({\n  globalDropZone: {\n    type: Boolean,\n    default: true\n  },\n  accept: {\n    type: String,\n    default: \"*/*\"\n  },\n  multiple: {\n    type: Boolean,\n    default: true\n  },\n});\nconst {\n  /** @type {import(\"vue\").Ref<Boolean>} */\n  globalDropZone,\n} = toRefs(props);\n\n\n/** @param {Event} event */\nfunction onFileInputChange(event) {\n  const fileElem = event.target;\n  setFiles(fileElem.files);\n  resetDtItems();\n}\n\n\n/** @type {import(\"vue\").Ref<HTMLElement|null>} */\nconst fileInputElem = ref(null);\n/** @type {import(\"vue\").Ref<HTMLElement>} */\nconst dropZone = computed(() => {\n  if (globalDropZone.value) {\n    return document.body;\n  }\n  return fileInputElem.value;\n});\nonMounted(() => {\n  if (!globalDropZone.value) {\n    disableDragOverNotDropZone();\n  }\n  initListeners();\n});\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nfunction initListeners() {\n  dropZone.value.addEventListener(\"drop\", onDrop);\n  dropZone.value.addEventListener(\"dragover\", onDragOver);\n  dropZone.value.addEventListener(\"dragleave\", onDragLeave);\n  dropZone.value.addEventListener(\"dragenter\", onDragEnter);\n}\nfunction onDrop(event) {\n  stopEvent(event);\n  dropHover.value = false;\n  setDataTransfer(event.dataTransfer);\n}\nfunction onDragOver(event) {\n  stopEvent(event);\n  event.dataTransfer.dropEffect = \"copy\";\n}\nfunction onDragEnter(event) {\n  stopEvent(event);\n  if (!dropHover.value) {\n    dropHover.value = true;\n  } else {\n    return;\n  }\n  setDataTransferHover(event.dataTransfer);\n}\nfunction onDragLeave(event) {\n  stopEvent(event);\n  if (!dropZone.value.contains(event.relatedTarget)) {\n    dropHover.value = false;\n    resetDataTransferHover();\n  }\n}\n\nfunction disableDragOverNotDropZone() {\n  /** @param {DragEvent} event */\n  const dragOverCallback = event => {\n    if (!dropZone.value.contains(event.target)) {\n      stopEvent(event);\n      event.dataTransfer.dropEffect = \"none\";\n    }\n  };\n  document.body.addEventListener(\"dragover\", dragOverCallback);\n}\n\nfunction onKeyDown(event) {\n  if (event.key === \"Enter\") {\n    fileInputElem.value.querySelector(\"label\").click();\n  }\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.file-input {\n  transition: background-color 0.1s;\n  border: solid 1px var(--file-input-border);\n  box-sizing: border-box;\n  &.drop-hover {\n    background-color: var(--drop-file-hover);\n    transition: background-color 0.1s;\n  }\n  &:hover {\n    background-color: var(--drop-hover);\n  }\n  &:active {\n    background-color: var(--drop-active);\n  }\n}\n.file-input, label, .content {\n  width: 100%;\n  height: 100%;\n}\n\n.file-input-hover-modal {\n  height: 50px;\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n  background-image: linear-gradient(to top, rgba(0,0,0,0.15), rgba(0,0,0,0.005));\n\n  transition: opacity 0.25s ease-out;\n  opacity: 0;\n  &.drop-hover {\n    opacity: 1;\n  }\n}\n</style>\n\n\n\n\n\n\n\n\n\n\n","<template>\n  <div class=\"file-input-wrapper\">\n    <FileInput :accept=\"`application/json,application/gzip`\" :multiple=\"false\"/>\n  </div>\n</template>\n\n<script setup>\nimport {setScan} from \"../core/folders.js\";\n\nimport {watch} from \"vue\";\nimport FileInput from \"./file-input/FileInput.vue\";\nimport {file} from \"./file-input/file-input-state.js\";\n\nwatch(file, () => {\n  if (file.value) {\n    void setScan(file.value.file);\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n\n::v-deep(.file-input) {\n  border-right: 0;\n  border-left:  0;\n  outline-width: 1px;\n  outline-color: var(--blue-1);\n}\n.file-input-wrapper {\n  display: grid;\n  justify-content: center;\n  grid-template-columns: 100%;\n  grid-template-rows: 100%;\n  width: 100%;\n  min-height: 35px;\n}\n</style>\n","<template>\n  <tr class=\"row\"\n      @click=\"onClick\"\n      @mousedown=\"onMousedown\"\n      @mouseover=\"onMouseover\"\n      @mouseleave=\"onMouseleave\"\n      :title=\"title\"\n      :class=\"{error}\"\n  >\n      <td class=\"icon\">{{icon}}</td>\n      <td class=\"name\">{{entry.name}}</td>\n      <td class=\"size\" :class=\"sizeClass\">{{size}}</td>\n      <td class=\"mtime\">{{mtime}}</td>\n<!--      <td class=\"type\">{{entry.type}}</td>-->\n<!--      <td class=\"filler\"></td>-->\n  </tr>\n</template>\n\n<script setup>\nimport {toRefs, computed} from \"vue\";\nimport {meta, openedFolder, openFolder} from \"../core/folders.js\";\nimport {bytesToSizeWinLike, dateToDayDateTimeString, isImage, isVideo, isAudio} from \"../util.js\";\nimport {hoveredEntry} from \"../core/entries.js\";\nimport {debugMessageFromEntry} from \"../core/debug.js\";\n\nconst props = defineProps([\"entry\"]);\n\n/** @type {import(\"vue\").Ref<SimpleEntry>} */\nconst entry = toRefs(props).entry;\n\nconst size = computed(() => {\n  return entry.value.hasErrors ? \"\" : bytesToSizeWinLike(entry.value.size);\n});\n\nconst sizeClass = computed(() => {\n  if (size.value === \"0 B\") {\n    return \"Z\";\n  }\n  return size.value.split(\" \")[1];\n});\n\n\n/** @type {import(\"vue\").Ref<Boolean>} */\nconst error = computed(() => {\n  return entry.value.hasErrors;\n});\n\n/** @type {import(\"vue\").ComputedRef<String>} */\nconst mtime = computed(() => {\n  if (entry.value.mtime === undefined) {\n    return \"\";\n  }\n  const time = dateToDayDateTimeString(entry.value.mtime, false);\n  return time.slice(0, -3); // trim seconds\n});\n\n/** @type {import(\"vue\").ComputedRef<String>} */\nconst title = computed(() => {\n  if (entry.value.hasErrors) {\n    return JSON.stringify(entry.value.errors[0], null, \" \");\n  }\n  if (entry.value.type === \"symlink\") {\n    return entry.value.pathTo;\n  }\n});\n\n/** @type {import(\"vue\").Ref<String>} */\nconst icon = computed(() => {\n  const type = entry.value.type;\n  if (type === \"folder\") {\n    return \"📁\";\n  } else if (type === \"file\") {\n    const name = entry.value.name;\n    if (isVideo(name)) {\n      return \"🎦\";\n    } else if (isImage(name)) {\n      return \"🖼\";\n    } else if (isAudio(name)) {\n      return \"🎵\";\n    }\n    return \"📄\";\n  } else if (type === \"symlink\") {\n    return \"🔗\";\n  }\n  return \"👾\";\n});\n\nfunction onClick(event) {\n  debugMessageFromEntry(entry.value);\n\n  if (entry.value.type === \"folder\") {\n    openFolder(entry.value);\n  }\n}\n\n/** @param {MouseEvent} event */\nfunction onMousedown(event) {\n  const MIDDLE_BUTTON = 1;\n  const RIGHT_BUTTON = 2;\n  if (event.button === MIDDLE_BUTTON) {\n    event.preventDefault();\n    console.log(\n        entry.value,\n        entry.value.getPathString(meta.value)\n    );\n\n    if (openedFolder.value !== entry.value.parent) {\n      openFolder(entry.value.parent);\n    }\n  }\n}\n\nfunction onMouseover(event) {\n  hoveredEntry.value = entry.value;\n}\nfunction onMouseleave(event) {\n  hoveredEntry.value = null;\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.row {\n  width: 100%;\n  min-height: 28px;\n  display: flex;\n  align-items: center;\n  &:hover {\n    background-color: var(--blue-2);\n  }\n  * {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n  }\n  td {\n    &.icon {\n      border-left: 2px solid transparent;\n      width: 24px;\n      text-align: center;\n      user-select: none;\n    }\n    &.name {\n      display: block;\n      //width: 880px; // gets it from the parent\n      white-space: pre; // to display tailing spaces\n    }\n    &.size {\n      text-align: end;\n      min-width: 80px;\n      &.Z {\n        color: #888;\n      }\n      &.B {\n        color: #666;\n      }\n      &.KB {\n        color: #0b0;\n      }\n      &.MB {\n        color: #0070dd;\n      }\n      &.GB {\n        color: #a335ee;\n      }\n      &.TB {\n        color: #ff8000;\n      }\n    }\n    &.mtime {\n      text-align: end;\n      width: 145px;\n      color: #777;\n    }\n    &.type {\n      text-align: end;\n      width: 58px;\n      user-select: none;\n    }\n    //&.filler {\n    //  width: inherit;\n    //}\n  }\n  &.error {\n    .icon {\n      border-left: 2px solid red;\n    }\n  }\n}\n</style>\n","<template>\n<div class=\"intersection\" ref=\"intersection\"></div>\n</template>\n\n<script setup>\nimport {onBeforeUnmount, onMounted, ref} from \"vue\";\nimport {count, limit} from \"../core/entries.js\";\n\n/** @param {IntersectionObserverEntry[]} entries */\nconst callback = (entries) => {\n  const [entry] = entries;\n  if (entry.isIntersecting) {\n    if (count.value > limit.value) {\n      limit.value = limit.value + 50;\n    }\n  }\n}\nconst observer = new IntersectionObserver(callback);\n\n/** @type {import(\"vue\").Ref<HTMLElement>} */\nconst intersection = ref(null);\n\nonMounted(() => {\n  observer.observe(intersection.value);\n});\nonBeforeUnmount(() => {\n  observer.disconnect();\n});\n</script>\n\n<style scoped>\n.intersection {\n  width: 100%;\n  position: relative;\n  bottom: 120px;\n}\n</style>\n","<template>\n  <div class=\"content\"\n       @contextmenu=\"onContextMenu\"\n  >\n    <table class=\"rows\" v-if=\"listLimited.length\">\n      <tbody>\n        <Row v-for=\"entry of listLimited\" :entry=\"entry\" :key=\"`${entry.pathString}//${entry.size}`\"/>\n        <IntersectionRow/>\n      </tbody>\n    </table>\n    <div class=\"empty-message\" v-if=\"empty && !error\">\n      <span>The folder is empty.</span>\n    </div>\n    <div class=\"error-message\" v-if=\"error\">\n      <div>\n        <h2>Error</h2>\n        <table>\n          <tr>\n            <td>syscall</td>\n            <td><pre>{{error.syscall}}</pre></td>\n          </tr>\n          <tr>\n            <td>code</td>\n            <td><pre>{{error.code}}</pre></td>\n          </tr>\n          <tr>\n            <td>errno</td>\n            <td><pre>{{error.errno}}</pre></td>\n          </tr>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport Row from \"./Row.vue\";\nimport IntersectionRow from \"./IntersectionRow.vue\";\nimport {goBack, empty, openedFolder} from \"../core/folders.js\";\nimport {listLimited} from \"../core/entries.js\";\nimport {computed, onMounted, ref} from \"vue\";\n\n/** @type {import(\"vue\").ComputedRef<ScanError>} */\nconst error = computed(() => {\n  if (openedFolder.value.hasErrors) {\n    return openedFolder.value.errors[0];\n  }\n  return false;\n});\n\nfunction onContextMenu(event) {\n  event.preventDefault();\n  goBack();\n}\n\nconst nameElemWidth = ref(\"880px\");\nonMounted(() => {\n  const w = document.body.offsetWidth;\n  if (w < 1280) {\n    let px = 880 - (1280 - w);\n    px = px < 140 ? 140 : px;\n    nameElemWidth.value = `${px}px`;\n  }\n});\n\n</script>\n\n\n<style lang=\"scss\" scoped>\n::v-deep(.row .name) {\n  width: v-bind(nameElemWidth);\n}\n\n.content {\n  width: 100%;\n  overflow: auto;\n  .rows {\n    width: 100%;\n    overflow: auto;\n  }\n  .empty-message {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--gray-2);\n  }\n  .error-message {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    color: var(--red-1);\n    div {\n      h2 {\n        margin: 0;\n        padding-bottom: 6px;\n        padding-left: 2px;\n      }\n      pre {\n        display: inline;\n      }\n      td {\n        padding-right: 3px;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"status\">\n    <span>Items count: {{count}}</span>\n    <span v-show=\"hoveredEntry\">. Hover item's size: {{size}}</span>\n  </div>\n</template>\n\n<script setup>\nimport {count, hoveredEntry} from \"../core/entries.js\";\nimport {computed} from \"vue\";\nimport {bytesToSizeWinLike} from \"../util.js\";\n\nconst size = computed(() => hoveredEntry.value?.size && bytesToSizeWinLike(hoveredEntry.value.size));\n</script>\n\n<style scoped>\n.status {\n  padding: 2px 2px 2px 6px;\n}\n</style>\n","<template>\n  <div class=\"switch\">\n    <button\n        class=\"order-by-name\"\n        title=\"Order by name\"\n        @click=\"onClick('name')\"\n        :class=\"{active: orderBy === 'name'}\"\n    >{{ orders.name  ? \"N\" : \"n\"}}</button>\n    <button\n        class=\"order-by-size\"\n        title=\"Order by size\"\n        @click=\"onClick('size')\"\n        :class=\"{active: orderBy === 'size'}\"\n    >{{ orders.size  ? \"S\" : \"s\"}}</button>\n    <button\n        class=\"order-by-date\"\n        title=\"Order by date\"\n        @click=\"onClick('mtime')\"\n        :class=\"{active: orderBy === 'mtime'}\"\n    >{{ orders.mtime ? \"D\" : \"d\"}}</button>\n  </div>\n</template>\n\n<script setup>\nimport {orderBy, toggleOrder, orders} from \"../core/entries.js\";\n\n// todo optimise reversing.\n// todo cancel sorting (for large arrays) on new click while sorting\n\n/** @param {\"name\"|\"size\"|\"mtime\"} value */\nfunction onClick(value) {\n  if (orderBy.value === value) {\n    toggleOrder();\n  }\n  orderBy.value = value;\n}\n\n</script>\n\n<style lang=\"scss\" scoped>\n.switch {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\nbutton.active {\n  font-weight: bold;\n}\n\nbutton {\n  width: 22px;\n  margin: 1px 3px;\n  padding: 2px 6px;\n  outline-width: 1px;\n  outline-color: var(--blue-1);\n  border: 1px solid var(--gray-2);\n  box-sizing: border-box;\n  background-color: var(--gray-1);\n  &:hover {\n    border-bottom: var(--blue-1) solid 1px;\n    background: var(--blue-2);\n  }\n  &:active {\n    background: var(--blue-3);\n  }\n}\n</style>\n","<template>\n  <div class=\"memory-consuming-component\"\n       v-if=\"isSupported\"\n       :style=\"{width: percent + '%'}\"\n       :title=\"'Heap size: ' + formattedSize + (showHint ? '\\n' + hint : '')\"\n       @mousedown=\"onMousedown\"\n  >\n    <div class=\"visible\"\n        :class=\"{over100}\"\n    ></div>\n    <div class=\"invisible\"></div>\n  </div>\n</template>\n\n<script setup>\nimport {bytesToSizeWinLike} from \"../util.js\";\nimport {computed, ref, onMounted, onBeforeUnmount} from \"vue\";\n\n\n/** @type {import(\"vue\").Ref<{jsHeapSizeLimit: number, totalJSHeapSize: number, usedJSHeapSize: number}>} */\nconst memory = ref(performance.memory);\nconst jsHeapSizeLimit = computed(() => memory.value.jsHeapSizeLimit);\nconst totalJSHeapSize = computed(() => memory.value.totalJSHeapSize);\nconst usedJSHeapSize  = computed(() => memory.value.usedJSHeapSize);\n\nconst intervalId = ref(null);\nconst over100 = ref(false);\nconst showHint = ref(false);\nconst hint = \"Use middle mouse button click to clear the console.\";\n\nconst percent = computed(() => {\n  const percent = totalJSHeapSize.value / (jsHeapSizeLimit.value / 100);\n  over100.value = percent > 100;\n  return over100.value ? 100 : percent;\n});\n\nconst formattedSize = computed(() => bytesToSizeWinLike(totalJSHeapSize.value));\nconst isSupported = computed(() => memory.value);\n\nonMounted(() => {\n  if (!isSupported.value) {\n    return;\n  }\n  intervalId.value = setInterval(() => {\n    memory.value = performance.memory;\n  }, 1000);\n});\nonBeforeUnmount(() => {\n  if (intervalId.value) {\n    clearInterval(intervalId.value);\n  }\n});\n\n/** @param {MouseEvent} event */\nfunction onMousedown(event) {\n  const LEFT_BUTTON = 0;\n  const MIDDLE_BUTTON = 1;\n  const RIGHT_BUTTON = 2;\n  if (event.button === LEFT_BUTTON) {\n    showHint.value = true;\n  }\n  if (event.button === MIDDLE_BUTTON) {\n    event.preventDefault();\n    showHint.value = false;\n    console.clear();\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.memory-consuming-component {\n  position: absolute;\n  left: 0;\n  top: 0;\n  > div {\n    width: 100%;\n  }\n  .visible {\n    background-color: #415aff;\n    height: 2px;\n    &.over100 {\n      background-color: #e30000;\n    }\n  }\n  &:active .visible {\n    background-color: #415aff80;\n  }\n  .invisible {\n    height: 3px;\n  }\n}\n</style>\n","<template>\n  <div class=\"scan-parsing-progress-component\"\n       v-if=\"scanParsing || show100\"\n       :style=\"{width: scanParsingProgress + '%'}\"\n  >\n    <div class=\"visible\"></div>\n  </div>\n</template>\n\n<script setup>\nimport {scanParsing, scanParsingProgress} from \"../core/state.js\";\nimport {ref, watchEffect} from \"vue\";\nimport {sleep} from \"../util.js\";\n\nconst show100 = ref(false);\nwatchEffect(async () => {\n  if (scanParsingProgress.value === 100) {\n    show100.value = true;\n    await sleep(16);\n    show100.value = false;\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.scan-parsing-progress-component {\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n  top: 0;\n  > div {\n    width: 100%;\n  }\n  .visible {\n    background-color: var(--blue-1);\n    height: 4px;\n  }\n}\n</style>\n","<template>\n  <div class=\"main\">\n    <MemoryConsuming/>\n    <ScanProgressBar/>\n    <Switch     style=\"grid-area: switch;\"/>\n    <AddressBar style=\"grid-area: address;\"/>\n    <Search     style=\"grid-area: search;\"/>\n    <Tabs       style=\"grid-area: tabs;\"/>\n    <Guide      style=\"grid-area: content;\" v-if=\"showGuide\"/>\n    <InnerModal style=\"grid-area: content;\" v-else-if=\"scanParsing && searchAwaiting\">\n      [Search]: Scan parsing awaiting\n    </InnerModal>\n    <Content    style=\"grid-area: content;\" v-else/>\n    <Status     style=\"grid-area: status;\"/>\n    <Debug      style=\"grid-area: debug;\"/>\n    <a class=\"readme\" title=\"Open Readme\" href=\"https://github.com/AlttiRi/directory-snapshot-explorer#file-manager-snapshot-explorer\" target=\"_blank\"><i>i</i></a>\n  </div>\n</template>\n\n<script setup>\nimport AddressBar from \"./AddressBar.vue\";\nimport Search from \"./Search.vue\";\nimport Tabs from \"./Tabs.vue\";\nimport Content from \"./Content.vue\";\nimport Status from \"./Status.vue\";\nimport Switch from \"./Switch.vue\";\nimport Debug from \"./Debug.vue\";\nimport Guide from \"./Guide.vue\";\nimport InnerModal from \"./InnerModal.vue\";\nimport MemoryConsuming from \"./MemoryConsuming.vue\";\nimport ScanProgressBar from \"./ScanProgressBar.vue\";\nimport {computed, onMounted} from \"vue\";\nimport {meta, setScan} from \"../core/folders.js\";\nimport {search} from \"../core/search.js\";\nimport {bytesToSize, bytesToSizeWinLike} from \"../util.js\";\nimport {scanParsing, searchAwaiting} from \"../core/state.js\";\nimport {orderBy, toggleOrder} from \"../core/entries.js\";\n\nglobalThis.bytesToSize = bytesToSize;\nglobalThis.bytesToSizeWinLike = bytesToSizeWinLike;\n\n\n// some kind of hack, but okay // don't show if a file selected, or remote scan is loading\nconst showGuide = computed(() => !meta.value && !new URL(location.href).searchParams.get(\"filepath\"));\n\n\n// Already opened directory, no need to open with input\nonMounted(async () => {\n  const url = new URL(location.href);\n  const filepath = url.searchParams.get(\"filepath\");\n  const sort = url.searchParams.get(\"sort\") || url.searchParams.get(\"order\");\n  if ([\"name\", \"size\", \"mtime\"].includes(sort)) {\n    orderBy.value = sort;\n    if ([\"true\", \"1\"].includes(url.searchParams.get(\"desc\"))) {\n      toggleOrder();\n    }\n  }\n  if (filepath) {\n    /** @type {Response} */\n    const response = await fetch(filepath);\n    await setScan(response);\n  }\n  const _search = url.searchParams.get(\"search\");\n  if (_search) {\n    search.value = _search;\n  }\n});\n\n</script>\n\n<style lang=\"scss\" scoped>\n.main {\n  grid-template-areas: \"switch address search \"\n                       \"tabs   content content\"\n                       \"status status  status \"\n                       \"debug  debug   debug  \";\n\n  display: grid;\n  grid-template-columns: 7em 2fr 1fr;\n  grid-template-rows:    2em 1fr;\n\n  height: 720px;\n  max-height: 100vh;\n  width: 1280px;\n  max-width: 100%;\n  box-sizing: border-box;\n\n  grid-gap: 1px;\n  border: 1px solid var(--gray-2);\n  background-color: var(--gray-2);\n  * {\n    background-color: white;\n  }\n}\n.readme {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  padding: 2px 8px;\n  margin: 1px;\n  color: darkgray;\n  text-decoration: none;\n}\n</style>\n","import {createApp} from \"vue\";\nimport App from \"./App.vue\";\n\ncreateApp(App).mount(\"#app\");\n"],"names":["relList","document","createElement","supports","link","querySelectorAll","processPreload","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","fetch","href","p","setImmediate","globalThis","port1","port2","MessageChannel","queue","onmessage","shift","callback","postMessage","push","sleep","ms","Promise","resolve2","setTimeout","videoExtensions","imageExtensions","audioExtensions","firefoxDateFix","dateValue","input","String","replace","dateToDayDateString","utc","_date","Date","pad2","str","toString","padStart","console","warn","_utc","year","month","date","dateToDayDateTimeString","hours","minutes","seconds","time","async","iterateAsyncDataSource","dataSource","Response","body","ReadableStream","stream","reader","getReader","done","value","read","iterateReadableStream","Blob","part","blob","chunkSize","index","blobChunk","slice","size","blob2","Uint8Array","arrayBuffer","iterateBlob","bytesToSize","bytes","decimals","i","Math","floor","log","Number","parseFloat","pow","toFixed","bytesToSizeWinLike","result","number","trunc","toPrecision","toTruncPrecision3","blue","text","sort","ref","orderBy","orders","name","mtime","reverseOrder","computed","toggleOrder","compare","Intl","Collator","numeric","sensitivity","comparator","pre","cur","k","entries","openedFolder","folders","files","symlinks","fifos","charDevs","blockDevs","sockets","limit","list","search","length","searchResult","listLimited","count","hoveredEntry","debugMessage","addMessage","message","appendMessage","debugMessageFromEntry","entry","isProxy","toRaw","hasErrors","_a","btime","entryTypes","SimpleEntry","constructor","parent","errorsIDMap","this","_size","errors","map","id","get","pathTo","content","addChild","children","increaseContentSize","addHardlinks","entries2","total","hardlinks","hardlinksTotal","_contentSize","filter","e","isEmpty","Boolean","root","path","contentTypesStats","getContentTypesStats","_getContentTypesStats","deep","target","child","timeEnd","Symbol","iterator","flat","pathString","getPathString","meta2","names","pathStr","join","separator","startsWith","EntryStreamParser","rootId","Map","hidMap","setMeta","meta","errorsMap","Object","v","code","syscall","errno","split","parse","sEntriesPart","rootUpdated","pid","simpleEntry","set","hid","array","processed","processHIDMapAsync","simpleEntries","timeNow","now","totalLinks","forEach","then","folderDummy","scanParsing","scanParsingProgress","searching","searchAwaiting","clearSearch","shallowRef","setSearchResult","rawResult","defineProperty","addSearchResultToGlobalThis","sortSearch","timeTotal","triggerRef","watch","resolve","scanParsingCompleted","simplify","toLowerCase","watchEffect","r","window","addEventListener","event","key","querySelector","newValue","dispatchEvent","Event","performSearchDebounced","runnable","timerId","clearTimeout","apply","arguments","debounce","performSearch","searchSync","URL","location","searchParams","localStorage","setItem","title","folder","request","folderRaw","isReactive","time1","performance","searchText","search2","strict","normalized","searchHelp","subStringMatcher","subSearch","starts","ends","endsWith","stringMatcher","string","substring","justSearch","findAll","some","prefix","url","hostname","pathname","pathnameEndsWithSlash","resourceFullName","match","resName","ext","resExt","_b","groups","r1","RegExp","regex","defaultPrefix","caret","dollar","percent","sizeString1","decimal1","prefix1","exclamations","plus","minus","tildes","sizeString2","decimal2","prefix2","_c","multiplyByPrefix","prefixes","indexOf","extra1","extra2","sizeNum","replaceAll","size2Num","size2","dec1","dec2","rangeSearch","a","b","_min","max","min","includes","count2","diff","orders2","from","to","word","parts","o","curWord","searcher","resultSet","Set","allSize","reduce","acc","val","computeEntrySize","filesSize","debug.appendMessage","excludeSet","childrenSize","has","predicate","res","partSize","list2","takePart","folderEntry","listAllEntries","curTime","parseScan","parser","contentType","headers","isGZip","obj","decoder","TextDecoder","textParser","TextParser","uint8Array","pakoIsLoaded","src","reject","onload","onerror","crossOrigin","append","appendScript","loadPako","chunks","inflator","pako","Inflate","prototype","onData","chunk","u8Array","err","error","msg","unGZipAsyncIterator","textPart","decode","scanResultEntries","parsePart","parseGZippedJSONScan","isJSON","streamParseJSONScan","oldValue","__publicField","trimComma","handleStart","line","objects","metaLines","startHandled","handleLine","isLastLine","buffer","isLastPart","lines","JSON","updateParsingState","execution","abortRequested","_promise","_resolve","abort","start","abortIfRequested","setScan","metaInited","rootInited","startTime","processedTotal","scanMeta","rootEntry","rootContentUpdated","percentStr","openFolder","scanRootPath","openedFolders","empty","files2","scanDate","platform","doString","repeat","pad","commonFiles","unusualFiles","additional","root2","toUpperCase","part1","part2","showSep","goToRoot","root3","toRefs","props","isLast","onClick","onContextmenu","preventDefault","folderPath","navigator","clipboard","writeText","inputRef","onClearClick","focus","FileEntry","file","file2","_name","lastModified","fromDataTransferItems","dtItems2","fileSystemEntries","dtItemToFileSystemEntry","dtItemsToFileSystemEntries","fileSystemEntry","fromFileSystemEntry","fromFiles","fsEntry","isFile","fsFileEntry","isDirectory","dirEntry","fsDirEntry","createReader","readEntries","readFileSystemDirectoryEntry","webkitGetAsEntry","dtItems","dropHover","dropHoverItemCount","dropHoverTypes","fileEntries","parsing","setDataTransfer","dataTransfer","setFiles","items","_dtItems","kind","setDtItems","filelist","_files","postfix","globalDropZone","onFileInputChange","fileInputElem","dropZone","stopEvent","stopPropagation","onDrop","onDragOver","dropEffect","onDragEnter","allTypes","item","types","setDataTransferHover","onDragLeave","contains","relatedTarget","onKeyDown","click","onMounted","dragOverCallback","disableDragOverNotDropZone","sizeClass","stringify","icon","filename","isVideo","isImage","isAudio","onMousedown","button","onMouseover","onMouseleave","observer","IntersectionObserver","isIntersecting","intersection","onBeforeUnmount","disconnect","onContextMenu","nameElemWidth","w","offsetWidth","px","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","intervalId","over100","showHint","percent2","formattedSize","isSupported","clear","setInterval","clearInterval","show100","showGuide","filepath","sort2","response","_search","createApp","mount"],"mappings":"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"}